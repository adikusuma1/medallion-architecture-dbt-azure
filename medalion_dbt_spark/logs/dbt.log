[0m21:49:13.289455 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001B086302680>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001B0844FAB60>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001B0844FA890>]}


============================== 21:49:13.289455 | a0d785b0-efd6-41c4-8f93-06201a3f762a ==============================
[0m21:49:13.289455 [info ] [MainThread]: Running with dbt=1.10.1
[0m21:49:13.289455 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'debug': 'False', 'version_check': 'True', 'log_path': 'D:\\Academic-Project\\Portofolio Data Engineer\\medalion_dbt_spark\\logs', 'fail_fast': 'False', 'profiles_dir': 'C:\\Users\\M S I\\.dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'None', 'quiet': 'False', 'no_print': 'None', 'log_format': 'default', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'invocation_command': 'dbt debug', 'target_path': 'None', 'introspect': 'True', 'send_anonymous_usage_stats': 'True'}
[0m21:49:13.326191 [info ] [MainThread]: dbt version: 1.10.1
[0m21:49:13.330974 [info ] [MainThread]: python version: 3.10.11
[0m21:49:13.330974 [info ] [MainThread]: python path: D:\Academic-Project\Portofolio Data Engineer\DE-project\Scripts\python.exe
[0m21:49:13.330974 [info ] [MainThread]: os info: Windows-10-10.0.26100-SP0
[0m21:49:14.145050 [debug] [MainThread]: Spark adapter: Setting pyhive.hive logging to ERROR
[0m21:49:14.145050 [debug] [MainThread]: Spark adapter: Setting thrift.transport logging to ERROR
[0m21:49:14.145050 [debug] [MainThread]: Spark adapter: Setting thrift.protocol logging to ERROR
[0m21:49:14.776013 [info ] [MainThread]: Using profiles dir at C:\Users\M S I\.dbt
[0m21:49:14.777012 [info ] [MainThread]: Using profiles.yml file at C:\Users\M S I\.dbt\profiles.yml
[0m21:49:14.778013 [info ] [MainThread]: Using dbt_project.yml file at D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\dbt_project.yml
[0m21:49:14.778013 [info ] [MainThread]: adapter type: databricks
[0m21:49:14.779829 [info ] [MainThread]: adapter version: 1.10.3
[0m21:49:14.889959 [info ] [MainThread]: Configuration:
[0m21:49:14.889959 [info ] [MainThread]:   profiles.yml file [[32mOK found and valid[0m]
[0m21:49:14.889959 [info ] [MainThread]:   dbt_project.yml file [[32mOK found and valid[0m]
[0m21:49:14.889959 [info ] [MainThread]: Required dependencies:
[0m21:49:14.893893 [debug] [MainThread]: Executing "git --help"
[0m21:49:14.989970 [debug] [MainThread]: STDOUT: "b"usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--no-lazy-fetch]\n           [--no-optional-locks] [--no-advice] [--bare] [--git-dir=<path>]\n           [--work-tree=<path>] [--namespace=<name>] [--config-env=<name>=<envvar>]\n           <command> [<args>]\n\nThese are common Git commands used in various situations:\n\nstart a working area (see also: git help tutorial)\n   clone      Clone a repository into a new directory\n   init       Create an empty Git repository or reinitialize an existing one\n\nwork on the current change (see also: git help everyday)\n   add        Add file contents to the index\n   mv         Move or rename a file, a directory, or a symlink\n   restore    Restore working tree files\n   rm         Remove files from the working tree and from the index\n\nexamine the history and state (see also: git help revisions)\n   bisect     Use binary search to find the commit that introduced a bug\n   diff       Show changes between commits, commit and working tree, etc\n   grep       Print lines matching a pattern\n   log        Show commit logs\n   show       Show various types of objects\n   status     Show the working tree status\n\ngrow, mark and tweak your common history\n   backfill   Download missing objects in a partial clone\n   branch     List, create, or delete branches\n   commit     Record changes to the repository\n   merge      Join two or more development histories together\n   rebase     Reapply commits on top of another base tip\n   reset      Reset current HEAD to the specified state\n   switch     Switch branches\n   tag        Create, list, delete or verify a tag object signed with GPG\n\ncollaborate (see also: git help workflows)\n   fetch      Download objects and refs from another repository\n   pull       Fetch from and integrate with another repository or a local branch\n   push       Update remote refs along with associated objects\n\n'git help -a' and 'git help -g' list available subcommands and some\nconcept guides. See 'git help <command>' or 'git help <concept>'\nto read about a specific subcommand or concept.\nSee 'git help git' for an overview of the system.\n""
[0m21:49:14.997881 [debug] [MainThread]: STDERR: "b''"
[0m21:49:14.997881 [info ] [MainThread]:  - git [[32mOK found[0m]

[0m21:49:14.999887 [info ] [MainThread]: Connection:
[0m21:49:14.999887 [info ] [MainThread]:   host: https://adb-2596211793870894.14.azuredatabricks.net
[0m21:49:14.999887 [info ] [MainThread]:   http_path: sql/protocolv1/o/2596211793870894/0617-074513-6dy6nbt6
[0m21:49:14.999887 [info ] [MainThread]:   catalog: hive_metastore
[0m21:49:14.999887 [info ] [MainThread]:   schema: saleslt
[0m21:49:14.999887 [info ] [MainThread]: Registered adapter: databricks=1.10.3
[0m21:49:15.439901 [debug] [MainThread]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=debug, idle-time=0s, language=None, compute-name=) - Creating connection
[0m21:49:15.444673 [debug] [MainThread]: Acquiring new databricks connection 'debug'
[0m21:49:15.444673 [debug] [MainThread]: Using databricks connection "debug"
[0m21:49:15.444673 [debug] [MainThread]: On debug: select 1 as id
[0m21:49:15.444673 [debug] [MainThread]: Opening a new connection, currently in state init
[0m21:49:15.844665 [debug] [MainThread]: Databricks adapter: Connection(session-id=d866bf69-5289-4d60-ab94-57ea0cae4cdc) - Created
[0m21:49:16.099732 [debug] [MainThread]: SQL status: OK in 0.660 seconds
[0m21:49:16.099732 [debug] [MainThread]: Databricks adapter: Cursor(session-id=d866bf69-5289-4d60-ab94-57ea0cae4cdc, command-id=3cd9ac63-ce97-4ed4-8ce7-7f9928ed47a6) - Closing
[0m21:49:16.189861 [info ] [MainThread]:   Connection test: [[32mOK connection ok[0m]

[0m21:49:16.189861 [info ] [MainThread]: [32mAll checks passed![0m
[0m21:49:16.189861 [debug] [MainThread]: Command `dbt debug` succeeded at 21:49:16.189861 after 3.05 seconds
[0m21:49:16.189861 [debug] [MainThread]: Connection 'debug' was properly closed.
[0m21:49:16.189861 [debug] [MainThread]: On debug: Close
[0m21:49:16.189861 [debug] [MainThread]: Databricks adapter: Connection(session-id=d866bf69-5289-4d60-ab94-57ea0cae4cdc) - Closing
[0m21:49:16.281199 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001B086302680>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001B08663F5E0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001B0A114CEB0>]}
[0m21:49:16.281199 [debug] [MainThread]: Flushing usage events
[0m21:49:17.279671 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m22:46:45.420089 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002B9D40F2650>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002B9D32BACE0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002B9D32BAB00>]}


============================== 22:46:45.428599 | f79438bd-66c3-4835-8ea9-d0adfc43c839 ==============================
[0m22:46:45.428599 [info ] [MainThread]: Running with dbt=1.10.1
[0m22:46:45.428983 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'fail_fast': 'False', 'debug': 'False', 'log_path': 'D:\\Academic-Project\\Portofolio Data Engineer\\medalion_dbt_spark\\logs', 'version_check': 'True', 'profiles_dir': 'C:\\Users\\M S I\\.dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'invocation_command': 'dbt snapshot', 'introspect': 'True', 'log_format': 'default', 'target_path': 'None', 'static_parser': 'True', 'send_anonymous_usage_stats': 'True'}
[0m22:46:46.541578 [debug] [MainThread]: Spark adapter: Setting pyhive.hive logging to ERROR
[0m22:46:46.548456 [debug] [MainThread]: Spark adapter: Setting thrift.transport logging to ERROR
[0m22:46:46.548456 [debug] [MainThread]: Spark adapter: Setting thrift.protocol logging to ERROR
[0m22:46:48.115975 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'f79438bd-66c3-4835-8ea9-d0adfc43c839', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002B9D321B610>]}
[0m22:46:48.211601 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'f79438bd-66c3-4835-8ea9-d0adfc43c839', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002B9D32BAB60>]}
[0m22:46:48.211601 [info ] [MainThread]: Registered adapter: databricks=1.10.3
[0m22:46:48.723080 [debug] [MainThread]: checksum: 2c026f85d539c10c69b093157526ce33d0bf5533489eafb07fe5172434ec7740, vars: {}, profile: , target: , version: 1.10.1
[0m22:46:48.724682 [info ] [MainThread]: Unable to do partial parsing because saved manifest not found. Starting full parse.
[0m22:46:48.724682 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': 'f79438bd-66c3-4835-8ea9-d0adfc43c839', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002B9EFF93D30>]}
[0m22:46:51.906811 [error] [MainThread]: Encountered an error:
Compilation Error
  dbt found two snapshots with the name "salesorderdetail_snapshot".
  
  Since these resources have the same name, dbt will be unable to find the correct resource
  when looking for ref("salesorderdetail_snapshot").
  
  To fix this, change the name of one of these resources:
  - snapshot.medalion_dbt_spark.salesorderdetail_snapshot (snapshots\salesorderdetail.sql)
  - snapshot.medalion_dbt_spark.salesorderdetail_snapshot (snapshots\productmodel.sql)
[0m22:46:51.906811 [debug] [MainThread]: Command `dbt snapshot` failed at 22:46:51.906811 after 6.71 seconds
[0m22:46:51.911823 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002B9D40F2650>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002B9F167FB50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002B9F165F9A0>]}
[0m22:46:51.911823 [debug] [MainThread]: Flushing usage events
[0m22:46:53.307990 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m22:58:06.464730 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001909EB426B0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001909DD0AD70>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001909DD0AB90>]}


============================== 22:58:06.472064 | 76b0908c-5064-411c-8d1a-72be70056711 ==============================
[0m22:58:06.472064 [info ] [MainThread]: Running with dbt=1.10.1
[0m22:58:06.472064 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'version_check': 'True', 'profiles_dir': 'C:\\Users\\M S I\\.dbt', 'log_path': 'D:\\Academic-Project\\Portofolio Data Engineer\\medalion_dbt_spark\\logs', 'fail_fast': 'False', 'debug': 'False', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'log_format': 'default', 'static_parser': 'True', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'target_path': 'None', 'invocation_command': 'dbt snapshot', 'send_anonymous_usage_stats': 'True'}
[0m22:58:09.671928 [debug] [MainThread]: Spark adapter: Setting pyhive.hive logging to ERROR
[0m22:58:09.671928 [debug] [MainThread]: Spark adapter: Setting thrift.transport logging to ERROR
[0m22:58:09.681994 [debug] [MainThread]: Spark adapter: Setting thrift.protocol logging to ERROR
[0m22:58:12.412172 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '76b0908c-5064-411c-8d1a-72be70056711', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001909DCAED10>]}
[0m22:58:12.472091 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '76b0908c-5064-411c-8d1a-72be70056711', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000190A05BE440>]}
[0m22:58:12.476810 [info ] [MainThread]: Registered adapter: databricks=1.10.3
[0m22:58:13.011939 [debug] [MainThread]: checksum: 2c026f85d539c10c69b093157526ce33d0bf5533489eafb07fe5172434ec7740, vars: {}, profile: , target: , version: 1.10.1
[0m22:58:13.011939 [info ] [MainThread]: Unable to do partial parsing because saved manifest not found. Starting full parse.
[0m22:58:13.015204 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': '76b0908c-5064-411c-8d1a-72be70056711', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000190BA8E78E0>]}
[0m22:58:16.384342 [error] [MainThread]: Encountered an error:
Compilation Error
  Snapshot 'snapshot.medalion_dbt_spark.address_snapshot' (snapshots\address.sql) depends on a source named 'saleslt.address' which was not found
[0m22:58:16.384342 [debug] [MainThread]: Command `dbt snapshot` failed at 22:58:16.384342 after 10.07 seconds
[0m22:58:16.386754 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001909EB426B0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000190BC077610>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000190BC080A00>]}
[0m22:58:16.386754 [debug] [MainThread]: Flushing usage events
[0m22:58:17.542180 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m23:17:13.112290 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001C8905825C0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001C88F75ABC0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001C88F75A9E0>]}


============================== 23:17:13.122512 | 2db29b8c-a039-4c50-868c-748e5da88325 ==============================
[0m23:17:13.122512 [info ] [MainThread]: Running with dbt=1.10.1
[0m23:17:13.122512 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'version_check': 'True', 'debug': 'False', 'log_path': 'D:\\Academic-Project\\Portofolio Data Engineer\\medalion_dbt_spark\\logs', 'fail_fast': 'False', 'profiles_dir': 'C:\\Users\\M S I\\.dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'introspect': 'True', 'static_parser': 'True', 'log_format': 'default', 'target_path': 'None', 'invocation_command': 'dbt snapshot', 'send_anonymous_usage_stats': 'True'}
[0m23:17:14.332555 [debug] [MainThread]: Spark adapter: Setting pyhive.hive logging to ERROR
[0m23:17:14.332555 [debug] [MainThread]: Spark adapter: Setting thrift.transport logging to ERROR
[0m23:17:14.335802 [debug] [MainThread]: Spark adapter: Setting thrift.protocol logging to ERROR
[0m23:17:16.602743 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '2db29b8c-a039-4c50-868c-748e5da88325', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001C8AC3B0F40>]}
[0m23:17:16.682550 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '2db29b8c-a039-4c50-868c-748e5da88325', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001C8920324D0>]}
[0m23:17:16.682550 [info ] [MainThread]: Registered adapter: databricks=1.10.3
[0m23:17:17.273568 [debug] [MainThread]: checksum: 2c026f85d539c10c69b093157526ce33d0bf5533489eafb07fe5172434ec7740, vars: {}, profile: , target: , version: 1.10.1
[0m23:17:17.282621 [info ] [MainThread]: Unable to do partial parsing because saved manifest not found. Starting full parse.
[0m23:17:17.282621 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': '2db29b8c-a039-4c50-868c-748e5da88325', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001C8AC2CE800>]}
[0m23:17:20.272400 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '2db29b8c-a039-4c50-868c-748e5da88325', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001C8ADE34130>]}
[0m23:17:20.442510 [debug] [MainThread]: Wrote artifact WritableManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\manifest.json
[0m23:17:20.562457 [debug] [MainThread]: Wrote artifact SemanticManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\semantic_manifest.json
[0m23:17:20.638951 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '2db29b8c-a039-4c50-868c-748e5da88325', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001C8ADDBA800>]}
[0m23:17:20.642642 [info ] [MainThread]: Found 2 models, 7 snapshots, 4 data tests, 9 sources, 671 macros
[0m23:17:20.642642 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '2db29b8c-a039-4c50-868c-748e5da88325', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001C8AD9CAE00>]}
[0m23:17:20.645974 [info ] [MainThread]: 
[0m23:17:20.645974 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m23:17:20.645974 [info ] [MainThread]: 
[0m23:17:20.651113 [debug] [MainThread]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=master, idle-time=0s, language=None, compute-name=) - Creating connection
[0m23:17:20.652550 [debug] [MainThread]: Acquiring new databricks connection 'master'
[0m23:17:20.672410 [debug] [ThreadPool]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=list_hive_metastore, idle-time=0s, language=None, compute-name=) - Creating connection
[0m23:17:20.674896 [debug] [ThreadPool]: Acquiring new databricks connection 'list_hive_metastore'
[0m23:17:20.676623 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore"
[0m23:17:20.677034 [debug] [ThreadPool]: On list_hive_metastore: GetSchemas(database=hive_metastore, schema=None)
[0m23:17:20.678067 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m23:17:21.372574 [debug] [ThreadPool]: Databricks adapter: Connection(session-id=e1cf5bf2-847a-400a-bc2f-644455115cec) - Created
[0m23:17:22.902586 [debug] [ThreadPool]: SQL status: OK in 2.220 seconds
[0m23:17:22.902586 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=e1cf5bf2-847a-400a-bc2f-644455115cec, command-id=8659b76c-089b-47c0-b23b-d202578af066) - Closing
[0m23:17:23.052640 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_hive_metastore, now create_hive_metastore_snapshots)
[0m23:17:23.052640 [debug] [ThreadPool]: Databricks adapter: DatabricksDBTConnection(session-id=e1cf5bf2-847a-400a-bc2f-644455115cec, name=create_hive_metastore_snapshots, idle-time=0.0s, language=None, compute-name=) - Reusing connection previously named list_hive_metastore
[0m23:17:23.052640 [debug] [ThreadPool]: Creating schema "database: "hive_metastore"
schema: "snapshots"
"
[0m23:17:23.077499 [debug] [ThreadPool]: Using databricks connection "create_hive_metastore_snapshots"
[0m23:17:23.077499 [debug] [ThreadPool]: On create_hive_metastore_snapshots: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "create_hive_metastore_snapshots"} */
create schema if not exists `hive_metastore`.`snapshots`
  
[0m23:17:24.382444 [debug] [ThreadPool]: SQL status: OK in 1.300 seconds
[0m23:17:24.383715 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=e1cf5bf2-847a-400a-bc2f-644455115cec, command-id=9ae76b61-0a4e-4214-869b-b6d1e0f0aaf0) - Closing
[0m23:17:24.581054 [debug] [ThreadPool]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=list_hive_metastore_saleslt, idle-time=0s, language=None, compute-name=) - Creating connection
[0m23:17:24.582598 [debug] [ThreadPool]: Acquiring new databricks connection 'list_hive_metastore_saleslt'
[0m23:17:24.582598 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_saleslt"
[0m23:17:24.582598 [debug] [ThreadPool]: On list_hive_metastore_saleslt: GetTables(database=hive_metastore, schema=saleslt)
[0m23:17:24.584681 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m23:17:24.799637 [debug] [ThreadPool]: Databricks adapter: Connection(session-id=e27e3819-563b-44f7-982e-f8639c483b7c) - Created
[0m23:17:25.102037 [debug] [ThreadPool]: SQL status: OK in 0.520 seconds
[0m23:17:25.105457 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=e27e3819-563b-44f7-982e-f8639c483b7c, command-id=78ec8aaa-47a2-48d8-acbe-13115eba2683) - Closing
[0m23:17:25.282737 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_saleslt"
[0m23:17:25.283744 [debug] [ThreadPool]: On list_hive_metastore_saleslt: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "list_hive_metastore_saleslt"} */

    
SELECT current_catalog()

  
[0m23:17:25.632350 [debug] [ThreadPool]: SQL status: OK in 0.350 seconds
[0m23:17:25.672531 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=e27e3819-563b-44f7-982e-f8639c483b7c, command-id=1c586139-6733-4b60-9e44-fca4ee846141) - Closing
[0m23:17:25.764546 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_saleslt"
[0m23:17:25.765531 [debug] [ThreadPool]: On list_hive_metastore_saleslt: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "list_hive_metastore_saleslt"} */

    
SHOW VIEWS IN `hive_metastore`.`saleslt`

  
[0m23:17:26.162589 [debug] [ThreadPool]: SQL status: OK in 0.400 seconds
[0m23:17:26.162589 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=e27e3819-563b-44f7-982e-f8639c483b7c, command-id=7030dd9d-e293-4fc2-b406-1690de3de5ad) - Closing
[0m23:17:26.242600 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_hive_metastore_saleslt, now list_hive_metastore_snapshots)
[0m23:17:26.242600 [debug] [ThreadPool]: Databricks adapter: DatabricksDBTConnection(session-id=e27e3819-563b-44f7-982e-f8639c483b7c, name=list_hive_metastore_snapshots, idle-time=0.0s, language=None, compute-name=) - Reusing connection previously named list_hive_metastore_saleslt
[0m23:17:26.242600 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_snapshots"
[0m23:17:26.242600 [debug] [ThreadPool]: On list_hive_metastore_snapshots: GetTables(database=hive_metastore, schema=snapshots)
[0m23:17:26.452674 [debug] [ThreadPool]: SQL status: OK in 0.210 seconds
[0m23:17:26.452674 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=e27e3819-563b-44f7-982e-f8639c483b7c, command-id=c370ec46-f6ab-4f1b-a5f5-b2e4ce098af7) - Closing
[0m23:17:26.522420 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '2db29b8c-a039-4c50-868c-748e5da88325', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001C8ADB961A0>]}
[0m23:17:26.532552 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.address_snapshot
[0m23:17:26.540737 [info ] [Thread-1 (]: 1 of 7 START snapshot snapshots.address_snapshot ............................... [RUN]
[0m23:17:26.541729 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=snapshot.medalion_dbt_spark.address_snapshot, idle-time=0s, language=None, compute-name=) - Creating connection
[0m23:17:26.543341 [debug] [Thread-1 (]: Acquiring new databricks connection 'snapshot.medalion_dbt_spark.address_snapshot'
[0m23:17:26.543341 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.address_snapshot
[0m23:17:26.555774 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.address_snapshot
[0m23:17:26.672538 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:17:26.675525 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */
select * from (
        
    

    select *,
        md5(coalesce(cast(AddressID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id,
        
    current_timestamp()
 as dbt_updated_at,
        
    current_timestamp()
 as dbt_valid_from,
        
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
from (
        with source_data as (
    select
        AddressID,
        AddressLine1,
        AddressLine2,
        City,
        StateProvince,
        CountryRegion,
        PostalCode
    from `hive_metastore`.`saleslt`.`address`
)
select *
from source_data
    ) sbq



    ) as __dbt_sbq
    where false
    limit 0

[0m23:17:26.675525 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m23:17:26.908320 [debug] [Thread-1 (]: Databricks adapter: Connection(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2) - Created
[0m23:17:28.102773 [debug] [Thread-1 (]: SQL status: OK in 1.430 seconds
[0m23:17:28.102773 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, command-id=b4c35a72-7ce3-4261-b9fa-6b8e9845a734) - Closing
[0m23:17:28.182537 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:17:28.182537 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:17:28.344711 [debug] [Thread-1 (]: SQL status: OK in 0.160 seconds
[0m23:17:28.344711 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, command-id=8525acfe-b3a0-44e7-98c2-0f46dcd6f4f6) - Closing
[0m23:17:28.428084 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:17:28.428084 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:17:28.428084 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

      
  
    
        create or replace table `hive_metastore`.`snapshots`.`address_snapshot`
      
      
  using delta
      
      
      
      
      location '/mnt/silver/address/address_snapshot'
      
      
      as
      
    

    select *,
        md5(coalesce(cast(AddressID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id,
        
    current_timestamp()
 as dbt_updated_at,
        
    current_timestamp()
 as dbt_valid_from,
        
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
from (
        with source_data as (
    select
        AddressID,
        AddressLine1,
        AddressLine2,
        City,
        StateProvince,
        CountryRegion,
        PostalCode
    from `hive_metastore`.`saleslt`.`address`
)
select *
from source_data
    ) sbq



  
  
[0m23:17:41.922463 [debug] [Thread-1 (]: SQL status: OK in 13.490 seconds
[0m23:17:41.922463 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, command-id=2c0b3f70-0fcd-4640-b92b-e9c0f6e40afb) - Closing
[0m23:17:42.078797 [warn ] [Thread-1 (]: Databricks adapter: Cursor(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, command-id=None) - Exception while closing: Invalid OperationHandle: OperationHandle [opType=EXECUTE_STATEMENT, getHandleIdentifier()=2c0b3f70-0fcd-4640-b92b-e9c0f6e40afb]
[0m23:17:42.133604 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2db29b8c-a039-4c50-868c-748e5da88325', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001C88EBAF1C0>]}
[0m23:17:42.144416 [info ] [Thread-1 (]: 1 of 7 OK snapshotted snapshots.address_snapshot ............................... [[32mOK[0m in 15.58s]
[0m23:17:42.147877 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.address_snapshot
[0m23:17:42.149965 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.customer_snapshot
[0m23:17:42.150954 [info ] [Thread-1 (]: 2 of 7 START snapshot snapshots.customer_snapshot .............................. [RUN]
[0m23:17:42.152460 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.address_snapshot, now snapshot.medalion_dbt_spark.customer_snapshot)
[0m23:17:42.153521 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, name=snapshot.medalion_dbt_spark.customer_snapshot, idle-time=0.03080272674560547s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.address_snapshot
[0m23:17:42.154521 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.customer_snapshot
[0m23:17:42.163452 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.customer_snapshot
[0m23:17:42.172432 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:17:42.174207 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */
select * from (
        
    

    select *,
        md5(coalesce(cast(CustomerId as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id,
        
    current_timestamp()
 as dbt_updated_at,
        
    current_timestamp()
 as dbt_valid_from,
        
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
from (
        with source_data as (
    select
        CustomerId,
        NameStyle,
        Title,
        FirstName,
        MiddleName,
        LastName,
        Suffix,
        CompanyName,
        SalesPerson,
        EmailAddress,
        Phone,
        PasswordHash,
        PasswordSalt
    from `hive_metastore`.`saleslt`.`customer`
)
select *
from source_data
    ) sbq



    ) as __dbt_sbq
    where false
    limit 0

[0m23:17:42.784587 [debug] [Thread-1 (]: SQL status: OK in 0.610 seconds
[0m23:17:42.786593 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, command-id=4702dfdf-82bf-424c-a81f-50476a032844) - Closing
[0m23:17:42.942372 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:17:42.945145 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:17:43.082442 [debug] [Thread-1 (]: SQL status: OK in 0.140 seconds
[0m23:17:43.082442 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, command-id=492086c4-3294-4653-a23a-006881f2fd8f) - Closing
[0m23:17:43.152719 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:17:43.164794 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:17:43.166988 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

      
  
    
        create or replace table `hive_metastore`.`snapshots`.`customer_snapshot`
      
      
  using delta
      
      
      
      
      location '/mnt/silver/customer/customer_snapshot'
      
      
      as
      
    

    select *,
        md5(coalesce(cast(CustomerId as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id,
        
    current_timestamp()
 as dbt_updated_at,
        
    current_timestamp()
 as dbt_valid_from,
        
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
from (
        with source_data as (
    select
        CustomerId,
        NameStyle,
        Title,
        FirstName,
        MiddleName,
        LastName,
        Suffix,
        CompanyName,
        SalesPerson,
        EmailAddress,
        Phone,
        PasswordHash,
        PasswordSalt
    from `hive_metastore`.`saleslt`.`customer`
)
select *
from source_data
    ) sbq



  
  
[0m23:17:48.710702 [debug] [Thread-1 (]: SQL status: OK in 5.540 seconds
[0m23:17:48.712714 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, command-id=06d2706f-3484-40fa-bd44-94f25227a710) - Closing
[0m23:17:48.861113 [warn ] [Thread-1 (]: Databricks adapter: Cursor(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, command-id=None) - Exception while closing: Invalid OperationHandle: OperationHandle [opType=EXECUTE_STATEMENT, getHandleIdentifier()=06d2706f-3484-40fa-bd44-94f25227a710]
[0m23:17:48.862642 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2db29b8c-a039-4c50-868c-748e5da88325', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001C8ADDBAAD0>]}
[0m23:17:48.862642 [info ] [Thread-1 (]: 2 of 7 OK snapshotted snapshots.customer_snapshot .............................. [[32mOK[0m in 6.71s]
[0m23:17:48.867762 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.customer_snapshot
[0m23:17:48.869031 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m23:17:48.870182 [info ] [Thread-1 (]: 3 of 7 START snapshot snapshots.customeraddress_snapshot ....................... [RUN]
[0m23:17:48.871264 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.customer_snapshot, now snapshot.medalion_dbt_spark.customeraddress_snapshot)
[0m23:17:48.872447 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, name=snapshot.medalion_dbt_spark.customeraddress_snapshot, idle-time=0.00980520248413086s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.customer_snapshot
[0m23:17:48.873454 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m23:17:48.873959 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m23:17:48.889004 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:17:48.889004 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */
select * from (
        
    

    select *,
        md5(coalesce(cast(CustomerId||'-'||AddressId as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id,
        
    current_timestamp()
 as dbt_updated_at,
        
    current_timestamp()
 as dbt_valid_from,
        
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
from (
        with source_data as (
    select
        CustomerId,
        AddressId,
        AddressType
    from `hive_metastore`.`saleslt`.`customeraddress`
)
select *
from source_data
    ) sbq



    ) as __dbt_sbq
    where false
    limit 0

[0m23:17:49.442644 [debug] [Thread-1 (]: SQL status: OK in 0.550 seconds
[0m23:17:49.442644 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, command-id=286a579e-6e65-4c33-b8dc-9a72c8edf3cb) - Closing
[0m23:17:49.534478 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:17:49.542521 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:17:49.666115 [debug] [Thread-1 (]: SQL status: OK in 0.120 seconds
[0m23:17:49.666494 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, command-id=bc1f57da-c628-4d40-a00c-dee5f7fcd3d1) - Closing
[0m23:17:49.758672 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:17:49.760670 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:17:49.761673 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

      
  
    
        create or replace table `hive_metastore`.`snapshots`.`customeraddress_snapshot`
      
      
  using delta
      
      
      
      
      location '/mnt/silver/customeraddress/customeraddress_snapshot'
      
      
      as
      
    

    select *,
        md5(coalesce(cast(CustomerId||'-'||AddressId as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id,
        
    current_timestamp()
 as dbt_updated_at,
        
    current_timestamp()
 as dbt_valid_from,
        
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
from (
        with source_data as (
    select
        CustomerId,
        AddressId,
        AddressType
    from `hive_metastore`.`saleslt`.`customeraddress`
)
select *
from source_data
    ) sbq



  
  
[0m23:17:55.092657 [debug] [Thread-1 (]: SQL status: OK in 5.320 seconds
[0m23:17:55.092657 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, command-id=02bc46c0-bd0b-4d49-87f3-d3998975c309) - Closing
[0m23:17:55.232413 [warn ] [Thread-1 (]: Databricks adapter: Cursor(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, command-id=None) - Exception while closing: Invalid OperationHandle: OperationHandle [opType=EXECUTE_STATEMENT, getHandleIdentifier()=02bc46c0-bd0b-4d49-87f3-d3998975c309]
[0m23:17:55.242527 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2db29b8c-a039-4c50-868c-748e5da88325', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001C8ADDBAAD0>]}
[0m23:17:55.242527 [info ] [Thread-1 (]: 3 of 7 OK snapshotted snapshots.customeraddress_snapshot ....................... [[32mOK[0m in 6.37s]
[0m23:17:55.242527 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m23:17:55.248218 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.product_snapshot
[0m23:17:55.249968 [info ] [Thread-1 (]: 4 of 7 START snapshot snapshots.product_snapshot ............................... [RUN]
[0m23:17:55.249968 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.customeraddress_snapshot, now snapshot.medalion_dbt_spark.product_snapshot)
[0m23:17:55.252598 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, name=snapshot.medalion_dbt_spark.product_snapshot, idle-time=0.0074405670166015625s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m23:17:55.252598 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.product_snapshot
[0m23:17:55.261125 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.product_snapshot
[0m23:17:55.273197 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:17:55.273197 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */
select * from (
        
    

    select *,
        md5(coalesce(cast(ProductID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id,
        
    current_timestamp()
 as dbt_updated_at,
        
    current_timestamp()
 as dbt_valid_from,
        
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
from (
        with product_snapshot as (
    SELECT
        ProductID,
        Name,
        ProductNumber,
        Color,
        StandardCost,
        ListPrice,
        Size,
        Weight,
        ProductCategoryID,
        ProductModelID,
        SellStartDate,
        SellEndDate,
        DiscontinuedDate,
        ThumbNailPhoto,
        ThumbnailPhotoFileName
    FROM `hive_metastore`.`saleslt`.`product`
)

select * from product_snapshot
    ) sbq



    ) as __dbt_sbq
    where false
    limit 0

[0m23:17:55.912381 [debug] [Thread-1 (]: SQL status: OK in 0.640 seconds
[0m23:17:55.922538 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, command-id=db7af36e-a486-4269-b95c-ed34431452ec) - Closing
[0m23:17:56.002540 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:17:56.002540 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:17:56.142636 [debug] [Thread-1 (]: SQL status: OK in 0.140 seconds
[0m23:17:56.142636 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, command-id=a5345224-c4c5-44bc-b8b8-ae975276cc58) - Closing
[0m23:17:56.212510 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:17:56.212510 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:17:56.212510 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

      
  
    
        create or replace table `hive_metastore`.`snapshots`.`product_snapshot`
      
      
  using delta
      
      
      
      
      location '/mnt/silver/product/product_snapshot'
      
      
      as
      
    

    select *,
        md5(coalesce(cast(ProductID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id,
        
    current_timestamp()
 as dbt_updated_at,
        
    current_timestamp()
 as dbt_valid_from,
        
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
from (
        with product_snapshot as (
    SELECT
        ProductID,
        Name,
        ProductNumber,
        Color,
        StandardCost,
        ListPrice,
        Size,
        Weight,
        ProductCategoryID,
        ProductModelID,
        SellStartDate,
        SellEndDate,
        DiscontinuedDate,
        ThumbNailPhoto,
        ThumbnailPhotoFileName
    FROM `hive_metastore`.`saleslt`.`product`
)

select * from product_snapshot
    ) sbq



  
  
[0m23:18:02.512522 [debug] [Thread-1 (]: SQL status: OK in 6.300 seconds
[0m23:18:02.512522 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, command-id=f7f6b552-6590-43f3-9825-e5ecfe9d95c9) - Closing
[0m23:18:02.662696 [warn ] [Thread-1 (]: Databricks adapter: Cursor(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, command-id=None) - Exception while closing: Invalid OperationHandle: OperationHandle [opType=EXECUTE_STATEMENT, getHandleIdentifier()=f7f6b552-6590-43f3-9825-e5ecfe9d95c9]
[0m23:18:02.662696 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2db29b8c-a039-4c50-868c-748e5da88325', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001C8ADDF22F0>]}
[0m23:18:02.662696 [info ] [Thread-1 (]: 4 of 7 OK snapshotted snapshots.product_snapshot ............................... [[32mOK[0m in 7.41s]
[0m23:18:02.662696 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.product_snapshot
[0m23:18:02.672615 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.productmodel_snapshot
[0m23:18:02.673786 [info ] [Thread-1 (]: 5 of 7 START snapshot snapshots.productmodel_snapshot .......................... [RUN]
[0m23:18:02.674859 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.product_snapshot, now snapshot.medalion_dbt_spark.productmodel_snapshot)
[0m23:18:02.675852 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, name=snapshot.medalion_dbt_spark.productmodel_snapshot, idle-time=0.013155698776245117s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.product_snapshot
[0m23:18:02.676892 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.productmodel_snapshot
[0m23:18:02.682567 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.productmodel_snapshot
[0m23:18:02.692700 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:18:02.699586 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */
select * from (
        
    

    select *,
        md5(coalesce(cast(ProductModelID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id,
        
    current_timestamp()
 as dbt_updated_at,
        
    current_timestamp()
 as dbt_valid_from,
        
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
from (
        with product_snapshot as (
    SELECT
        ProductModelID,
        Name,
        CatalogDescription
    FROM `hive_metastore`.`saleslt`.`productmodel`
)

select * from product_snapshot
    ) sbq



    ) as __dbt_sbq
    where false
    limit 0

[0m23:18:03.225522 [debug] [Thread-1 (]: SQL status: OK in 0.530 seconds
[0m23:18:03.227404 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, command-id=85681db6-7841-4c8b-91cb-6b8859559d9b) - Closing
[0m23:18:03.304076 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:18:03.307153 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:18:03.466868 [debug] [Thread-1 (]: SQL status: OK in 0.160 seconds
[0m23:18:03.466868 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, command-id=d12d00a3-dedd-4055-beaa-d702ba9f71cc) - Closing
[0m23:18:03.537638 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:18:03.542468 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:18:03.542468 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

      
  
    
        create or replace table `hive_metastore`.`snapshots`.`productmodel_snapshot`
      
      
  using delta
      
      
      
      
      location '/mnt/silver/productmodel/productmodel_snapshot'
      
      
      as
      
    

    select *,
        md5(coalesce(cast(ProductModelID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id,
        
    current_timestamp()
 as dbt_updated_at,
        
    current_timestamp()
 as dbt_valid_from,
        
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
from (
        with product_snapshot as (
    SELECT
        ProductModelID,
        Name,
        CatalogDescription
    FROM `hive_metastore`.`saleslt`.`productmodel`
)

select * from product_snapshot
    ) sbq



  
  
[0m23:18:09.015338 [debug] [Thread-1 (]: SQL status: OK in 5.470 seconds
[0m23:18:09.016345 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, command-id=3d71a268-8605-46c3-94e8-9fbf85a827db) - Closing
[0m23:18:09.164205 [warn ] [Thread-1 (]: Databricks adapter: Cursor(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, command-id=None) - Exception while closing: Invalid OperationHandle: OperationHandle [opType=EXECUTE_STATEMENT, getHandleIdentifier()=3d71a268-8605-46c3-94e8-9fbf85a827db]
[0m23:18:09.169484 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2db29b8c-a039-4c50-868c-748e5da88325', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001C8AE0E2770>]}
[0m23:18:09.171189 [info ] [Thread-1 (]: 5 of 7 OK snapshotted snapshots.productmodel_snapshot .......................... [[32mOK[0m in 6.49s]
[0m23:18:09.172704 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.productmodel_snapshot
[0m23:18:09.173951 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m23:18:09.175469 [info ] [Thread-1 (]: 6 of 7 START snapshot snapshots.salesorderdetail_snapshot ...................... [RUN]
[0m23:18:09.177503 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.productmodel_snapshot, now snapshot.medalion_dbt_spark.salesorderdetail_snapshot)
[0m23:18:09.178589 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, name=snapshot.medalion_dbt_spark.salesorderdetail_snapshot, idle-time=0.009104490280151367s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.productmodel_snapshot
[0m23:18:09.179791 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m23:18:09.186600 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m23:18:09.196376 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:18:09.198507 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */
select * from (
        
    

    select *,
        md5(coalesce(cast(SalesOrderDetailID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id,
        
    current_timestamp()
 as dbt_updated_at,
        
    current_timestamp()
 as dbt_valid_from,
        
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
from (
        with salesorderdetail_snapshot as (
    SELECT
        SalesOrderID,
        SalesOrderDetailID,
        OrderQty,
        ProductID,
        UnitPrice,
        UnitPriceDiscount,
        LineTotal
    FROM `hive_metastore`.`saleslt`.`salesorderdetail`
)

select * from salesorderdetail_snapshot
    ) sbq



    ) as __dbt_sbq
    where false
    limit 0

[0m23:18:09.702756 [debug] [Thread-1 (]: SQL status: OK in 0.500 seconds
[0m23:18:09.703495 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, command-id=66db36f4-7df0-4359-aa28-43dba3e2dcb1) - Closing
[0m23:18:09.782413 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:18:09.782413 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:18:09.910487 [debug] [Thread-1 (]: SQL status: OK in 0.130 seconds
[0m23:18:09.911564 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, command-id=6ad75295-0511-446e-925c-034bb1cb7065) - Closing
[0m23:18:09.992569 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:18:09.994114 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:18:09.994114 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

      
  
    
        create or replace table `hive_metastore`.`snapshots`.`salesorderdetail_snapshot`
      
      
  using delta
      
      
      
      
      location '/mnt/silver/salesorderdetail/salesorderdetail_snapshot'
      
      
      as
      
    

    select *,
        md5(coalesce(cast(SalesOrderDetailID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id,
        
    current_timestamp()
 as dbt_updated_at,
        
    current_timestamp()
 as dbt_valid_from,
        
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
from (
        with salesorderdetail_snapshot as (
    SELECT
        SalesOrderID,
        SalesOrderDetailID,
        OrderQty,
        ProductID,
        UnitPrice,
        UnitPriceDiscount,
        LineTotal
    FROM `hive_metastore`.`saleslt`.`salesorderdetail`
)

select * from salesorderdetail_snapshot
    ) sbq



  
  
[0m23:18:15.590926 [debug] [Thread-1 (]: SQL status: OK in 5.600 seconds
[0m23:18:15.592434 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, command-id=83afd5a3-d20e-4f74-9770-e6793c6d5cfe) - Closing
[0m23:18:15.732796 [warn ] [Thread-1 (]: Databricks adapter: Cursor(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, command-id=None) - Exception while closing: Invalid OperationHandle: OperationHandle [opType=EXECUTE_STATEMENT, getHandleIdentifier()=83afd5a3-d20e-4f74-9770-e6793c6d5cfe]
[0m23:18:15.737304 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2db29b8c-a039-4c50-868c-748e5da88325', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001C8ADDDF940>]}
[0m23:18:15.737304 [info ] [Thread-1 (]: 6 of 7 OK snapshotted snapshots.salesorderdetail_snapshot ...................... [[32mOK[0m in 6.56s]
[0m23:18:15.737304 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m23:18:15.742551 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.salesorderheader_snapshot
[0m23:18:15.743595 [info ] [Thread-1 (]: 7 of 7 START snapshot snapshots.salesorderheader_snapshot ...................... [RUN]
[0m23:18:15.744563 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.salesorderdetail_snapshot, now snapshot.medalion_dbt_spark.salesorderheader_snapshot)
[0m23:18:15.745568 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, name=snapshot.medalion_dbt_spark.salesorderheader_snapshot, idle-time=0.008263587951660156s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m23:18:15.746558 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.salesorderheader_snapshot
[0m23:18:15.755054 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.salesorderheader_snapshot
[0m23:18:15.925385 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:18:15.925385 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */
select * from (
        
    

    select *,
        md5(coalesce(cast(SalesOrderID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id,
        
    current_timestamp()
 as dbt_updated_at,
        
    current_timestamp()
 as dbt_valid_from,
        
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
from (
        with salesorderheader_snapshot as (
    SELECT
        SalesOrderID,
        RevisionNumber,
        OrderDate,
        DueDate,
        ShipDate,
        Status,
        OnlineOrderFlag,
        SalesOrderNumber,
        PurchaseOrderNumber,
        AccountNumber,
        CustomerID,
        ShipToAddressID,
        BillToAddressID,
        ShipMethod,
        CreditCardApprovalCode,
        SubTotal,
        TaxAmt,
        Freight,
        TotalDue,
        Comment
    FROM `hive_metastore`.`saleslt`.`salesorderheader`
)

select * from salesorderheader_snapshot
    ) sbq



    ) as __dbt_sbq
    where false
    limit 0

[0m23:18:16.498109 [debug] [Thread-1 (]: SQL status: OK in 0.570 seconds
[0m23:18:16.498109 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, command-id=9616dd18-3413-410f-b374-6991b266e24c) - Closing
[0m23:18:16.567910 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:18:16.572538 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:18:16.702623 [debug] [Thread-1 (]: SQL status: OK in 0.130 seconds
[0m23:18:16.702623 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, command-id=b7e9e8b2-7d55-45d5-9c23-6784aab5ca50) - Closing
[0m23:18:16.772356 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:18:16.782427 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:18:16.785507 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

      
  
    
        create or replace table `hive_metastore`.`snapshots`.`salesorderheader_snapshot`
      
      
  using delta
      
      
      
      
      location '/mnt/silver/salesorderheader/salesorderheader_snapshot'
      
      
      as
      
    

    select *,
        md5(coalesce(cast(SalesOrderID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id,
        
    current_timestamp()
 as dbt_updated_at,
        
    current_timestamp()
 as dbt_valid_from,
        
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
from (
        with salesorderheader_snapshot as (
    SELECT
        SalesOrderID,
        RevisionNumber,
        OrderDate,
        DueDate,
        ShipDate,
        Status,
        OnlineOrderFlag,
        SalesOrderNumber,
        PurchaseOrderNumber,
        AccountNumber,
        CustomerID,
        ShipToAddressID,
        BillToAddressID,
        ShipMethod,
        CreditCardApprovalCode,
        SubTotal,
        TaxAmt,
        Freight,
        TotalDue,
        Comment
    FROM `hive_metastore`.`saleslt`.`salesorderheader`
)

select * from salesorderheader_snapshot
    ) sbq



  
  
[0m23:18:22.982508 [debug] [Thread-1 (]: SQL status: OK in 6.190 seconds
[0m23:18:22.982508 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, command-id=a11ef2d7-32ef-4098-98fe-7de155823984) - Closing
[0m23:18:23.130558 [warn ] [Thread-1 (]: Databricks adapter: Cursor(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2, command-id=None) - Exception while closing: Invalid OperationHandle: OperationHandle [opType=EXECUTE_STATEMENT, getHandleIdentifier()=a11ef2d7-32ef-4098-98fe-7de155823984]
[0m23:18:23.132563 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '2db29b8c-a039-4c50-868c-748e5da88325', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001C8AE112E00>]}
[0m23:18:23.132563 [info ] [Thread-1 (]: 7 of 7 OK snapshotted snapshots.salesorderheader_snapshot ...................... [[32mOK[0m in 7.39s]
[0m23:18:23.132563 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.salesorderheader_snapshot
[0m23:18:23.140444 [debug] [MainThread]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=master, idle-time=56.609901666641235s, language=None, compute-name=) - Reusing connection previously named master
[0m23:18:23.141443 [debug] [MainThread]: Connection 'master' was properly closed.
[0m23:18:23.142443 [debug] [MainThread]: Connection 'create_hive_metastore_snapshots' was properly closed.
[0m23:18:23.143508 [debug] [MainThread]: On create_hive_metastore_snapshots: Close
[0m23:18:23.143508 [debug] [MainThread]: Databricks adapter: Connection(session-id=e1cf5bf2-847a-400a-bc2f-644455115cec) - Closing
[0m23:18:23.222536 [debug] [MainThread]: Connection 'list_hive_metastore_snapshots' was properly closed.
[0m23:18:23.222536 [debug] [MainThread]: On list_hive_metastore_snapshots: Close
[0m23:18:23.222536 [debug] [MainThread]: Databricks adapter: Connection(session-id=e27e3819-563b-44f7-982e-f8639c483b7c) - Closing
[0m23:18:23.302480 [debug] [MainThread]: Connection 'snapshot.medalion_dbt_spark.salesorderheader_snapshot' was properly closed.
[0m23:18:23.304249 [debug] [MainThread]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: Close
[0m23:18:23.304249 [debug] [MainThread]: Databricks adapter: Connection(session-id=85d42d7a-ff32-4eb2-8c83-c8053251b1a2) - Closing
[0m23:18:23.385023 [info ] [MainThread]: 
[0m23:18:23.385023 [info ] [MainThread]: Finished running 7 snapshots in 0 hours 1 minutes and 2.73 seconds (62.73s).
[0m23:18:23.385023 [debug] [MainThread]: Command end result
[0m23:18:23.435646 [debug] [MainThread]: Wrote artifact WritableManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\manifest.json
[0m23:18:23.439309 [debug] [MainThread]: Wrote artifact SemanticManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\semantic_manifest.json
[0m23:18:23.444833 [debug] [MainThread]: Wrote artifact RunExecutionResult to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\run_results.json
[0m23:18:23.444833 [info ] [MainThread]: 
[0m23:18:23.444833 [info ] [MainThread]: [32mCompleted successfully[0m
[0m23:18:23.444833 [info ] [MainThread]: 
[0m23:18:23.444833 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m23:18:23.452514 [debug] [MainThread]: Command `dbt snapshot` succeeded at 23:18:23.452514 after 70.53 seconds
[0m23:18:23.452514 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001C8905825C0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001C8ADD22B00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001C8918C69B0>]}
[0m23:18:23.452514 [debug] [MainThread]: Flushing usage events
[0m23:18:24.832563 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m23:27:30.309620 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000021A8E5E2590>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000021A8D7DAB30>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000021A8D7DA950>]}


============================== 23:27:30.313077 | a86262ce-5f97-4b36-a404-b09ef9bea98b ==============================
[0m23:27:30.313077 [info ] [MainThread]: Running with dbt=1.10.1
[0m23:27:30.313077 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'debug': 'False', 'version_check': 'True', 'log_path': 'D:\\Academic-Project\\Portofolio Data Engineer\\medalion_dbt_spark\\logs', 'fail_fast': 'False', 'profiles_dir': 'C:\\Users\\M S I\\.dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'invocation_command': 'dbt snapshot', 'introspect': 'True', 'log_format': 'default', 'target_path': 'None', 'static_parser': 'True', 'send_anonymous_usage_stats': 'True'}
[0m23:27:31.172854 [debug] [MainThread]: Spark adapter: Setting pyhive.hive logging to ERROR
[0m23:27:31.172854 [debug] [MainThread]: Spark adapter: Setting thrift.transport logging to ERROR
[0m23:27:31.172854 [debug] [MainThread]: Spark adapter: Setting thrift.protocol logging to ERROR
[0m23:27:32.489486 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'a86262ce-5f97-4b36-a404-b09ef9bea98b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000021AAA413010>]}
[0m23:27:32.573100 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'a86262ce-5f97-4b36-a404-b09ef9bea98b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000021A9005E2F0>]}
[0m23:27:32.573100 [info ] [MainThread]: Registered adapter: databricks=1.10.3
[0m23:27:33.027803 [debug] [MainThread]: checksum: 2c026f85d539c10c69b093157526ce33d0bf5533489eafb07fe5172434ec7740, vars: {}, profile: , target: , version: 1.10.1
[0m23:27:33.408968 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m23:27:33.408968 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m23:27:33.475156 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'a86262ce-5f97-4b36-a404-b09ef9bea98b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000021AAB9AC130>]}
[0m23:27:33.591175 [debug] [MainThread]: Wrote artifact WritableManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\manifest.json
[0m23:27:33.593214 [debug] [MainThread]: Wrote artifact SemanticManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\semantic_manifest.json
[0m23:27:33.632114 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'a86262ce-5f97-4b36-a404-b09ef9bea98b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000021A8DFF5DE0>]}
[0m23:27:33.633119 [info ] [MainThread]: Found 2 models, 7 snapshots, 4 data tests, 9 sources, 671 macros
[0m23:27:33.633119 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'a86262ce-5f97-4b36-a404-b09ef9bea98b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000021A8E438370>]}
[0m23:27:33.635430 [info ] [MainThread]: 
[0m23:27:33.635430 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m23:27:33.635430 [info ] [MainThread]: 
[0m23:27:33.635430 [debug] [MainThread]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=master, idle-time=0s, language=None, compute-name=) - Creating connection
[0m23:27:33.635430 [debug] [MainThread]: Acquiring new databricks connection 'master'
[0m23:27:33.647155 [debug] [ThreadPool]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=list_hive_metastore, idle-time=0s, language=None, compute-name=) - Creating connection
[0m23:27:33.647155 [debug] [ThreadPool]: Acquiring new databricks connection 'list_hive_metastore'
[0m23:27:33.647155 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore"
[0m23:27:33.647155 [debug] [ThreadPool]: On list_hive_metastore: GetSchemas(database=hive_metastore, schema=None)
[0m23:27:33.647155 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m23:27:34.242942 [debug] [ThreadPool]: Databricks adapter: Connection(session-id=0130cbfc-c029-4905-88d7-943a1af51c26) - Created
[0m23:27:34.906661 [debug] [ThreadPool]: SQL status: OK in 1.260 seconds
[0m23:27:34.907666 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=0130cbfc-c029-4905-88d7-943a1af51c26, command-id=39856bda-92e3-438b-9d2e-9b2d4d22a61c) - Closing
[0m23:27:35.045249 [debug] [ThreadPool]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=list_hive_metastore_snapshots, idle-time=0s, language=None, compute-name=) - Creating connection
[0m23:27:35.045249 [debug] [ThreadPool]: Acquiring new databricks connection 'list_hive_metastore_snapshots'
[0m23:27:35.045249 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_snapshots"
[0m23:27:35.045249 [debug] [ThreadPool]: On list_hive_metastore_snapshots: GetTables(database=hive_metastore, schema=snapshots)
[0m23:27:35.053175 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m23:27:35.372932 [debug] [ThreadPool]: Databricks adapter: Connection(session-id=27894347-8d9b-486d-9d5c-d16bf8e3e30d) - Created
[0m23:27:35.576965 [debug] [ThreadPool]: SQL status: OK in 0.520 seconds
[0m23:27:35.583083 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=27894347-8d9b-486d-9d5c-d16bf8e3e30d, command-id=b14423b9-a65a-46f9-9d0c-fb911ec04c02) - Closing
[0m23:27:35.750098 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_snapshots"
[0m23:27:35.751107 [debug] [ThreadPool]: On list_hive_metastore_snapshots: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "list_hive_metastore_snapshots"} */

    
SELECT current_catalog()

  
[0m23:27:36.002816 [debug] [ThreadPool]: SQL status: OK in 0.250 seconds
[0m23:27:36.033063 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=27894347-8d9b-486d-9d5c-d16bf8e3e30d, command-id=e7aab50d-56ad-4028-8baf-2eb67886cea7) - Closing
[0m23:27:36.185180 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_snapshots"
[0m23:27:36.192868 [debug] [ThreadPool]: On list_hive_metastore_snapshots: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "list_hive_metastore_snapshots"} */

    
SHOW VIEWS IN `hive_metastore`.`snapshots`

  
[0m23:27:36.547569 [debug] [ThreadPool]: SQL status: OK in 0.350 seconds
[0m23:27:36.557401 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=27894347-8d9b-486d-9d5c-d16bf8e3e30d, command-id=d765603c-1dde-4952-aba5-191376408eb7) - Closing
[0m23:27:36.663160 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_hive_metastore_snapshots, now list_hive_metastore_saleslt)
[0m23:27:36.678322 [debug] [ThreadPool]: Databricks adapter: DatabricksDBTConnection(session-id=27894347-8d9b-486d-9d5c-d16bf8e3e30d, name=list_hive_metastore_saleslt, idle-time=0.015161275863647461s, language=None, compute-name=) - Reusing connection previously named list_hive_metastore_snapshots
[0m23:27:36.683016 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_saleslt"
[0m23:27:36.686960 [debug] [ThreadPool]: On list_hive_metastore_saleslt: GetTables(database=hive_metastore, schema=saleslt)
[0m23:27:36.908430 [debug] [ThreadPool]: SQL status: OK in 0.220 seconds
[0m23:27:36.914897 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=27894347-8d9b-486d-9d5c-d16bf8e3e30d, command-id=ac46f513-bc66-458b-9418-57ea3ac3f898) - Closing
[0m23:27:36.999444 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_saleslt"
[0m23:27:36.999444 [debug] [ThreadPool]: On list_hive_metastore_saleslt: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "list_hive_metastore_saleslt"} */

    
SELECT current_catalog()

  
[0m23:27:37.172827 [debug] [ThreadPool]: SQL status: OK in 0.170 seconds
[0m23:27:37.183170 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=27894347-8d9b-486d-9d5c-d16bf8e3e30d, command-id=15b85cf0-f65c-455c-9cb7-bed82ffa297a) - Closing
[0m23:27:37.284841 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_saleslt"
[0m23:27:37.286881 [debug] [ThreadPool]: On list_hive_metastore_saleslt: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "list_hive_metastore_saleslt"} */

    
SHOW VIEWS IN `hive_metastore`.`saleslt`

  
[0m23:27:37.583055 [debug] [ThreadPool]: SQL status: OK in 0.300 seconds
[0m23:27:37.587181 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=27894347-8d9b-486d-9d5c-d16bf8e3e30d, command-id=55488797-eae1-4025-bdf3-d7c70288eecb) - Closing
[0m23:27:37.683101 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'a86262ce-5f97-4b36-a404-b09ef9bea98b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000021A8CACA740>]}
[0m23:27:37.704324 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.address_snapshot
[0m23:27:37.705499 [info ] [Thread-1 (]: 1 of 7 START snapshot snapshots.address_snapshot ............................... [RUN]
[0m23:27:37.706645 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=snapshot.medalion_dbt_spark.address_snapshot, idle-time=0s, language=None, compute-name=) - Creating connection
[0m23:27:37.706645 [debug] [Thread-1 (]: Acquiring new databricks connection 'snapshot.medalion_dbt_spark.address_snapshot'
[0m23:27:37.707660 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.address_snapshot
[0m23:27:37.715987 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.address_snapshot
[0m23:27:37.746913 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:27:37.747955 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

      describe extended `hive_metastore`.`snapshots`.`address_snapshot`
  
[0m23:27:37.748957 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m23:27:37.991638 [debug] [Thread-1 (]: Databricks adapter: Connection(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72) - Created
[0m23:27:39.363230 [debug] [Thread-1 (]: SQL status: OK in 1.610 seconds
[0m23:27:39.372816 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=94ba4dba-be16-4111-816b-0de1dbe2ded4) - Closing
[0m23:27:39.506931 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:27:39.507932 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */
select * from (
        



with source_data as (
    select
        AddressID,
        AddressLine1,
        AddressLine2,
        City,
        StateProvince,
        CountryRegion,
        PostalCode
    from `hive_metastore`.`saleslt`.`address`
)
select *
from source_data

    ) as __dbt_sbq
    where false
    limit 0

    
[0m23:27:39.925252 [debug] [Thread-1 (]: SQL status: OK in 0.420 seconds
[0m23:27:39.934137 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=7186adc6-3d72-49c2-9c92-70c0cbb72542) - Closing
[0m23:27:40.030320 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:27:40.032747 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`address_snapshot`

  
[0m23:27:40.373129 [debug] [Thread-1 (]: SQL status: OK in 0.340 seconds
[0m23:27:40.373129 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=018f213f-c7b8-4076-b630-e68448790f38) - Closing
[0m23:27:40.477160 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:27:40.477160 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`address_snapshot`

  
[0m23:27:40.854694 [debug] [Thread-1 (]: SQL status: OK in 0.380 seconds
[0m23:27:40.856760 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=45e2ac42-b894-490a-8461-7ef88585c18d) - Closing
[0m23:27:40.992939 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:27:40.992939 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

        
  
    create or replace temporary view `address_snapshot__dbt_tmp` as
      
    
    with snapshot_query as (

        with source_data as (
    select
        AddressID,
        AddressLine1,
        AddressLine2,
        City,
        StateProvince,
        CountryRegion,
        PostalCode
    from `hive_metastore`.`saleslt`.`address`
)
select *
from source_data

    ),

    snapshotted_data as (

        select *, 
    
        AddressID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`address_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        AddressID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(AddressID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        AddressID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        AddressID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`AddressID` != source_data.`AddressID`
        or
        (
            ((snapshotted_data.`AddressID` is null) and not (source_data.`AddressID` is null))
            or
            ((not snapshotted_data.`AddressID` is null) and (source_data.`AddressID` is null))
        ) or snapshotted_data.`AddressLine1` != source_data.`AddressLine1`
        or
        (
            ((snapshotted_data.`AddressLine1` is null) and not (source_data.`AddressLine1` is null))
            or
            ((not snapshotted_data.`AddressLine1` is null) and (source_data.`AddressLine1` is null))
        ) or snapshotted_data.`AddressLine2` != source_data.`AddressLine2`
        or
        (
            ((snapshotted_data.`AddressLine2` is null) and not (source_data.`AddressLine2` is null))
            or
            ((not snapshotted_data.`AddressLine2` is null) and (source_data.`AddressLine2` is null))
        ) or snapshotted_data.`City` != source_data.`City`
        or
        (
            ((snapshotted_data.`City` is null) and not (source_data.`City` is null))
            or
            ((not snapshotted_data.`City` is null) and (source_data.`City` is null))
        ) or snapshotted_data.`StateProvince` != source_data.`StateProvince`
        or
        (
            ((snapshotted_data.`StateProvince` is null) and not (source_data.`StateProvince` is null))
            or
            ((not snapshotted_data.`StateProvince` is null) and (source_data.`StateProvince` is null))
        ) or snapshotted_data.`CountryRegion` != source_data.`CountryRegion`
        or
        (
            ((snapshotted_data.`CountryRegion` is null) and not (source_data.`CountryRegion` is null))
            or
            ((not snapshotted_data.`CountryRegion` is null) and (source_data.`CountryRegion` is null))
        ) or snapshotted_data.`PostalCode` != source_data.`PostalCode`
        or
        (
            ((snapshotted_data.`PostalCode` is null) and not (source_data.`PostalCode` is null))
            or
            ((not snapshotted_data.`PostalCode` is null) and (source_data.`PostalCode` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`AddressID` != source_data.`AddressID`
        or
        (
            ((snapshotted_data.`AddressID` is null) and not (source_data.`AddressID` is null))
            or
            ((not snapshotted_data.`AddressID` is null) and (source_data.`AddressID` is null))
        ) or snapshotted_data.`AddressLine1` != source_data.`AddressLine1`
        or
        (
            ((snapshotted_data.`AddressLine1` is null) and not (source_data.`AddressLine1` is null))
            or
            ((not snapshotted_data.`AddressLine1` is null) and (source_data.`AddressLine1` is null))
        ) or snapshotted_data.`AddressLine2` != source_data.`AddressLine2`
        or
        (
            ((snapshotted_data.`AddressLine2` is null) and not (source_data.`AddressLine2` is null))
            or
            ((not snapshotted_data.`AddressLine2` is null) and (source_data.`AddressLine2` is null))
        ) or snapshotted_data.`City` != source_data.`City`
        or
        (
            ((snapshotted_data.`City` is null) and not (source_data.`City` is null))
            or
            ((not snapshotted_data.`City` is null) and (source_data.`City` is null))
        ) or snapshotted_data.`StateProvince` != source_data.`StateProvince`
        or
        (
            ((snapshotted_data.`StateProvince` is null) and not (source_data.`StateProvince` is null))
            or
            ((not snapshotted_data.`StateProvince` is null) and (source_data.`StateProvince` is null))
        ) or snapshotted_data.`CountryRegion` != source_data.`CountryRegion`
        or
        (
            ((snapshotted_data.`CountryRegion` is null) and not (source_data.`CountryRegion` is null))
            or
            ((not snapshotted_data.`CountryRegion` is null) and (source_data.`CountryRegion` is null))
        ) or snapshotted_data.`PostalCode` != source_data.`PostalCode`
        or
        (
            ((snapshotted_data.`PostalCode` is null) and not (source_data.`PostalCode` is null))
            or
            ((not snapshotted_data.`PostalCode` is null) and (source_data.`PostalCode` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

  
    
[0m23:27:41.958392 [debug] [Thread-1 (]: SQL status: OK in 0.970 seconds
[0m23:27:41.964953 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=961b0e31-0d20-4ee4-8b5c-0faaae1e4365) - Closing
[0m23:27:42.047149 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:27:42.054879 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

    
DESCRIBE TABLE `address_snapshot__dbt_tmp`

  
[0m23:27:42.282933 [debug] [Thread-1 (]: SQL status: OK in 0.230 seconds
[0m23:27:42.292875 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=149ac4e7-7d20-4ba4-95d2-17a03a232f0b) - Closing
[0m23:27:42.386922 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:27:42.386922 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`address_snapshot`

  
[0m23:27:42.752818 [debug] [Thread-1 (]: SQL status: OK in 0.360 seconds
[0m23:27:42.758389 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=ae790b90-f433-4506-a796-5ec0a7349d41) - Closing
[0m23:27:42.834735 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:27:42.835756 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

    
DESCRIBE TABLE `address_snapshot__dbt_tmp`

  
[0m23:27:43.003088 [debug] [Thread-1 (]: SQL status: OK in 0.170 seconds
[0m23:27:43.008606 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=6937f3ef-c6fb-4a7d-8b0c-3d9f7bb5b7df) - Closing
[0m23:27:43.087094 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:27:43.089098 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`address_snapshot`

  
[0m23:27:43.452884 [debug] [Thread-1 (]: SQL status: OK in 0.360 seconds
[0m23:27:43.452884 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=a8fa84de-da5b-4916-8a7c-3cd076c64332) - Closing
[0m23:27:43.552243 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:27:43.553520 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

    
DESCRIBE TABLE `address_snapshot__dbt_tmp`

  
[0m23:27:43.738064 [debug] [Thread-1 (]: SQL status: OK in 0.180 seconds
[0m23:27:43.745232 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=ab2a6f7f-a555-4af3-a479-e34b96662a2c) - Closing
[0m23:27:43.852767 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:27:43.854843 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */
select * from (
        
    
    with snapshot_query as (

        with source_data as (
    select
        AddressID,
        AddressLine1,
        AddressLine2,
        City,
        StateProvince,
        CountryRegion,
        PostalCode
    from `hive_metastore`.`saleslt`.`address`
)
select *
from source_data

    ),

    snapshotted_data as (

        select *, 
    
        AddressID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`address_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        AddressID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(AddressID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        AddressID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        AddressID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`AddressID` != source_data.`AddressID`
        or
        (
            ((snapshotted_data.`AddressID` is null) and not (source_data.`AddressID` is null))
            or
            ((not snapshotted_data.`AddressID` is null) and (source_data.`AddressID` is null))
        ) or snapshotted_data.`AddressLine1` != source_data.`AddressLine1`
        or
        (
            ((snapshotted_data.`AddressLine1` is null) and not (source_data.`AddressLine1` is null))
            or
            ((not snapshotted_data.`AddressLine1` is null) and (source_data.`AddressLine1` is null))
        ) or snapshotted_data.`AddressLine2` != source_data.`AddressLine2`
        or
        (
            ((snapshotted_data.`AddressLine2` is null) and not (source_data.`AddressLine2` is null))
            or
            ((not snapshotted_data.`AddressLine2` is null) and (source_data.`AddressLine2` is null))
        ) or snapshotted_data.`City` != source_data.`City`
        or
        (
            ((snapshotted_data.`City` is null) and not (source_data.`City` is null))
            or
            ((not snapshotted_data.`City` is null) and (source_data.`City` is null))
        ) or snapshotted_data.`StateProvince` != source_data.`StateProvince`
        or
        (
            ((snapshotted_data.`StateProvince` is null) and not (source_data.`StateProvince` is null))
            or
            ((not snapshotted_data.`StateProvince` is null) and (source_data.`StateProvince` is null))
        ) or snapshotted_data.`CountryRegion` != source_data.`CountryRegion`
        or
        (
            ((snapshotted_data.`CountryRegion` is null) and not (source_data.`CountryRegion` is null))
            or
            ((not snapshotted_data.`CountryRegion` is null) and (source_data.`CountryRegion` is null))
        ) or snapshotted_data.`PostalCode` != source_data.`PostalCode`
        or
        (
            ((snapshotted_data.`PostalCode` is null) and not (source_data.`PostalCode` is null))
            or
            ((not snapshotted_data.`PostalCode` is null) and (source_data.`PostalCode` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`AddressID` != source_data.`AddressID`
        or
        (
            ((snapshotted_data.`AddressID` is null) and not (source_data.`AddressID` is null))
            or
            ((not snapshotted_data.`AddressID` is null) and (source_data.`AddressID` is null))
        ) or snapshotted_data.`AddressLine1` != source_data.`AddressLine1`
        or
        (
            ((snapshotted_data.`AddressLine1` is null) and not (source_data.`AddressLine1` is null))
            or
            ((not snapshotted_data.`AddressLine1` is null) and (source_data.`AddressLine1` is null))
        ) or snapshotted_data.`AddressLine2` != source_data.`AddressLine2`
        or
        (
            ((snapshotted_data.`AddressLine2` is null) and not (source_data.`AddressLine2` is null))
            or
            ((not snapshotted_data.`AddressLine2` is null) and (source_data.`AddressLine2` is null))
        ) or snapshotted_data.`City` != source_data.`City`
        or
        (
            ((snapshotted_data.`City` is null) and not (source_data.`City` is null))
            or
            ((not snapshotted_data.`City` is null) and (source_data.`City` is null))
        ) or snapshotted_data.`StateProvince` != source_data.`StateProvince`
        or
        (
            ((snapshotted_data.`StateProvince` is null) and not (source_data.`StateProvince` is null))
            or
            ((not snapshotted_data.`StateProvince` is null) and (source_data.`StateProvince` is null))
        ) or snapshotted_data.`CountryRegion` != source_data.`CountryRegion`
        or
        (
            ((snapshotted_data.`CountryRegion` is null) and not (source_data.`CountryRegion` is null))
            or
            ((not snapshotted_data.`CountryRegion` is null) and (source_data.`CountryRegion` is null))
        ) or snapshotted_data.`PostalCode` != source_data.`PostalCode`
        or
        (
            ((snapshotted_data.`PostalCode` is null) and not (source_data.`PostalCode` is null))
            or
            ((not snapshotted_data.`PostalCode` is null) and (source_data.`PostalCode` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

    ) as __dbt_sbq
    where false
    limit 0

[0m23:27:44.584047 [debug] [Thread-1 (]: SQL status: OK in 0.730 seconds
[0m23:27:44.584047 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=eb02b858-53a8-4542-81f8-2799a4c85faf) - Closing
[0m23:27:44.667258 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:27:44.667258 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:27:44.795882 [debug] [Thread-1 (]: SQL status: OK in 0.130 seconds
[0m23:27:44.795882 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=9da7c496-532e-4a58-8ba0-5f917ceb321d) - Closing
[0m23:27:44.882897 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:27:44.888110 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:27:44.890685 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

      merge into `hive_metastore`.`snapshots`.`address_snapshot` as DBT_INTERNAL_DEST
    
      using `address_snapshot__dbt_tmp` as DBT_INTERNAL_SOURCE
    
    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id
    when matched
     
       and DBT_INTERNAL_DEST.dbt_valid_to is null
     
     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')
        then update
        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to

    when not matched
     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'
        then insert *
    ;

  
[0m23:27:55.218271 [debug] [Thread-1 (]: SQL status: OK in 10.320 seconds
[0m23:27:55.218271 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=f4b65436-5b21-4011-8f5a-45fe1e44f681) - Closing
[0m23:27:55.383127 [warn ] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=None) - Exception while closing: Invalid OperationHandle: OperationHandle [opType=EXECUTE_STATEMENT, getHandleIdentifier()=f4b65436-5b21-4011-8f5a-45fe1e44f681]
[0m23:27:55.412813 [debug] [Thread-1 (]: Applying DROP to: `address_snapshot__dbt_tmp`
[0m23:27:55.422767 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:27:55.422767 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */
DROP VIEW IF EXISTS `address_snapshot__dbt_tmp`
[0m23:27:55.580619 [debug] [Thread-1 (]: SQL status: OK in 0.160 seconds
[0m23:27:55.586939 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=e7191cf0-8e1c-46e2-9284-96b6549f2f07) - Closing
[0m23:27:55.675669 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a86262ce-5f97-4b36-a404-b09ef9bea98b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000021AABB0B3A0>]}
[0m23:27:55.675669 [info ] [Thread-1 (]: 1 of 7 OK snapshotted snapshots.address_snapshot ............................... [[32mOK[0m in 17.97s]
[0m23:27:55.679154 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.address_snapshot
[0m23:27:55.679154 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.customer_snapshot
[0m23:27:55.680662 [info ] [Thread-1 (]: 2 of 7 START snapshot snapshots.customer_snapshot .............................. [RUN]
[0m23:27:55.680662 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.address_snapshot, now snapshot.medalion_dbt_spark.customer_snapshot)
[0m23:27:55.683289 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, name=snapshot.medalion_dbt_spark.customer_snapshot, idle-time=0.010244369506835938s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.address_snapshot
[0m23:27:55.683289 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.customer_snapshot
[0m23:27:55.685984 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.customer_snapshot
[0m23:27:55.696181 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:27:55.696181 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

      describe extended `hive_metastore`.`snapshots`.`customer_snapshot`
  
[0m23:27:56.243094 [debug] [Thread-1 (]: SQL status: OK in 0.550 seconds
[0m23:27:56.247205 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=3ae6c920-0a52-4c88-8cb6-1dc9fb999b1a) - Closing
[0m23:27:56.315011 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:27:56.322955 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */
select * from (
        



with source_data as (
    select
        CustomerId,
        NameStyle,
        Title,
        FirstName,
        MiddleName,
        LastName,
        Suffix,
        CompanyName,
        SalesPerson,
        EmailAddress,
        Phone,
        PasswordHash,
        PasswordSalt
    from `hive_metastore`.`saleslt`.`customer`
)
select *
from source_data

    ) as __dbt_sbq
    where false
    limit 0

    
[0m23:27:56.664986 [debug] [Thread-1 (]: SQL status: OK in 0.340 seconds
[0m23:27:56.672855 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=11fb7272-98df-48e3-a9d4-416d0820458c) - Closing
[0m23:27:56.757144 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:27:56.762993 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`customer_snapshot`

  
[0m23:27:57.091083 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:27:57.097887 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=aeb960cc-7083-4f95-bd8a-a25486e3172d) - Closing
[0m23:27:57.177078 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:27:57.181628 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`customer_snapshot`

  
[0m23:27:57.511399 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:27:57.512908 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=f8ae3605-8158-4673-9679-fe46e32b5344) - Closing
[0m23:27:57.593060 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:27:57.593060 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

        
  
    create or replace temporary view `customer_snapshot__dbt_tmp` as
      
    
    with snapshot_query as (

        with source_data as (
    select
        CustomerId,
        NameStyle,
        Title,
        FirstName,
        MiddleName,
        LastName,
        Suffix,
        CompanyName,
        SalesPerson,
        EmailAddress,
        Phone,
        PasswordHash,
        PasswordSalt
    from `hive_metastore`.`saleslt`.`customer`
)
select *
from source_data

    ),

    snapshotted_data as (

        select *, 
    
        CustomerId as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`customer_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        CustomerId as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(CustomerId as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        CustomerId as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        CustomerId as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`CustomerId` != source_data.`CustomerId`
        or
        (
            ((snapshotted_data.`CustomerId` is null) and not (source_data.`CustomerId` is null))
            or
            ((not snapshotted_data.`CustomerId` is null) and (source_data.`CustomerId` is null))
        ) or snapshotted_data.`NameStyle` != source_data.`NameStyle`
        or
        (
            ((snapshotted_data.`NameStyle` is null) and not (source_data.`NameStyle` is null))
            or
            ((not snapshotted_data.`NameStyle` is null) and (source_data.`NameStyle` is null))
        ) or snapshotted_data.`Title` != source_data.`Title`
        or
        (
            ((snapshotted_data.`Title` is null) and not (source_data.`Title` is null))
            or
            ((not snapshotted_data.`Title` is null) and (source_data.`Title` is null))
        ) or snapshotted_data.`FirstName` != source_data.`FirstName`
        or
        (
            ((snapshotted_data.`FirstName` is null) and not (source_data.`FirstName` is null))
            or
            ((not snapshotted_data.`FirstName` is null) and (source_data.`FirstName` is null))
        ) or snapshotted_data.`MiddleName` != source_data.`MiddleName`
        or
        (
            ((snapshotted_data.`MiddleName` is null) and not (source_data.`MiddleName` is null))
            or
            ((not snapshotted_data.`MiddleName` is null) and (source_data.`MiddleName` is null))
        ) or snapshotted_data.`LastName` != source_data.`LastName`
        or
        (
            ((snapshotted_data.`LastName` is null) and not (source_data.`LastName` is null))
            or
            ((not snapshotted_data.`LastName` is null) and (source_data.`LastName` is null))
        ) or snapshotted_data.`Suffix` != source_data.`Suffix`
        or
        (
            ((snapshotted_data.`Suffix` is null) and not (source_data.`Suffix` is null))
            or
            ((not snapshotted_data.`Suffix` is null) and (source_data.`Suffix` is null))
        ) or snapshotted_data.`CompanyName` != source_data.`CompanyName`
        or
        (
            ((snapshotted_data.`CompanyName` is null) and not (source_data.`CompanyName` is null))
            or
            ((not snapshotted_data.`CompanyName` is null) and (source_data.`CompanyName` is null))
        ) or snapshotted_data.`SalesPerson` != source_data.`SalesPerson`
        or
        (
            ((snapshotted_data.`SalesPerson` is null) and not (source_data.`SalesPerson` is null))
            or
            ((not snapshotted_data.`SalesPerson` is null) and (source_data.`SalesPerson` is null))
        ) or snapshotted_data.`EmailAddress` != source_data.`EmailAddress`
        or
        (
            ((snapshotted_data.`EmailAddress` is null) and not (source_data.`EmailAddress` is null))
            or
            ((not snapshotted_data.`EmailAddress` is null) and (source_data.`EmailAddress` is null))
        ) or snapshotted_data.`Phone` != source_data.`Phone`
        or
        (
            ((snapshotted_data.`Phone` is null) and not (source_data.`Phone` is null))
            or
            ((not snapshotted_data.`Phone` is null) and (source_data.`Phone` is null))
        ) or snapshotted_data.`PasswordHash` != source_data.`PasswordHash`
        or
        (
            ((snapshotted_data.`PasswordHash` is null) and not (source_data.`PasswordHash` is null))
            or
            ((not snapshotted_data.`PasswordHash` is null) and (source_data.`PasswordHash` is null))
        ) or snapshotted_data.`PasswordSalt` != source_data.`PasswordSalt`
        or
        (
            ((snapshotted_data.`PasswordSalt` is null) and not (source_data.`PasswordSalt` is null))
            or
            ((not snapshotted_data.`PasswordSalt` is null) and (source_data.`PasswordSalt` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`CustomerId` != source_data.`CustomerId`
        or
        (
            ((snapshotted_data.`CustomerId` is null) and not (source_data.`CustomerId` is null))
            or
            ((not snapshotted_data.`CustomerId` is null) and (source_data.`CustomerId` is null))
        ) or snapshotted_data.`NameStyle` != source_data.`NameStyle`
        or
        (
            ((snapshotted_data.`NameStyle` is null) and not (source_data.`NameStyle` is null))
            or
            ((not snapshotted_data.`NameStyle` is null) and (source_data.`NameStyle` is null))
        ) or snapshotted_data.`Title` != source_data.`Title`
        or
        (
            ((snapshotted_data.`Title` is null) and not (source_data.`Title` is null))
            or
            ((not snapshotted_data.`Title` is null) and (source_data.`Title` is null))
        ) or snapshotted_data.`FirstName` != source_data.`FirstName`
        or
        (
            ((snapshotted_data.`FirstName` is null) and not (source_data.`FirstName` is null))
            or
            ((not snapshotted_data.`FirstName` is null) and (source_data.`FirstName` is null))
        ) or snapshotted_data.`MiddleName` != source_data.`MiddleName`
        or
        (
            ((snapshotted_data.`MiddleName` is null) and not (source_data.`MiddleName` is null))
            or
            ((not snapshotted_data.`MiddleName` is null) and (source_data.`MiddleName` is null))
        ) or snapshotted_data.`LastName` != source_data.`LastName`
        or
        (
            ((snapshotted_data.`LastName` is null) and not (source_data.`LastName` is null))
            or
            ((not snapshotted_data.`LastName` is null) and (source_data.`LastName` is null))
        ) or snapshotted_data.`Suffix` != source_data.`Suffix`
        or
        (
            ((snapshotted_data.`Suffix` is null) and not (source_data.`Suffix` is null))
            or
            ((not snapshotted_data.`Suffix` is null) and (source_data.`Suffix` is null))
        ) or snapshotted_data.`CompanyName` != source_data.`CompanyName`
        or
        (
            ((snapshotted_data.`CompanyName` is null) and not (source_data.`CompanyName` is null))
            or
            ((not snapshotted_data.`CompanyName` is null) and (source_data.`CompanyName` is null))
        ) or snapshotted_data.`SalesPerson` != source_data.`SalesPerson`
        or
        (
            ((snapshotted_data.`SalesPerson` is null) and not (source_data.`SalesPerson` is null))
            or
            ((not snapshotted_data.`SalesPerson` is null) and (source_data.`SalesPerson` is null))
        ) or snapshotted_data.`EmailAddress` != source_data.`EmailAddress`
        or
        (
            ((snapshotted_data.`EmailAddress` is null) and not (source_data.`EmailAddress` is null))
            or
            ((not snapshotted_data.`EmailAddress` is null) and (source_data.`EmailAddress` is null))
        ) or snapshotted_data.`Phone` != source_data.`Phone`
        or
        (
            ((snapshotted_data.`Phone` is null) and not (source_data.`Phone` is null))
            or
            ((not snapshotted_data.`Phone` is null) and (source_data.`Phone` is null))
        ) or snapshotted_data.`PasswordHash` != source_data.`PasswordHash`
        or
        (
            ((snapshotted_data.`PasswordHash` is null) and not (source_data.`PasswordHash` is null))
            or
            ((not snapshotted_data.`PasswordHash` is null) and (source_data.`PasswordHash` is null))
        ) or snapshotted_data.`PasswordSalt` != source_data.`PasswordSalt`
        or
        (
            ((snapshotted_data.`PasswordSalt` is null) and not (source_data.`PasswordSalt` is null))
            or
            ((not snapshotted_data.`PasswordSalt` is null) and (source_data.`PasswordSalt` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

  
    
[0m23:27:58.085620 [debug] [Thread-1 (]: SQL status: OK in 0.480 seconds
[0m23:27:58.085973 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=0a27d6d9-a09e-42fd-903e-8215dc6ccca8) - Closing
[0m23:27:58.177090 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:27:58.177090 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

    
DESCRIBE TABLE `customer_snapshot__dbt_tmp`

  
[0m23:27:58.352990 [debug] [Thread-1 (]: SQL status: OK in 0.180 seconds
[0m23:27:58.360613 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=8a766ecf-e855-4c2c-b97a-28c8e51b848a) - Closing
[0m23:27:58.429991 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:27:58.430970 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`customer_snapshot`

  
[0m23:27:58.742791 [debug] [Thread-1 (]: SQL status: OK in 0.310 seconds
[0m23:27:58.742791 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=8164df0d-00a7-44c3-a417-945141bd2a74) - Closing
[0m23:27:58.823085 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:27:58.823085 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

    
DESCRIBE TABLE `customer_snapshot__dbt_tmp`

  
[0m23:27:59.000286 [debug] [Thread-1 (]: SQL status: OK in 0.180 seconds
[0m23:27:59.008113 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=cbfa5028-53e6-4031-ac1e-bf5027c0840f) - Closing
[0m23:27:59.089492 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:27:59.092853 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`customer_snapshot`

  
[0m23:27:59.463159 [debug] [Thread-1 (]: SQL status: OK in 0.370 seconds
[0m23:27:59.463159 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=9dbf6011-1d4d-4047-b904-b70302e30950) - Closing
[0m23:27:59.544227 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:27:59.545227 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

    
DESCRIBE TABLE `customer_snapshot__dbt_tmp`

  
[0m23:27:59.721298 [debug] [Thread-1 (]: SQL status: OK in 0.180 seconds
[0m23:27:59.722802 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=016f1cc9-9128-4bc3-a686-0256a8f1a620) - Closing
[0m23:27:59.804989 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:27:59.810699 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */
select * from (
        
    
    with snapshot_query as (

        with source_data as (
    select
        CustomerId,
        NameStyle,
        Title,
        FirstName,
        MiddleName,
        LastName,
        Suffix,
        CompanyName,
        SalesPerson,
        EmailAddress,
        Phone,
        PasswordHash,
        PasswordSalt
    from `hive_metastore`.`saleslt`.`customer`
)
select *
from source_data

    ),

    snapshotted_data as (

        select *, 
    
        CustomerId as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`customer_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        CustomerId as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(CustomerId as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        CustomerId as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        CustomerId as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`CustomerId` != source_data.`CustomerId`
        or
        (
            ((snapshotted_data.`CustomerId` is null) and not (source_data.`CustomerId` is null))
            or
            ((not snapshotted_data.`CustomerId` is null) and (source_data.`CustomerId` is null))
        ) or snapshotted_data.`NameStyle` != source_data.`NameStyle`
        or
        (
            ((snapshotted_data.`NameStyle` is null) and not (source_data.`NameStyle` is null))
            or
            ((not snapshotted_data.`NameStyle` is null) and (source_data.`NameStyle` is null))
        ) or snapshotted_data.`Title` != source_data.`Title`
        or
        (
            ((snapshotted_data.`Title` is null) and not (source_data.`Title` is null))
            or
            ((not snapshotted_data.`Title` is null) and (source_data.`Title` is null))
        ) or snapshotted_data.`FirstName` != source_data.`FirstName`
        or
        (
            ((snapshotted_data.`FirstName` is null) and not (source_data.`FirstName` is null))
            or
            ((not snapshotted_data.`FirstName` is null) and (source_data.`FirstName` is null))
        ) or snapshotted_data.`MiddleName` != source_data.`MiddleName`
        or
        (
            ((snapshotted_data.`MiddleName` is null) and not (source_data.`MiddleName` is null))
            or
            ((not snapshotted_data.`MiddleName` is null) and (source_data.`MiddleName` is null))
        ) or snapshotted_data.`LastName` != source_data.`LastName`
        or
        (
            ((snapshotted_data.`LastName` is null) and not (source_data.`LastName` is null))
            or
            ((not snapshotted_data.`LastName` is null) and (source_data.`LastName` is null))
        ) or snapshotted_data.`Suffix` != source_data.`Suffix`
        or
        (
            ((snapshotted_data.`Suffix` is null) and not (source_data.`Suffix` is null))
            or
            ((not snapshotted_data.`Suffix` is null) and (source_data.`Suffix` is null))
        ) or snapshotted_data.`CompanyName` != source_data.`CompanyName`
        or
        (
            ((snapshotted_data.`CompanyName` is null) and not (source_data.`CompanyName` is null))
            or
            ((not snapshotted_data.`CompanyName` is null) and (source_data.`CompanyName` is null))
        ) or snapshotted_data.`SalesPerson` != source_data.`SalesPerson`
        or
        (
            ((snapshotted_data.`SalesPerson` is null) and not (source_data.`SalesPerson` is null))
            or
            ((not snapshotted_data.`SalesPerson` is null) and (source_data.`SalesPerson` is null))
        ) or snapshotted_data.`EmailAddress` != source_data.`EmailAddress`
        or
        (
            ((snapshotted_data.`EmailAddress` is null) and not (source_data.`EmailAddress` is null))
            or
            ((not snapshotted_data.`EmailAddress` is null) and (source_data.`EmailAddress` is null))
        ) or snapshotted_data.`Phone` != source_data.`Phone`
        or
        (
            ((snapshotted_data.`Phone` is null) and not (source_data.`Phone` is null))
            or
            ((not snapshotted_data.`Phone` is null) and (source_data.`Phone` is null))
        ) or snapshotted_data.`PasswordHash` != source_data.`PasswordHash`
        or
        (
            ((snapshotted_data.`PasswordHash` is null) and not (source_data.`PasswordHash` is null))
            or
            ((not snapshotted_data.`PasswordHash` is null) and (source_data.`PasswordHash` is null))
        ) or snapshotted_data.`PasswordSalt` != source_data.`PasswordSalt`
        or
        (
            ((snapshotted_data.`PasswordSalt` is null) and not (source_data.`PasswordSalt` is null))
            or
            ((not snapshotted_data.`PasswordSalt` is null) and (source_data.`PasswordSalt` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`CustomerId` != source_data.`CustomerId`
        or
        (
            ((snapshotted_data.`CustomerId` is null) and not (source_data.`CustomerId` is null))
            or
            ((not snapshotted_data.`CustomerId` is null) and (source_data.`CustomerId` is null))
        ) or snapshotted_data.`NameStyle` != source_data.`NameStyle`
        or
        (
            ((snapshotted_data.`NameStyle` is null) and not (source_data.`NameStyle` is null))
            or
            ((not snapshotted_data.`NameStyle` is null) and (source_data.`NameStyle` is null))
        ) or snapshotted_data.`Title` != source_data.`Title`
        or
        (
            ((snapshotted_data.`Title` is null) and not (source_data.`Title` is null))
            or
            ((not snapshotted_data.`Title` is null) and (source_data.`Title` is null))
        ) or snapshotted_data.`FirstName` != source_data.`FirstName`
        or
        (
            ((snapshotted_data.`FirstName` is null) and not (source_data.`FirstName` is null))
            or
            ((not snapshotted_data.`FirstName` is null) and (source_data.`FirstName` is null))
        ) or snapshotted_data.`MiddleName` != source_data.`MiddleName`
        or
        (
            ((snapshotted_data.`MiddleName` is null) and not (source_data.`MiddleName` is null))
            or
            ((not snapshotted_data.`MiddleName` is null) and (source_data.`MiddleName` is null))
        ) or snapshotted_data.`LastName` != source_data.`LastName`
        or
        (
            ((snapshotted_data.`LastName` is null) and not (source_data.`LastName` is null))
            or
            ((not snapshotted_data.`LastName` is null) and (source_data.`LastName` is null))
        ) or snapshotted_data.`Suffix` != source_data.`Suffix`
        or
        (
            ((snapshotted_data.`Suffix` is null) and not (source_data.`Suffix` is null))
            or
            ((not snapshotted_data.`Suffix` is null) and (source_data.`Suffix` is null))
        ) or snapshotted_data.`CompanyName` != source_data.`CompanyName`
        or
        (
            ((snapshotted_data.`CompanyName` is null) and not (source_data.`CompanyName` is null))
            or
            ((not snapshotted_data.`CompanyName` is null) and (source_data.`CompanyName` is null))
        ) or snapshotted_data.`SalesPerson` != source_data.`SalesPerson`
        or
        (
            ((snapshotted_data.`SalesPerson` is null) and not (source_data.`SalesPerson` is null))
            or
            ((not snapshotted_data.`SalesPerson` is null) and (source_data.`SalesPerson` is null))
        ) or snapshotted_data.`EmailAddress` != source_data.`EmailAddress`
        or
        (
            ((snapshotted_data.`EmailAddress` is null) and not (source_data.`EmailAddress` is null))
            or
            ((not snapshotted_data.`EmailAddress` is null) and (source_data.`EmailAddress` is null))
        ) or snapshotted_data.`Phone` != source_data.`Phone`
        or
        (
            ((snapshotted_data.`Phone` is null) and not (source_data.`Phone` is null))
            or
            ((not snapshotted_data.`Phone` is null) and (source_data.`Phone` is null))
        ) or snapshotted_data.`PasswordHash` != source_data.`PasswordHash`
        or
        (
            ((snapshotted_data.`PasswordHash` is null) and not (source_data.`PasswordHash` is null))
            or
            ((not snapshotted_data.`PasswordHash` is null) and (source_data.`PasswordHash` is null))
        ) or snapshotted_data.`PasswordSalt` != source_data.`PasswordSalt`
        or
        (
            ((snapshotted_data.`PasswordSalt` is null) and not (source_data.`PasswordSalt` is null))
            or
            ((not snapshotted_data.`PasswordSalt` is null) and (source_data.`PasswordSalt` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

    ) as __dbt_sbq
    where false
    limit 0

[0m23:28:00.329322 [debug] [Thread-1 (]: SQL status: OK in 0.510 seconds
[0m23:28:00.331145 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=a1141601-c9cd-4ce7-b34b-eb5f5667fcd4) - Closing
[0m23:28:00.404911 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:28:00.404911 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:28:00.574366 [debug] [Thread-1 (]: SQL status: OK in 0.160 seconds
[0m23:28:00.576372 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=5b521c50-b6e4-4ad7-8a0d-a47099cee5f3) - Closing
[0m23:28:00.655731 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:28:00.675284 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:28:00.675284 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

      merge into `hive_metastore`.`snapshots`.`customer_snapshot` as DBT_INTERNAL_DEST
    
      using `customer_snapshot__dbt_tmp` as DBT_INTERNAL_SOURCE
    
    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id
    when matched
     
       and DBT_INTERNAL_DEST.dbt_valid_to is null
     
     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')
        then update
        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to

    when not matched
     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'
        then insert *
    ;

  
[0m23:28:06.154320 [debug] [Thread-1 (]: SQL status: OK in 5.470 seconds
[0m23:28:06.160903 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=08c7ad04-49fa-4c5e-b20f-1f67f14c2a73) - Closing
[0m23:28:06.292815 [warn ] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=None) - Exception while closing: Invalid OperationHandle: OperationHandle [opType=EXECUTE_STATEMENT, getHandleIdentifier()=08c7ad04-49fa-4c5e-b20f-1f67f14c2a73]
[0m23:28:06.302895 [debug] [Thread-1 (]: Applying DROP to: `customer_snapshot__dbt_tmp`
[0m23:28:06.306564 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:28:06.310285 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */
DROP VIEW IF EXISTS `customer_snapshot__dbt_tmp`
[0m23:28:06.446760 [debug] [Thread-1 (]: SQL status: OK in 0.140 seconds
[0m23:28:06.446760 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=2528cfbe-bb62-4c09-af13-119b0740b0c1) - Closing
[0m23:28:06.522761 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a86262ce-5f97-4b36-a404-b09ef9bea98b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000021A8E48D420>]}
[0m23:28:06.524431 [info ] [Thread-1 (]: 2 of 7 OK snapshotted snapshots.customer_snapshot .............................. [[32mOK[0m in 10.84s]
[0m23:28:06.526436 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.customer_snapshot
[0m23:28:06.527562 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m23:28:06.528571 [info ] [Thread-1 (]: 3 of 7 START snapshot snapshots.customeraddress_snapshot ....................... [RUN]
[0m23:28:06.533078 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.customer_snapshot, now snapshot.medalion_dbt_spark.customeraddress_snapshot)
[0m23:28:06.536291 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, name=snapshot.medalion_dbt_spark.customeraddress_snapshot, idle-time=0.013029813766479492s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.customer_snapshot
[0m23:28:06.536291 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m23:28:06.550572 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m23:28:06.556326 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:28:06.556326 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

      describe extended `hive_metastore`.`snapshots`.`customeraddress_snapshot`
  
[0m23:28:07.089533 [debug] [Thread-1 (]: SQL status: OK in 0.530 seconds
[0m23:28:07.095209 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=492dd041-d59c-47c2-b2fd-3e860dd22ff8) - Closing
[0m23:28:07.168428 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:28:07.168428 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */
select * from (
        



with source_data as (
    select
        CustomerId,
        AddressId,
        AddressType
    from `hive_metastore`.`saleslt`.`customeraddress`
)
select *
from source_data

    ) as __dbt_sbq
    where false
    limit 0

    
[0m23:28:07.463026 [debug] [Thread-1 (]: SQL status: OK in 0.290 seconds
[0m23:28:07.465376 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=b1026ccd-6c64-4c18-9dfe-04fc534bfc46) - Closing
[0m23:28:07.548504 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:28:07.548504 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`customeraddress_snapshot`

  
[0m23:28:07.877248 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:28:07.882973 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=c3a6dbcc-e429-4180-b867-53dec73be6e1) - Closing
[0m23:28:07.958804 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:28:07.962931 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`customeraddress_snapshot`

  
[0m23:28:08.298543 [debug] [Thread-1 (]: SQL status: OK in 0.340 seconds
[0m23:28:08.301025 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=5aed57d9-28a5-4bb5-af02-3a6dbacb15f2) - Closing
[0m23:28:08.394680 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:28:08.396685 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

        
  
    create or replace temporary view `customeraddress_snapshot__dbt_tmp` as
      
    
    with snapshot_query as (

        with source_data as (
    select
        CustomerId,
        AddressId,
        AddressType
    from `hive_metastore`.`saleslt`.`customeraddress`
)
select *
from source_data

    ),

    snapshotted_data as (

        select *, 
    
        CustomerId||'-'||AddressId as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`customeraddress_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        CustomerId||'-'||AddressId as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(CustomerId||'-'||AddressId as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        CustomerId||'-'||AddressId as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        CustomerId||'-'||AddressId as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`CustomerId` != source_data.`CustomerId`
        or
        (
            ((snapshotted_data.`CustomerId` is null) and not (source_data.`CustomerId` is null))
            or
            ((not snapshotted_data.`CustomerId` is null) and (source_data.`CustomerId` is null))
        ) or snapshotted_data.`AddressId` != source_data.`AddressId`
        or
        (
            ((snapshotted_data.`AddressId` is null) and not (source_data.`AddressId` is null))
            or
            ((not snapshotted_data.`AddressId` is null) and (source_data.`AddressId` is null))
        ) or snapshotted_data.`AddressType` != source_data.`AddressType`
        or
        (
            ((snapshotted_data.`AddressType` is null) and not (source_data.`AddressType` is null))
            or
            ((not snapshotted_data.`AddressType` is null) and (source_data.`AddressType` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`CustomerId` != source_data.`CustomerId`
        or
        (
            ((snapshotted_data.`CustomerId` is null) and not (source_data.`CustomerId` is null))
            or
            ((not snapshotted_data.`CustomerId` is null) and (source_data.`CustomerId` is null))
        ) or snapshotted_data.`AddressId` != source_data.`AddressId`
        or
        (
            ((snapshotted_data.`AddressId` is null) and not (source_data.`AddressId` is null))
            or
            ((not snapshotted_data.`AddressId` is null) and (source_data.`AddressId` is null))
        ) or snapshotted_data.`AddressType` != source_data.`AddressType`
        or
        (
            ((snapshotted_data.`AddressType` is null) and not (source_data.`AddressType` is null))
            or
            ((not snapshotted_data.`AddressType` is null) and (source_data.`AddressType` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

  
    
[0m23:28:08.756430 [debug] [Thread-1 (]: SQL status: OK in 0.360 seconds
[0m23:28:08.757989 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=6fb28776-f8ce-4328-abe1-b578d25f44c6) - Closing
[0m23:28:08.836124 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:28:08.837125 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

    
DESCRIBE TABLE `customeraddress_snapshot__dbt_tmp`

  
[0m23:28:09.000178 [debug] [Thread-1 (]: SQL status: OK in 0.160 seconds
[0m23:28:09.005370 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=a9ff971b-16d2-4ffb-9dc3-878e76e8370b) - Closing
[0m23:28:09.083079 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:28:09.083079 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`customeraddress_snapshot`

  
[0m23:28:09.416740 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:28:09.421532 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=b3762196-7c50-426c-99f8-e82f1f28b869) - Closing
[0m23:28:09.489836 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:28:09.491845 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

    
DESCRIBE TABLE `customeraddress_snapshot__dbt_tmp`

  
[0m23:28:09.662734 [debug] [Thread-1 (]: SQL status: OK in 0.160 seconds
[0m23:28:09.666114 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=47471512-6728-4d11-8abc-6594b2c962b5) - Closing
[0m23:28:09.742611 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:28:09.743618 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`customeraddress_snapshot`

  
[0m23:28:10.078157 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:28:10.080446 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=1226a892-5d15-4ffc-b566-ec57ec17f120) - Closing
[0m23:28:10.164826 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:28:10.173091 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

    
DESCRIBE TABLE `customeraddress_snapshot__dbt_tmp`

  
[0m23:28:10.392872 [debug] [Thread-1 (]: SQL status: OK in 0.220 seconds
[0m23:28:10.395180 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=db5f4576-2d0b-438e-9ba5-0b17590666f9) - Closing
[0m23:28:10.484236 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:28:10.488948 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */
select * from (
        
    
    with snapshot_query as (

        with source_data as (
    select
        CustomerId,
        AddressId,
        AddressType
    from `hive_metastore`.`saleslt`.`customeraddress`
)
select *
from source_data

    ),

    snapshotted_data as (

        select *, 
    
        CustomerId||'-'||AddressId as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`customeraddress_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        CustomerId||'-'||AddressId as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(CustomerId||'-'||AddressId as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        CustomerId||'-'||AddressId as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        CustomerId||'-'||AddressId as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`CustomerId` != source_data.`CustomerId`
        or
        (
            ((snapshotted_data.`CustomerId` is null) and not (source_data.`CustomerId` is null))
            or
            ((not snapshotted_data.`CustomerId` is null) and (source_data.`CustomerId` is null))
        ) or snapshotted_data.`AddressId` != source_data.`AddressId`
        or
        (
            ((snapshotted_data.`AddressId` is null) and not (source_data.`AddressId` is null))
            or
            ((not snapshotted_data.`AddressId` is null) and (source_data.`AddressId` is null))
        ) or snapshotted_data.`AddressType` != source_data.`AddressType`
        or
        (
            ((snapshotted_data.`AddressType` is null) and not (source_data.`AddressType` is null))
            or
            ((not snapshotted_data.`AddressType` is null) and (source_data.`AddressType` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`CustomerId` != source_data.`CustomerId`
        or
        (
            ((snapshotted_data.`CustomerId` is null) and not (source_data.`CustomerId` is null))
            or
            ((not snapshotted_data.`CustomerId` is null) and (source_data.`CustomerId` is null))
        ) or snapshotted_data.`AddressId` != source_data.`AddressId`
        or
        (
            ((snapshotted_data.`AddressId` is null) and not (source_data.`AddressId` is null))
            or
            ((not snapshotted_data.`AddressId` is null) and (source_data.`AddressId` is null))
        ) or snapshotted_data.`AddressType` != source_data.`AddressType`
        or
        (
            ((snapshotted_data.`AddressType` is null) and not (source_data.`AddressType` is null))
            or
            ((not snapshotted_data.`AddressType` is null) and (source_data.`AddressType` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

    ) as __dbt_sbq
    where false
    limit 0

[0m23:28:10.835648 [debug] [Thread-1 (]: SQL status: OK in 0.340 seconds
[0m23:28:10.837752 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=b68ab58b-89f6-4cd3-bec0-78e68dcb5368) - Closing
[0m23:28:10.931786 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:28:10.932728 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:28:11.043034 [debug] [Thread-1 (]: SQL status: OK in 0.110 seconds
[0m23:28:11.045873 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=07a486ac-7ffa-465c-ad90-bebf061f1eaf) - Closing
[0m23:28:11.122830 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:28:11.122830 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:28:11.122830 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

      merge into `hive_metastore`.`snapshots`.`customeraddress_snapshot` as DBT_INTERNAL_DEST
    
      using `customeraddress_snapshot__dbt_tmp` as DBT_INTERNAL_SOURCE
    
    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id
    when matched
     
       and DBT_INTERNAL_DEST.dbt_valid_to is null
     
     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')
        then update
        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to

    when not matched
     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'
        then insert *
    ;

  
[0m23:28:15.495746 [debug] [Thread-1 (]: SQL status: OK in 4.370 seconds
[0m23:28:15.497738 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=f60c8b0a-fc34-434b-8fe1-90a9c9ca60fd) - Closing
[0m23:28:15.582804 [debug] [Thread-1 (]: Applying DROP to: `customeraddress_snapshot__dbt_tmp`
[0m23:28:15.584951 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:28:15.585947 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */
DROP VIEW IF EXISTS `customeraddress_snapshot__dbt_tmp`
[0m23:28:15.729603 [debug] [Thread-1 (]: SQL status: OK in 0.140 seconds
[0m23:28:15.730612 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=44e442d9-0805-4570-90a6-e1d7a3bc73d1) - Closing
[0m23:28:15.807940 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a86262ce-5f97-4b36-a404-b09ef9bea98b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000021A8E48D420>]}
[0m23:28:15.808940 [info ] [Thread-1 (]: 3 of 7 OK snapshotted snapshots.customeraddress_snapshot ....................... [[32mOK[0m in 9.28s]
[0m23:28:15.810940 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m23:28:15.810940 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.product_snapshot
[0m23:28:15.811722 [info ] [Thread-1 (]: 4 of 7 START snapshot snapshots.product_snapshot ............................... [RUN]
[0m23:28:15.812826 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.customeraddress_snapshot, now snapshot.medalion_dbt_spark.product_snapshot)
[0m23:28:15.813908 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, name=snapshot.medalion_dbt_spark.product_snapshot, idle-time=0.005967140197753906s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m23:28:15.814833 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.product_snapshot
[0m23:28:15.821479 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.product_snapshot
[0m23:28:15.830882 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:28:15.832545 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

      describe extended `hive_metastore`.`snapshots`.`product_snapshot`
  
[0m23:28:16.673010 [debug] [Thread-1 (]: SQL status: OK in 0.840 seconds
[0m23:28:16.682676 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=2a4c2ebe-5104-4b04-a98e-36023ba92b08) - Closing
[0m23:28:16.758680 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:28:16.762744 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */
select * from (
        



with product_snapshot as (
    SELECT
        ProductID,
        Name,
        ProductNumber,
        Color,
        StandardCost,
        ListPrice,
        Size,
        Weight,
        ProductCategoryID,
        ProductModelID,
        SellStartDate,
        SellEndDate,
        DiscontinuedDate,
        ThumbNailPhoto,
        ThumbnailPhotoFileName
    FROM `hive_metastore`.`saleslt`.`product`
)

select * from product_snapshot

    ) as __dbt_sbq
    where false
    limit 0

    
[0m23:28:17.051118 [debug] [Thread-1 (]: SQL status: OK in 0.290 seconds
[0m23:28:17.062750 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=a0920674-64eb-4556-b193-968e73aa65f3) - Closing
[0m23:28:17.140235 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:28:17.141928 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`product_snapshot`

  
[0m23:28:17.475265 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:28:17.478275 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=16ff5400-0989-4e81-94a0-b47d24a8cf34) - Closing
[0m23:28:17.558879 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:28:17.559885 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`product_snapshot`

  
[0m23:28:17.893500 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:28:17.893500 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=9c1ab546-3080-4bbe-b226-8196ab59c9c6) - Closing
[0m23:28:17.976815 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:28:17.985042 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

        
  
    create or replace temporary view `product_snapshot__dbt_tmp` as
      
    
    with snapshot_query as (

        with product_snapshot as (
    SELECT
        ProductID,
        Name,
        ProductNumber,
        Color,
        StandardCost,
        ListPrice,
        Size,
        Weight,
        ProductCategoryID,
        ProductModelID,
        SellStartDate,
        SellEndDate,
        DiscontinuedDate,
        ThumbNailPhoto,
        ThumbnailPhotoFileName
    FROM `hive_metastore`.`saleslt`.`product`
)

select * from product_snapshot

    ),

    snapshotted_data as (

        select *, 
    
        ProductID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`product_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        ProductID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(ProductID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        ProductID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        ProductID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`ProductID` != source_data.`ProductID`
        or
        (
            ((snapshotted_data.`ProductID` is null) and not (source_data.`ProductID` is null))
            or
            ((not snapshotted_data.`ProductID` is null) and (source_data.`ProductID` is null))
        ) or snapshotted_data.`Name` != source_data.`Name`
        or
        (
            ((snapshotted_data.`Name` is null) and not (source_data.`Name` is null))
            or
            ((not snapshotted_data.`Name` is null) and (source_data.`Name` is null))
        ) or snapshotted_data.`ProductNumber` != source_data.`ProductNumber`
        or
        (
            ((snapshotted_data.`ProductNumber` is null) and not (source_data.`ProductNumber` is null))
            or
            ((not snapshotted_data.`ProductNumber` is null) and (source_data.`ProductNumber` is null))
        ) or snapshotted_data.`Color` != source_data.`Color`
        or
        (
            ((snapshotted_data.`Color` is null) and not (source_data.`Color` is null))
            or
            ((not snapshotted_data.`Color` is null) and (source_data.`Color` is null))
        ) or snapshotted_data.`StandardCost` != source_data.`StandardCost`
        or
        (
            ((snapshotted_data.`StandardCost` is null) and not (source_data.`StandardCost` is null))
            or
            ((not snapshotted_data.`StandardCost` is null) and (source_data.`StandardCost` is null))
        ) or snapshotted_data.`ListPrice` != source_data.`ListPrice`
        or
        (
            ((snapshotted_data.`ListPrice` is null) and not (source_data.`ListPrice` is null))
            or
            ((not snapshotted_data.`ListPrice` is null) and (source_data.`ListPrice` is null))
        ) or snapshotted_data.`Size` != source_data.`Size`
        or
        (
            ((snapshotted_data.`Size` is null) and not (source_data.`Size` is null))
            or
            ((not snapshotted_data.`Size` is null) and (source_data.`Size` is null))
        ) or snapshotted_data.`Weight` != source_data.`Weight`
        or
        (
            ((snapshotted_data.`Weight` is null) and not (source_data.`Weight` is null))
            or
            ((not snapshotted_data.`Weight` is null) and (source_data.`Weight` is null))
        ) or snapshotted_data.`ProductCategoryID` != source_data.`ProductCategoryID`
        or
        (
            ((snapshotted_data.`ProductCategoryID` is null) and not (source_data.`ProductCategoryID` is null))
            or
            ((not snapshotted_data.`ProductCategoryID` is null) and (source_data.`ProductCategoryID` is null))
        ) or snapshotted_data.`ProductModelID` != source_data.`ProductModelID`
        or
        (
            ((snapshotted_data.`ProductModelID` is null) and not (source_data.`ProductModelID` is null))
            or
            ((not snapshotted_data.`ProductModelID` is null) and (source_data.`ProductModelID` is null))
        ) or snapshotted_data.`SellStartDate` != source_data.`SellStartDate`
        or
        (
            ((snapshotted_data.`SellStartDate` is null) and not (source_data.`SellStartDate` is null))
            or
            ((not snapshotted_data.`SellStartDate` is null) and (source_data.`SellStartDate` is null))
        ) or snapshotted_data.`SellEndDate` != source_data.`SellEndDate`
        or
        (
            ((snapshotted_data.`SellEndDate` is null) and not (source_data.`SellEndDate` is null))
            or
            ((not snapshotted_data.`SellEndDate` is null) and (source_data.`SellEndDate` is null))
        ) or snapshotted_data.`DiscontinuedDate` != source_data.`DiscontinuedDate`
        or
        (
            ((snapshotted_data.`DiscontinuedDate` is null) and not (source_data.`DiscontinuedDate` is null))
            or
            ((not snapshotted_data.`DiscontinuedDate` is null) and (source_data.`DiscontinuedDate` is null))
        ) or snapshotted_data.`ThumbNailPhoto` != source_data.`ThumbNailPhoto`
        or
        (
            ((snapshotted_data.`ThumbNailPhoto` is null) and not (source_data.`ThumbNailPhoto` is null))
            or
            ((not snapshotted_data.`ThumbNailPhoto` is null) and (source_data.`ThumbNailPhoto` is null))
        ) or snapshotted_data.`ThumbnailPhotoFileName` != source_data.`ThumbnailPhotoFileName`
        or
        (
            ((snapshotted_data.`ThumbnailPhotoFileName` is null) and not (source_data.`ThumbnailPhotoFileName` is null))
            or
            ((not snapshotted_data.`ThumbnailPhotoFileName` is null) and (source_data.`ThumbnailPhotoFileName` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`ProductID` != source_data.`ProductID`
        or
        (
            ((snapshotted_data.`ProductID` is null) and not (source_data.`ProductID` is null))
            or
            ((not snapshotted_data.`ProductID` is null) and (source_data.`ProductID` is null))
        ) or snapshotted_data.`Name` != source_data.`Name`
        or
        (
            ((snapshotted_data.`Name` is null) and not (source_data.`Name` is null))
            or
            ((not snapshotted_data.`Name` is null) and (source_data.`Name` is null))
        ) or snapshotted_data.`ProductNumber` != source_data.`ProductNumber`
        or
        (
            ((snapshotted_data.`ProductNumber` is null) and not (source_data.`ProductNumber` is null))
            or
            ((not snapshotted_data.`ProductNumber` is null) and (source_data.`ProductNumber` is null))
        ) or snapshotted_data.`Color` != source_data.`Color`
        or
        (
            ((snapshotted_data.`Color` is null) and not (source_data.`Color` is null))
            or
            ((not snapshotted_data.`Color` is null) and (source_data.`Color` is null))
        ) or snapshotted_data.`StandardCost` != source_data.`StandardCost`
        or
        (
            ((snapshotted_data.`StandardCost` is null) and not (source_data.`StandardCost` is null))
            or
            ((not snapshotted_data.`StandardCost` is null) and (source_data.`StandardCost` is null))
        ) or snapshotted_data.`ListPrice` != source_data.`ListPrice`
        or
        (
            ((snapshotted_data.`ListPrice` is null) and not (source_data.`ListPrice` is null))
            or
            ((not snapshotted_data.`ListPrice` is null) and (source_data.`ListPrice` is null))
        ) or snapshotted_data.`Size` != source_data.`Size`
        or
        (
            ((snapshotted_data.`Size` is null) and not (source_data.`Size` is null))
            or
            ((not snapshotted_data.`Size` is null) and (source_data.`Size` is null))
        ) or snapshotted_data.`Weight` != source_data.`Weight`
        or
        (
            ((snapshotted_data.`Weight` is null) and not (source_data.`Weight` is null))
            or
            ((not snapshotted_data.`Weight` is null) and (source_data.`Weight` is null))
        ) or snapshotted_data.`ProductCategoryID` != source_data.`ProductCategoryID`
        or
        (
            ((snapshotted_data.`ProductCategoryID` is null) and not (source_data.`ProductCategoryID` is null))
            or
            ((not snapshotted_data.`ProductCategoryID` is null) and (source_data.`ProductCategoryID` is null))
        ) or snapshotted_data.`ProductModelID` != source_data.`ProductModelID`
        or
        (
            ((snapshotted_data.`ProductModelID` is null) and not (source_data.`ProductModelID` is null))
            or
            ((not snapshotted_data.`ProductModelID` is null) and (source_data.`ProductModelID` is null))
        ) or snapshotted_data.`SellStartDate` != source_data.`SellStartDate`
        or
        (
            ((snapshotted_data.`SellStartDate` is null) and not (source_data.`SellStartDate` is null))
            or
            ((not snapshotted_data.`SellStartDate` is null) and (source_data.`SellStartDate` is null))
        ) or snapshotted_data.`SellEndDate` != source_data.`SellEndDate`
        or
        (
            ((snapshotted_data.`SellEndDate` is null) and not (source_data.`SellEndDate` is null))
            or
            ((not snapshotted_data.`SellEndDate` is null) and (source_data.`SellEndDate` is null))
        ) or snapshotted_data.`DiscontinuedDate` != source_data.`DiscontinuedDate`
        or
        (
            ((snapshotted_data.`DiscontinuedDate` is null) and not (source_data.`DiscontinuedDate` is null))
            or
            ((not snapshotted_data.`DiscontinuedDate` is null) and (source_data.`DiscontinuedDate` is null))
        ) or snapshotted_data.`ThumbNailPhoto` != source_data.`ThumbNailPhoto`
        or
        (
            ((snapshotted_data.`ThumbNailPhoto` is null) and not (source_data.`ThumbNailPhoto` is null))
            or
            ((not snapshotted_data.`ThumbNailPhoto` is null) and (source_data.`ThumbNailPhoto` is null))
        ) or snapshotted_data.`ThumbnailPhotoFileName` != source_data.`ThumbnailPhotoFileName`
        or
        (
            ((snapshotted_data.`ThumbnailPhotoFileName` is null) and not (source_data.`ThumbnailPhotoFileName` is null))
            or
            ((not snapshotted_data.`ThumbnailPhotoFileName` is null) and (source_data.`ThumbnailPhotoFileName` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

  
    
[0m23:28:18.346714 [debug] [Thread-1 (]: SQL status: OK in 0.360 seconds
[0m23:28:18.348707 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=970dfd88-d522-41be-9744-01120e2d7d52) - Closing
[0m23:28:18.421127 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:28:18.421592 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

    
DESCRIBE TABLE `product_snapshot__dbt_tmp`

  
[0m23:28:18.581814 [debug] [Thread-1 (]: SQL status: OK in 0.160 seconds
[0m23:28:18.584318 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=9b4fcd0c-74be-4d6f-a6e5-8fe2b71e9f97) - Closing
[0m23:28:18.657017 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:28:18.658014 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`product_snapshot`

  
[0m23:28:19.032920 [debug] [Thread-1 (]: SQL status: OK in 0.370 seconds
[0m23:28:19.035083 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=614bbf0e-4370-42a4-a3b6-177119abd8c9) - Closing
[0m23:28:19.130785 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:28:19.130785 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

    
DESCRIBE TABLE `product_snapshot__dbt_tmp`

  
[0m23:28:19.307235 [debug] [Thread-1 (]: SQL status: OK in 0.180 seconds
[0m23:28:19.309281 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=99922f1b-0e4d-4c55-92d4-dfbc39b2ce3f) - Closing
[0m23:28:19.393150 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:28:19.393150 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`product_snapshot`

  
[0m23:28:19.741573 [debug] [Thread-1 (]: SQL status: OK in 0.350 seconds
[0m23:28:19.743098 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=582a464e-46c0-4081-8918-ed69bb8db8f0) - Closing
[0m23:28:19.817377 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:28:19.818083 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

    
DESCRIBE TABLE `product_snapshot__dbt_tmp`

  
[0m23:28:19.973548 [debug] [Thread-1 (]: SQL status: OK in 0.160 seconds
[0m23:28:19.976873 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=17280a93-d30b-49b3-b30e-b3ce16120ea1) - Closing
[0m23:28:20.052872 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:28:20.052872 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */
select * from (
        
    
    with snapshot_query as (

        with product_snapshot as (
    SELECT
        ProductID,
        Name,
        ProductNumber,
        Color,
        StandardCost,
        ListPrice,
        Size,
        Weight,
        ProductCategoryID,
        ProductModelID,
        SellStartDate,
        SellEndDate,
        DiscontinuedDate,
        ThumbNailPhoto,
        ThumbnailPhotoFileName
    FROM `hive_metastore`.`saleslt`.`product`
)

select * from product_snapshot

    ),

    snapshotted_data as (

        select *, 
    
        ProductID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`product_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        ProductID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(ProductID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        ProductID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        ProductID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`ProductID` != source_data.`ProductID`
        or
        (
            ((snapshotted_data.`ProductID` is null) and not (source_data.`ProductID` is null))
            or
            ((not snapshotted_data.`ProductID` is null) and (source_data.`ProductID` is null))
        ) or snapshotted_data.`Name` != source_data.`Name`
        or
        (
            ((snapshotted_data.`Name` is null) and not (source_data.`Name` is null))
            or
            ((not snapshotted_data.`Name` is null) and (source_data.`Name` is null))
        ) or snapshotted_data.`ProductNumber` != source_data.`ProductNumber`
        or
        (
            ((snapshotted_data.`ProductNumber` is null) and not (source_data.`ProductNumber` is null))
            or
            ((not snapshotted_data.`ProductNumber` is null) and (source_data.`ProductNumber` is null))
        ) or snapshotted_data.`Color` != source_data.`Color`
        or
        (
            ((snapshotted_data.`Color` is null) and not (source_data.`Color` is null))
            or
            ((not snapshotted_data.`Color` is null) and (source_data.`Color` is null))
        ) or snapshotted_data.`StandardCost` != source_data.`StandardCost`
        or
        (
            ((snapshotted_data.`StandardCost` is null) and not (source_data.`StandardCost` is null))
            or
            ((not snapshotted_data.`StandardCost` is null) and (source_data.`StandardCost` is null))
        ) or snapshotted_data.`ListPrice` != source_data.`ListPrice`
        or
        (
            ((snapshotted_data.`ListPrice` is null) and not (source_data.`ListPrice` is null))
            or
            ((not snapshotted_data.`ListPrice` is null) and (source_data.`ListPrice` is null))
        ) or snapshotted_data.`Size` != source_data.`Size`
        or
        (
            ((snapshotted_data.`Size` is null) and not (source_data.`Size` is null))
            or
            ((not snapshotted_data.`Size` is null) and (source_data.`Size` is null))
        ) or snapshotted_data.`Weight` != source_data.`Weight`
        or
        (
            ((snapshotted_data.`Weight` is null) and not (source_data.`Weight` is null))
            or
            ((not snapshotted_data.`Weight` is null) and (source_data.`Weight` is null))
        ) or snapshotted_data.`ProductCategoryID` != source_data.`ProductCategoryID`
        or
        (
            ((snapshotted_data.`ProductCategoryID` is null) and not (source_data.`ProductCategoryID` is null))
            or
            ((not snapshotted_data.`ProductCategoryID` is null) and (source_data.`ProductCategoryID` is null))
        ) or snapshotted_data.`ProductModelID` != source_data.`ProductModelID`
        or
        (
            ((snapshotted_data.`ProductModelID` is null) and not (source_data.`ProductModelID` is null))
            or
            ((not snapshotted_data.`ProductModelID` is null) and (source_data.`ProductModelID` is null))
        ) or snapshotted_data.`SellStartDate` != source_data.`SellStartDate`
        or
        (
            ((snapshotted_data.`SellStartDate` is null) and not (source_data.`SellStartDate` is null))
            or
            ((not snapshotted_data.`SellStartDate` is null) and (source_data.`SellStartDate` is null))
        ) or snapshotted_data.`SellEndDate` != source_data.`SellEndDate`
        or
        (
            ((snapshotted_data.`SellEndDate` is null) and not (source_data.`SellEndDate` is null))
            or
            ((not snapshotted_data.`SellEndDate` is null) and (source_data.`SellEndDate` is null))
        ) or snapshotted_data.`DiscontinuedDate` != source_data.`DiscontinuedDate`
        or
        (
            ((snapshotted_data.`DiscontinuedDate` is null) and not (source_data.`DiscontinuedDate` is null))
            or
            ((not snapshotted_data.`DiscontinuedDate` is null) and (source_data.`DiscontinuedDate` is null))
        ) or snapshotted_data.`ThumbNailPhoto` != source_data.`ThumbNailPhoto`
        or
        (
            ((snapshotted_data.`ThumbNailPhoto` is null) and not (source_data.`ThumbNailPhoto` is null))
            or
            ((not snapshotted_data.`ThumbNailPhoto` is null) and (source_data.`ThumbNailPhoto` is null))
        ) or snapshotted_data.`ThumbnailPhotoFileName` != source_data.`ThumbnailPhotoFileName`
        or
        (
            ((snapshotted_data.`ThumbnailPhotoFileName` is null) and not (source_data.`ThumbnailPhotoFileName` is null))
            or
            ((not snapshotted_data.`ThumbnailPhotoFileName` is null) and (source_data.`ThumbnailPhotoFileName` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`ProductID` != source_data.`ProductID`
        or
        (
            ((snapshotted_data.`ProductID` is null) and not (source_data.`ProductID` is null))
            or
            ((not snapshotted_data.`ProductID` is null) and (source_data.`ProductID` is null))
        ) or snapshotted_data.`Name` != source_data.`Name`
        or
        (
            ((snapshotted_data.`Name` is null) and not (source_data.`Name` is null))
            or
            ((not snapshotted_data.`Name` is null) and (source_data.`Name` is null))
        ) or snapshotted_data.`ProductNumber` != source_data.`ProductNumber`
        or
        (
            ((snapshotted_data.`ProductNumber` is null) and not (source_data.`ProductNumber` is null))
            or
            ((not snapshotted_data.`ProductNumber` is null) and (source_data.`ProductNumber` is null))
        ) or snapshotted_data.`Color` != source_data.`Color`
        or
        (
            ((snapshotted_data.`Color` is null) and not (source_data.`Color` is null))
            or
            ((not snapshotted_data.`Color` is null) and (source_data.`Color` is null))
        ) or snapshotted_data.`StandardCost` != source_data.`StandardCost`
        or
        (
            ((snapshotted_data.`StandardCost` is null) and not (source_data.`StandardCost` is null))
            or
            ((not snapshotted_data.`StandardCost` is null) and (source_data.`StandardCost` is null))
        ) or snapshotted_data.`ListPrice` != source_data.`ListPrice`
        or
        (
            ((snapshotted_data.`ListPrice` is null) and not (source_data.`ListPrice` is null))
            or
            ((not snapshotted_data.`ListPrice` is null) and (source_data.`ListPrice` is null))
        ) or snapshotted_data.`Size` != source_data.`Size`
        or
        (
            ((snapshotted_data.`Size` is null) and not (source_data.`Size` is null))
            or
            ((not snapshotted_data.`Size` is null) and (source_data.`Size` is null))
        ) or snapshotted_data.`Weight` != source_data.`Weight`
        or
        (
            ((snapshotted_data.`Weight` is null) and not (source_data.`Weight` is null))
            or
            ((not snapshotted_data.`Weight` is null) and (source_data.`Weight` is null))
        ) or snapshotted_data.`ProductCategoryID` != source_data.`ProductCategoryID`
        or
        (
            ((snapshotted_data.`ProductCategoryID` is null) and not (source_data.`ProductCategoryID` is null))
            or
            ((not snapshotted_data.`ProductCategoryID` is null) and (source_data.`ProductCategoryID` is null))
        ) or snapshotted_data.`ProductModelID` != source_data.`ProductModelID`
        or
        (
            ((snapshotted_data.`ProductModelID` is null) and not (source_data.`ProductModelID` is null))
            or
            ((not snapshotted_data.`ProductModelID` is null) and (source_data.`ProductModelID` is null))
        ) or snapshotted_data.`SellStartDate` != source_data.`SellStartDate`
        or
        (
            ((snapshotted_data.`SellStartDate` is null) and not (source_data.`SellStartDate` is null))
            or
            ((not snapshotted_data.`SellStartDate` is null) and (source_data.`SellStartDate` is null))
        ) or snapshotted_data.`SellEndDate` != source_data.`SellEndDate`
        or
        (
            ((snapshotted_data.`SellEndDate` is null) and not (source_data.`SellEndDate` is null))
            or
            ((not snapshotted_data.`SellEndDate` is null) and (source_data.`SellEndDate` is null))
        ) or snapshotted_data.`DiscontinuedDate` != source_data.`DiscontinuedDate`
        or
        (
            ((snapshotted_data.`DiscontinuedDate` is null) and not (source_data.`DiscontinuedDate` is null))
            or
            ((not snapshotted_data.`DiscontinuedDate` is null) and (source_data.`DiscontinuedDate` is null))
        ) or snapshotted_data.`ThumbNailPhoto` != source_data.`ThumbNailPhoto`
        or
        (
            ((snapshotted_data.`ThumbNailPhoto` is null) and not (source_data.`ThumbNailPhoto` is null))
            or
            ((not snapshotted_data.`ThumbNailPhoto` is null) and (source_data.`ThumbNailPhoto` is null))
        ) or snapshotted_data.`ThumbnailPhotoFileName` != source_data.`ThumbnailPhotoFileName`
        or
        (
            ((snapshotted_data.`ThumbnailPhotoFileName` is null) and not (source_data.`ThumbnailPhotoFileName` is null))
            or
            ((not snapshotted_data.`ThumbnailPhotoFileName` is null) and (source_data.`ThumbnailPhotoFileName` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

    ) as __dbt_sbq
    where false
    limit 0

[0m23:28:20.502809 [debug] [Thread-1 (]: SQL status: OK in 0.450 seconds
[0m23:28:20.502809 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=1dc105e8-b857-46f9-8667-654557cb85b5) - Closing
[0m23:28:20.588106 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:28:20.588106 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:28:20.736520 [debug] [Thread-1 (]: SQL status: OK in 0.150 seconds
[0m23:28:20.737513 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=de11433e-554f-4daa-9448-efb68b24b8ba) - Closing
[0m23:28:20.810411 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:28:20.810411 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:28:20.812917 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

      merge into `hive_metastore`.`snapshots`.`product_snapshot` as DBT_INTERNAL_DEST
    
      using `product_snapshot__dbt_tmp` as DBT_INTERNAL_SOURCE
    
    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id
    when matched
     
       and DBT_INTERNAL_DEST.dbt_valid_to is null
     
     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')
        then update
        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to

    when not matched
     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'
        then insert *
    ;

  
[0m23:28:26.128236 [debug] [Thread-1 (]: SQL status: OK in 5.310 seconds
[0m23:28:26.130243 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=188a63c8-3dbd-4b8a-ae89-5785561dd449) - Closing
[0m23:28:26.263697 [warn ] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=None) - Exception while closing: Invalid OperationHandle: OperationHandle [opType=EXECUTE_STATEMENT, getHandleIdentifier()=188a63c8-3dbd-4b8a-ae89-5785561dd449]
[0m23:28:26.272705 [debug] [Thread-1 (]: Applying DROP to: `product_snapshot__dbt_tmp`
[0m23:28:26.272705 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:28:26.272705 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */
DROP VIEW IF EXISTS `product_snapshot__dbt_tmp`
[0m23:28:26.393083 [debug] [Thread-1 (]: SQL status: OK in 0.120 seconds
[0m23:28:26.403163 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=1d93a37d-64f6-4f05-8e69-66d8685778cd) - Closing
[0m23:28:26.472799 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a86262ce-5f97-4b36-a404-b09ef9bea98b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000021A8E48D420>]}
[0m23:28:26.483127 [info ] [Thread-1 (]: 4 of 7 OK snapshotted snapshots.product_snapshot ............................... [[32mOK[0m in 10.66s]
[0m23:28:26.483127 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.product_snapshot
[0m23:28:26.483127 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.productmodel_snapshot
[0m23:28:26.483127 [info ] [Thread-1 (]: 5 of 7 START snapshot snapshots.productmodel_snapshot .......................... [RUN]
[0m23:28:26.483127 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.product_snapshot, now snapshot.medalion_dbt_spark.productmodel_snapshot)
[0m23:28:26.483127 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, name=snapshot.medalion_dbt_spark.productmodel_snapshot, idle-time=0.010327816009521484s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.product_snapshot
[0m23:28:26.483127 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.productmodel_snapshot
[0m23:28:26.492847 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.productmodel_snapshot
[0m23:28:26.502872 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:28:26.502872 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

      describe extended `hive_metastore`.`snapshots`.`productmodel_snapshot`
  
[0m23:28:26.968793 [debug] [Thread-1 (]: SQL status: OK in 0.460 seconds
[0m23:28:26.970795 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=df89fb5c-22c2-4ba0-a6d3-8af4fe16363e) - Closing
[0m23:28:27.138868 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:28:27.143054 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */
select * from (
        



with product_snapshot as (
    SELECT
        ProductModelID,
        Name,
        CatalogDescription
    FROM `hive_metastore`.`saleslt`.`productmodel`
)

select * from product_snapshot

    ) as __dbt_sbq
    where false
    limit 0

    
[0m23:28:27.403081 [debug] [Thread-1 (]: SQL status: OK in 0.260 seconds
[0m23:28:27.413016 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=79be7590-598d-4208-9fd5-6e5d1a36b358) - Closing
[0m23:28:27.482630 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:28:27.482630 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`productmodel_snapshot`

  
[0m23:28:27.882780 [debug] [Thread-1 (]: SQL status: OK in 0.400 seconds
[0m23:28:27.892932 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=2001ab1a-6ce7-4f20-83f9-0f8119cc68a7) - Closing
[0m23:28:27.972751 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:28:27.972751 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`productmodel_snapshot`

  
[0m23:28:28.282879 [debug] [Thread-1 (]: SQL status: OK in 0.310 seconds
[0m23:28:28.282879 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=e6573795-87b0-47dc-a48a-8a0d81840986) - Closing
[0m23:28:28.363038 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:28:28.363038 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

        
  
    create or replace temporary view `productmodel_snapshot__dbt_tmp` as
      
    
    with snapshot_query as (

        with product_snapshot as (
    SELECT
        ProductModelID,
        Name,
        CatalogDescription
    FROM `hive_metastore`.`saleslt`.`productmodel`
)

select * from product_snapshot

    ),

    snapshotted_data as (

        select *, 
    
        ProductModelID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`productmodel_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        ProductModelID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(ProductModelID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        ProductModelID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        ProductModelID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`ProductModelID` != source_data.`ProductModelID`
        or
        (
            ((snapshotted_data.`ProductModelID` is null) and not (source_data.`ProductModelID` is null))
            or
            ((not snapshotted_data.`ProductModelID` is null) and (source_data.`ProductModelID` is null))
        ) or snapshotted_data.`Name` != source_data.`Name`
        or
        (
            ((snapshotted_data.`Name` is null) and not (source_data.`Name` is null))
            or
            ((not snapshotted_data.`Name` is null) and (source_data.`Name` is null))
        ) or snapshotted_data.`CatalogDescription` != source_data.`CatalogDescription`
        or
        (
            ((snapshotted_data.`CatalogDescription` is null) and not (source_data.`CatalogDescription` is null))
            or
            ((not snapshotted_data.`CatalogDescription` is null) and (source_data.`CatalogDescription` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`ProductModelID` != source_data.`ProductModelID`
        or
        (
            ((snapshotted_data.`ProductModelID` is null) and not (source_data.`ProductModelID` is null))
            or
            ((not snapshotted_data.`ProductModelID` is null) and (source_data.`ProductModelID` is null))
        ) or snapshotted_data.`Name` != source_data.`Name`
        or
        (
            ((snapshotted_data.`Name` is null) and not (source_data.`Name` is null))
            or
            ((not snapshotted_data.`Name` is null) and (source_data.`Name` is null))
        ) or snapshotted_data.`CatalogDescription` != source_data.`CatalogDescription`
        or
        (
            ((snapshotted_data.`CatalogDescription` is null) and not (source_data.`CatalogDescription` is null))
            or
            ((not snapshotted_data.`CatalogDescription` is null) and (source_data.`CatalogDescription` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

  
    
[0m23:28:28.677313 [debug] [Thread-1 (]: SQL status: OK in 0.310 seconds
[0m23:28:28.679317 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=01f358f0-b5af-4d9c-a9cb-9885b0eaad6d) - Closing
[0m23:28:28.753657 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:28:28.755663 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

    
DESCRIBE TABLE `productmodel_snapshot__dbt_tmp`

  
[0m23:28:28.893531 [debug] [Thread-1 (]: SQL status: OK in 0.140 seconds
[0m23:28:28.897838 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=0cebe81f-2df9-496e-abf1-af27be7a6865) - Closing
[0m23:28:28.976333 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:28:28.977328 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`productmodel_snapshot`

  
[0m23:28:29.292887 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:28:29.292887 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=23bb9d25-0ac5-4308-9a60-f0326c4e054e) - Closing
[0m23:28:29.362836 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:28:29.362836 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

    
DESCRIBE TABLE `productmodel_snapshot__dbt_tmp`

  
[0m23:28:29.512903 [debug] [Thread-1 (]: SQL status: OK in 0.140 seconds
[0m23:28:29.512903 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=ece2fed6-99a0-4fac-8606-9b8fd44d205a) - Closing
[0m23:28:29.592744 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:28:29.592744 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`productmodel_snapshot`

  
[0m23:28:29.902895 [debug] [Thread-1 (]: SQL status: OK in 0.310 seconds
[0m23:28:29.902895 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=b6fa8793-6045-447f-b942-b324d836538e) - Closing
[0m23:28:29.975946 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:28:29.983454 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

    
DESCRIBE TABLE `productmodel_snapshot__dbt_tmp`

  
[0m23:28:30.152990 [debug] [Thread-1 (]: SQL status: OK in 0.170 seconds
[0m23:28:30.156907 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=c4e550c0-7a9d-4053-b94e-8a269a3a5888) - Closing
[0m23:28:30.230761 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:28:30.230761 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */
select * from (
        
    
    with snapshot_query as (

        with product_snapshot as (
    SELECT
        ProductModelID,
        Name,
        CatalogDescription
    FROM `hive_metastore`.`saleslt`.`productmodel`
)

select * from product_snapshot

    ),

    snapshotted_data as (

        select *, 
    
        ProductModelID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`productmodel_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        ProductModelID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(ProductModelID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        ProductModelID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        ProductModelID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`ProductModelID` != source_data.`ProductModelID`
        or
        (
            ((snapshotted_data.`ProductModelID` is null) and not (source_data.`ProductModelID` is null))
            or
            ((not snapshotted_data.`ProductModelID` is null) and (source_data.`ProductModelID` is null))
        ) or snapshotted_data.`Name` != source_data.`Name`
        or
        (
            ((snapshotted_data.`Name` is null) and not (source_data.`Name` is null))
            or
            ((not snapshotted_data.`Name` is null) and (source_data.`Name` is null))
        ) or snapshotted_data.`CatalogDescription` != source_data.`CatalogDescription`
        or
        (
            ((snapshotted_data.`CatalogDescription` is null) and not (source_data.`CatalogDescription` is null))
            or
            ((not snapshotted_data.`CatalogDescription` is null) and (source_data.`CatalogDescription` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`ProductModelID` != source_data.`ProductModelID`
        or
        (
            ((snapshotted_data.`ProductModelID` is null) and not (source_data.`ProductModelID` is null))
            or
            ((not snapshotted_data.`ProductModelID` is null) and (source_data.`ProductModelID` is null))
        ) or snapshotted_data.`Name` != source_data.`Name`
        or
        (
            ((snapshotted_data.`Name` is null) and not (source_data.`Name` is null))
            or
            ((not snapshotted_data.`Name` is null) and (source_data.`Name` is null))
        ) or snapshotted_data.`CatalogDescription` != source_data.`CatalogDescription`
        or
        (
            ((snapshotted_data.`CatalogDescription` is null) and not (source_data.`CatalogDescription` is null))
            or
            ((not snapshotted_data.`CatalogDescription` is null) and (source_data.`CatalogDescription` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

    ) as __dbt_sbq
    where false
    limit 0

[0m23:28:30.533039 [debug] [Thread-1 (]: SQL status: OK in 0.300 seconds
[0m23:28:30.533039 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=06aade67-4d2d-41c6-a4f7-27d84db7db12) - Closing
[0m23:28:30.613885 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:28:30.620423 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:28:30.747148 [debug] [Thread-1 (]: SQL status: OK in 0.130 seconds
[0m23:28:30.747148 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=45dc23bd-d9b3-4cc8-ac47-2ebfa9057f7a) - Closing
[0m23:28:30.838507 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:28:30.840502 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:28:30.840502 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

      merge into `hive_metastore`.`snapshots`.`productmodel_snapshot` as DBT_INTERNAL_DEST
    
      using `productmodel_snapshot__dbt_tmp` as DBT_INTERNAL_SOURCE
    
    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id
    when matched
     
       and DBT_INTERNAL_DEST.dbt_valid_to is null
     
     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')
        then update
        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to

    when not matched
     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'
        then insert *
    ;

  
[0m23:28:35.064433 [debug] [Thread-1 (]: SQL status: OK in 4.220 seconds
[0m23:28:35.066257 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=94821daa-3e94-4cb6-acf1-1a843a7518ad) - Closing
[0m23:28:35.143737 [debug] [Thread-1 (]: Applying DROP to: `productmodel_snapshot__dbt_tmp`
[0m23:28:35.144905 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:28:35.145996 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */
DROP VIEW IF EXISTS `productmodel_snapshot__dbt_tmp`
[0m23:28:35.282816 [debug] [Thread-1 (]: SQL status: OK in 0.140 seconds
[0m23:28:35.282816 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=59077cf7-1567-4f38-92b5-7bd9f72a679e) - Closing
[0m23:28:35.371034 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a86262ce-5f97-4b36-a404-b09ef9bea98b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000021AABD2FA30>]}
[0m23:28:35.373142 [info ] [Thread-1 (]: 5 of 7 OK snapshotted snapshots.productmodel_snapshot .......................... [[32mOK[0m in 8.88s]
[0m23:28:35.373142 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.productmodel_snapshot
[0m23:28:35.373142 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m23:28:35.373142 [info ] [Thread-1 (]: 6 of 7 START snapshot snapshots.salesorderdetail_snapshot ...................... [RUN]
[0m23:28:35.373142 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.productmodel_snapshot, now snapshot.medalion_dbt_spark.salesorderdetail_snapshot)
[0m23:28:35.373142 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, name=snapshot.medalion_dbt_spark.salesorderdetail_snapshot, idle-time=0.008627891540527344s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.productmodel_snapshot
[0m23:28:35.378578 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m23:28:35.384956 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m23:28:35.385713 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:28:35.385713 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

      describe extended `hive_metastore`.`snapshots`.`salesorderdetail_snapshot`
  
[0m23:28:35.829519 [debug] [Thread-1 (]: SQL status: OK in 0.440 seconds
[0m23:28:35.834504 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=aaeba332-0329-4425-a332-337bd6f9a398) - Closing
[0m23:28:35.902793 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:28:35.902793 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */
select * from (
        



with salesorderdetail_snapshot as (
    SELECT
        SalesOrderID,
        SalesOrderDetailID,
        OrderQty,
        ProductID,
        UnitPrice,
        UnitPriceDiscount,
        LineTotal
    FROM `hive_metastore`.`saleslt`.`salesorderdetail`
)

select * from salesorderdetail_snapshot

    ) as __dbt_sbq
    where false
    limit 0

    
[0m23:28:36.189720 [debug] [Thread-1 (]: SQL status: OK in 0.290 seconds
[0m23:28:36.197097 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=a2bf93fd-aaea-4dfc-a8a8-b5eae9b5b1af) - Closing
[0m23:28:36.273100 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:28:36.279577 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`salesorderdetail_snapshot`

  
[0m23:28:36.611628 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:28:36.617487 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=a428e77f-a01a-49f8-befc-a01b5d626564) - Closing
[0m23:28:36.688765 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:28:36.689409 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`salesorderdetail_snapshot`

  
[0m23:28:37.018699 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:28:37.024367 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=87a1fdde-af3b-4fa3-8193-36948c0bd158) - Closing
[0m23:28:37.102723 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:28:37.106235 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

        
  
    create or replace temporary view `salesorderdetail_snapshot__dbt_tmp` as
      
    
    with snapshot_query as (

        with salesorderdetail_snapshot as (
    SELECT
        SalesOrderID,
        SalesOrderDetailID,
        OrderQty,
        ProductID,
        UnitPrice,
        UnitPriceDiscount,
        LineTotal
    FROM `hive_metastore`.`saleslt`.`salesorderdetail`
)

select * from salesorderdetail_snapshot

    ),

    snapshotted_data as (

        select *, 
    
        SalesOrderDetailID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`salesorderdetail_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        SalesOrderDetailID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(SalesOrderDetailID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        SalesOrderDetailID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        SalesOrderDetailID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`SalesOrderID` != source_data.`SalesOrderID`
        or
        (
            ((snapshotted_data.`SalesOrderID` is null) and not (source_data.`SalesOrderID` is null))
            or
            ((not snapshotted_data.`SalesOrderID` is null) and (source_data.`SalesOrderID` is null))
        ) or snapshotted_data.`SalesOrderDetailID` != source_data.`SalesOrderDetailID`
        or
        (
            ((snapshotted_data.`SalesOrderDetailID` is null) and not (source_data.`SalesOrderDetailID` is null))
            or
            ((not snapshotted_data.`SalesOrderDetailID` is null) and (source_data.`SalesOrderDetailID` is null))
        ) or snapshotted_data.`OrderQty` != source_data.`OrderQty`
        or
        (
            ((snapshotted_data.`OrderQty` is null) and not (source_data.`OrderQty` is null))
            or
            ((not snapshotted_data.`OrderQty` is null) and (source_data.`OrderQty` is null))
        ) or snapshotted_data.`ProductID` != source_data.`ProductID`
        or
        (
            ((snapshotted_data.`ProductID` is null) and not (source_data.`ProductID` is null))
            or
            ((not snapshotted_data.`ProductID` is null) and (source_data.`ProductID` is null))
        ) or snapshotted_data.`UnitPrice` != source_data.`UnitPrice`
        or
        (
            ((snapshotted_data.`UnitPrice` is null) and not (source_data.`UnitPrice` is null))
            or
            ((not snapshotted_data.`UnitPrice` is null) and (source_data.`UnitPrice` is null))
        ) or snapshotted_data.`UnitPriceDiscount` != source_data.`UnitPriceDiscount`
        or
        (
            ((snapshotted_data.`UnitPriceDiscount` is null) and not (source_data.`UnitPriceDiscount` is null))
            or
            ((not snapshotted_data.`UnitPriceDiscount` is null) and (source_data.`UnitPriceDiscount` is null))
        ) or snapshotted_data.`LineTotal` != source_data.`LineTotal`
        or
        (
            ((snapshotted_data.`LineTotal` is null) and not (source_data.`LineTotal` is null))
            or
            ((not snapshotted_data.`LineTotal` is null) and (source_data.`LineTotal` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`SalesOrderID` != source_data.`SalesOrderID`
        or
        (
            ((snapshotted_data.`SalesOrderID` is null) and not (source_data.`SalesOrderID` is null))
            or
            ((not snapshotted_data.`SalesOrderID` is null) and (source_data.`SalesOrderID` is null))
        ) or snapshotted_data.`SalesOrderDetailID` != source_data.`SalesOrderDetailID`
        or
        (
            ((snapshotted_data.`SalesOrderDetailID` is null) and not (source_data.`SalesOrderDetailID` is null))
            or
            ((not snapshotted_data.`SalesOrderDetailID` is null) and (source_data.`SalesOrderDetailID` is null))
        ) or snapshotted_data.`OrderQty` != source_data.`OrderQty`
        or
        (
            ((snapshotted_data.`OrderQty` is null) and not (source_data.`OrderQty` is null))
            or
            ((not snapshotted_data.`OrderQty` is null) and (source_data.`OrderQty` is null))
        ) or snapshotted_data.`ProductID` != source_data.`ProductID`
        or
        (
            ((snapshotted_data.`ProductID` is null) and not (source_data.`ProductID` is null))
            or
            ((not snapshotted_data.`ProductID` is null) and (source_data.`ProductID` is null))
        ) or snapshotted_data.`UnitPrice` != source_data.`UnitPrice`
        or
        (
            ((snapshotted_data.`UnitPrice` is null) and not (source_data.`UnitPrice` is null))
            or
            ((not snapshotted_data.`UnitPrice` is null) and (source_data.`UnitPrice` is null))
        ) or snapshotted_data.`UnitPriceDiscount` != source_data.`UnitPriceDiscount`
        or
        (
            ((snapshotted_data.`UnitPriceDiscount` is null) and not (source_data.`UnitPriceDiscount` is null))
            or
            ((not snapshotted_data.`UnitPriceDiscount` is null) and (source_data.`UnitPriceDiscount` is null))
        ) or snapshotted_data.`LineTotal` != source_data.`LineTotal`
        or
        (
            ((snapshotted_data.`LineTotal` is null) and not (source_data.`LineTotal` is null))
            or
            ((not snapshotted_data.`LineTotal` is null) and (source_data.`LineTotal` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

  
    
[0m23:28:37.410343 [debug] [Thread-1 (]: SQL status: OK in 0.300 seconds
[0m23:28:37.413155 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=0f5ac661-5915-4e47-a892-4115a423a0c6) - Closing
[0m23:28:37.485698 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:28:37.486382 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

    
DESCRIBE TABLE `salesorderdetail_snapshot__dbt_tmp`

  
[0m23:28:37.625516 [debug] [Thread-1 (]: SQL status: OK in 0.140 seconds
[0m23:28:37.632005 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=a8b97dd6-c32e-40b3-956e-735052aee5df) - Closing
[0m23:28:37.717655 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:28:37.723717 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`salesorderdetail_snapshot`

  
[0m23:28:38.043139 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:28:38.050481 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=d52dcf8c-8c6b-4d30-8efe-d1268809d598) - Closing
[0m23:28:38.134951 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:28:38.136963 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

    
DESCRIBE TABLE `salesorderdetail_snapshot__dbt_tmp`

  
[0m23:28:38.311110 [debug] [Thread-1 (]: SQL status: OK in 0.170 seconds
[0m23:28:38.319160 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=cd79f4fb-1103-4357-9e26-64b2d7acf3c8) - Closing
[0m23:28:38.413286 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:28:38.415579 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`salesorderdetail_snapshot`

  
[0m23:28:38.801544 [debug] [Thread-1 (]: SQL status: OK in 0.380 seconds
[0m23:28:38.805423 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=1ca8a6f0-628e-43e4-a6fb-efadd5973dc7) - Closing
[0m23:28:38.880956 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:28:38.881955 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

    
DESCRIBE TABLE `salesorderdetail_snapshot__dbt_tmp`

  
[0m23:28:39.032641 [debug] [Thread-1 (]: SQL status: OK in 0.150 seconds
[0m23:28:39.035167 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=618666e8-1afa-4d84-b742-05da26912e8f) - Closing
[0m23:28:39.101751 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:28:39.102940 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */
select * from (
        
    
    with snapshot_query as (

        with salesorderdetail_snapshot as (
    SELECT
        SalesOrderID,
        SalesOrderDetailID,
        OrderQty,
        ProductID,
        UnitPrice,
        UnitPriceDiscount,
        LineTotal
    FROM `hive_metastore`.`saleslt`.`salesorderdetail`
)

select * from salesorderdetail_snapshot

    ),

    snapshotted_data as (

        select *, 
    
        SalesOrderDetailID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`salesorderdetail_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        SalesOrderDetailID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(SalesOrderDetailID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        SalesOrderDetailID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        SalesOrderDetailID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`SalesOrderID` != source_data.`SalesOrderID`
        or
        (
            ((snapshotted_data.`SalesOrderID` is null) and not (source_data.`SalesOrderID` is null))
            or
            ((not snapshotted_data.`SalesOrderID` is null) and (source_data.`SalesOrderID` is null))
        ) or snapshotted_data.`SalesOrderDetailID` != source_data.`SalesOrderDetailID`
        or
        (
            ((snapshotted_data.`SalesOrderDetailID` is null) and not (source_data.`SalesOrderDetailID` is null))
            or
            ((not snapshotted_data.`SalesOrderDetailID` is null) and (source_data.`SalesOrderDetailID` is null))
        ) or snapshotted_data.`OrderQty` != source_data.`OrderQty`
        or
        (
            ((snapshotted_data.`OrderQty` is null) and not (source_data.`OrderQty` is null))
            or
            ((not snapshotted_data.`OrderQty` is null) and (source_data.`OrderQty` is null))
        ) or snapshotted_data.`ProductID` != source_data.`ProductID`
        or
        (
            ((snapshotted_data.`ProductID` is null) and not (source_data.`ProductID` is null))
            or
            ((not snapshotted_data.`ProductID` is null) and (source_data.`ProductID` is null))
        ) or snapshotted_data.`UnitPrice` != source_data.`UnitPrice`
        or
        (
            ((snapshotted_data.`UnitPrice` is null) and not (source_data.`UnitPrice` is null))
            or
            ((not snapshotted_data.`UnitPrice` is null) and (source_data.`UnitPrice` is null))
        ) or snapshotted_data.`UnitPriceDiscount` != source_data.`UnitPriceDiscount`
        or
        (
            ((snapshotted_data.`UnitPriceDiscount` is null) and not (source_data.`UnitPriceDiscount` is null))
            or
            ((not snapshotted_data.`UnitPriceDiscount` is null) and (source_data.`UnitPriceDiscount` is null))
        ) or snapshotted_data.`LineTotal` != source_data.`LineTotal`
        or
        (
            ((snapshotted_data.`LineTotal` is null) and not (source_data.`LineTotal` is null))
            or
            ((not snapshotted_data.`LineTotal` is null) and (source_data.`LineTotal` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`SalesOrderID` != source_data.`SalesOrderID`
        or
        (
            ((snapshotted_data.`SalesOrderID` is null) and not (source_data.`SalesOrderID` is null))
            or
            ((not snapshotted_data.`SalesOrderID` is null) and (source_data.`SalesOrderID` is null))
        ) or snapshotted_data.`SalesOrderDetailID` != source_data.`SalesOrderDetailID`
        or
        (
            ((snapshotted_data.`SalesOrderDetailID` is null) and not (source_data.`SalesOrderDetailID` is null))
            or
            ((not snapshotted_data.`SalesOrderDetailID` is null) and (source_data.`SalesOrderDetailID` is null))
        ) or snapshotted_data.`OrderQty` != source_data.`OrderQty`
        or
        (
            ((snapshotted_data.`OrderQty` is null) and not (source_data.`OrderQty` is null))
            or
            ((not snapshotted_data.`OrderQty` is null) and (source_data.`OrderQty` is null))
        ) or snapshotted_data.`ProductID` != source_data.`ProductID`
        or
        (
            ((snapshotted_data.`ProductID` is null) and not (source_data.`ProductID` is null))
            or
            ((not snapshotted_data.`ProductID` is null) and (source_data.`ProductID` is null))
        ) or snapshotted_data.`UnitPrice` != source_data.`UnitPrice`
        or
        (
            ((snapshotted_data.`UnitPrice` is null) and not (source_data.`UnitPrice` is null))
            or
            ((not snapshotted_data.`UnitPrice` is null) and (source_data.`UnitPrice` is null))
        ) or snapshotted_data.`UnitPriceDiscount` != source_data.`UnitPriceDiscount`
        or
        (
            ((snapshotted_data.`UnitPriceDiscount` is null) and not (source_data.`UnitPriceDiscount` is null))
            or
            ((not snapshotted_data.`UnitPriceDiscount` is null) and (source_data.`UnitPriceDiscount` is null))
        ) or snapshotted_data.`LineTotal` != source_data.`LineTotal`
        or
        (
            ((snapshotted_data.`LineTotal` is null) and not (source_data.`LineTotal` is null))
            or
            ((not snapshotted_data.`LineTotal` is null) and (source_data.`LineTotal` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

    ) as __dbt_sbq
    where false
    limit 0

[0m23:28:39.405982 [debug] [Thread-1 (]: SQL status: OK in 0.300 seconds
[0m23:28:39.405982 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=cb4ff22d-5f20-49e0-91f4-e9bffebb4a71) - Closing
[0m23:28:39.478441 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:28:39.482387 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:28:39.592740 [debug] [Thread-1 (]: SQL status: OK in 0.110 seconds
[0m23:28:39.599400 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=604b9cf4-51c3-4f8c-8075-61722b163417) - Closing
[0m23:28:39.675705 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:28:39.676668 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:28:39.676668 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

      merge into `hive_metastore`.`snapshots`.`salesorderdetail_snapshot` as DBT_INTERNAL_DEST
    
      using `salesorderdetail_snapshot__dbt_tmp` as DBT_INTERNAL_SOURCE
    
    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id
    when matched
     
       and DBT_INTERNAL_DEST.dbt_valid_to is null
     
     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')
        then update
        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to

    when not matched
     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'
        then insert *
    ;

  
[0m23:28:43.724893 [debug] [Thread-1 (]: SQL status: OK in 4.050 seconds
[0m23:28:43.724893 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=2dd5cdda-053a-473d-911d-4925a3b0829c) - Closing
[0m23:28:43.815835 [debug] [Thread-1 (]: Applying DROP to: `salesorderdetail_snapshot__dbt_tmp`
[0m23:28:43.816844 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:28:43.816844 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */
DROP VIEW IF EXISTS `salesorderdetail_snapshot__dbt_tmp`
[0m23:28:43.973189 [debug] [Thread-1 (]: SQL status: OK in 0.160 seconds
[0m23:28:43.973189 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=871e8eb2-e238-4b8e-a6a2-8f5ac69e73a8) - Closing
[0m23:28:44.052951 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a86262ce-5f97-4b36-a404-b09ef9bea98b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000021AABC91ED0>]}
[0m23:28:44.054909 [info ] [Thread-1 (]: 6 of 7 OK snapshotted snapshots.salesorderdetail_snapshot ...................... [[32mOK[0m in 8.68s]
[0m23:28:44.054909 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m23:28:44.054909 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.salesorderheader_snapshot
[0m23:28:44.059427 [info ] [Thread-1 (]: 7 of 7 START snapshot snapshots.salesorderheader_snapshot ...................... [RUN]
[0m23:28:44.059665 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.salesorderdetail_snapshot, now snapshot.medalion_dbt_spark.salesorderheader_snapshot)
[0m23:28:44.059665 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, name=snapshot.medalion_dbt_spark.salesorderheader_snapshot, idle-time=0.006714820861816406s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m23:28:44.061314 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.salesorderheader_snapshot
[0m23:28:44.063163 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.salesorderheader_snapshot
[0m23:28:44.072757 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:28:44.075676 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

      describe extended `hive_metastore`.`snapshots`.`salesorderheader_snapshot`
  
[0m23:28:44.593036 [debug] [Thread-1 (]: SQL status: OK in 0.520 seconds
[0m23:28:44.596166 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=4ef3f37f-c3f4-411a-8df2-5a5710c986fe) - Closing
[0m23:28:44.673989 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:28:44.673989 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */
select * from (
        



with salesorderheader_snapshot as (
    SELECT
        SalesOrderID,
        RevisionNumber,
        OrderDate,
        DueDate,
        ShipDate,
        Status,
        OnlineOrderFlag,
        SalesOrderNumber,
        PurchaseOrderNumber,
        AccountNumber,
        CustomerID,
        ShipToAddressID,
        BillToAddressID,
        ShipMethod,
        CreditCardApprovalCode,
        SubTotal,
        TaxAmt,
        Freight,
        TotalDue,
        Comment
    FROM `hive_metastore`.`saleslt`.`salesorderheader`
)

select * from salesorderheader_snapshot

    ) as __dbt_sbq
    where false
    limit 0

    
[0m23:28:44.932880 [debug] [Thread-1 (]: SQL status: OK in 0.260 seconds
[0m23:28:44.942918 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=42821886-c31f-4784-b980-dba08df7c777) - Closing
[0m23:28:45.022835 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:28:45.022835 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`salesorderheader_snapshot`

  
[0m23:28:45.337194 [debug] [Thread-1 (]: SQL status: OK in 0.310 seconds
[0m23:28:45.342833 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=687598c9-409f-472c-8e0e-375c0985aa9f) - Closing
[0m23:28:45.422989 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:28:45.422989 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`salesorderheader_snapshot`

  
[0m23:28:45.723032 [debug] [Thread-1 (]: SQL status: OK in 0.300 seconds
[0m23:28:45.735046 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=2c07795f-48bb-4b83-9667-380c84e27c26) - Closing
[0m23:28:45.826965 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:28:45.826965 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

        
  
    create or replace temporary view `salesorderheader_snapshot__dbt_tmp` as
      
    
    with snapshot_query as (

        with salesorderheader_snapshot as (
    SELECT
        SalesOrderID,
        RevisionNumber,
        OrderDate,
        DueDate,
        ShipDate,
        Status,
        OnlineOrderFlag,
        SalesOrderNumber,
        PurchaseOrderNumber,
        AccountNumber,
        CustomerID,
        ShipToAddressID,
        BillToAddressID,
        ShipMethod,
        CreditCardApprovalCode,
        SubTotal,
        TaxAmt,
        Freight,
        TotalDue,
        Comment
    FROM `hive_metastore`.`saleslt`.`salesorderheader`
)

select * from salesorderheader_snapshot

    ),

    snapshotted_data as (

        select *, 
    
        SalesOrderID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`salesorderheader_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        SalesOrderID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(SalesOrderID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        SalesOrderID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        SalesOrderID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`SalesOrderID` != source_data.`SalesOrderID`
        or
        (
            ((snapshotted_data.`SalesOrderID` is null) and not (source_data.`SalesOrderID` is null))
            or
            ((not snapshotted_data.`SalesOrderID` is null) and (source_data.`SalesOrderID` is null))
        ) or snapshotted_data.`RevisionNumber` != source_data.`RevisionNumber`
        or
        (
            ((snapshotted_data.`RevisionNumber` is null) and not (source_data.`RevisionNumber` is null))
            or
            ((not snapshotted_data.`RevisionNumber` is null) and (source_data.`RevisionNumber` is null))
        ) or snapshotted_data.`OrderDate` != source_data.`OrderDate`
        or
        (
            ((snapshotted_data.`OrderDate` is null) and not (source_data.`OrderDate` is null))
            or
            ((not snapshotted_data.`OrderDate` is null) and (source_data.`OrderDate` is null))
        ) or snapshotted_data.`DueDate` != source_data.`DueDate`
        or
        (
            ((snapshotted_data.`DueDate` is null) and not (source_data.`DueDate` is null))
            or
            ((not snapshotted_data.`DueDate` is null) and (source_data.`DueDate` is null))
        ) or snapshotted_data.`ShipDate` != source_data.`ShipDate`
        or
        (
            ((snapshotted_data.`ShipDate` is null) and not (source_data.`ShipDate` is null))
            or
            ((not snapshotted_data.`ShipDate` is null) and (source_data.`ShipDate` is null))
        ) or snapshotted_data.`Status` != source_data.`Status`
        or
        (
            ((snapshotted_data.`Status` is null) and not (source_data.`Status` is null))
            or
            ((not snapshotted_data.`Status` is null) and (source_data.`Status` is null))
        ) or snapshotted_data.`OnlineOrderFlag` != source_data.`OnlineOrderFlag`
        or
        (
            ((snapshotted_data.`OnlineOrderFlag` is null) and not (source_data.`OnlineOrderFlag` is null))
            or
            ((not snapshotted_data.`OnlineOrderFlag` is null) and (source_data.`OnlineOrderFlag` is null))
        ) or snapshotted_data.`SalesOrderNumber` != source_data.`SalesOrderNumber`
        or
        (
            ((snapshotted_data.`SalesOrderNumber` is null) and not (source_data.`SalesOrderNumber` is null))
            or
            ((not snapshotted_data.`SalesOrderNumber` is null) and (source_data.`SalesOrderNumber` is null))
        ) or snapshotted_data.`PurchaseOrderNumber` != source_data.`PurchaseOrderNumber`
        or
        (
            ((snapshotted_data.`PurchaseOrderNumber` is null) and not (source_data.`PurchaseOrderNumber` is null))
            or
            ((not snapshotted_data.`PurchaseOrderNumber` is null) and (source_data.`PurchaseOrderNumber` is null))
        ) or snapshotted_data.`AccountNumber` != source_data.`AccountNumber`
        or
        (
            ((snapshotted_data.`AccountNumber` is null) and not (source_data.`AccountNumber` is null))
            or
            ((not snapshotted_data.`AccountNumber` is null) and (source_data.`AccountNumber` is null))
        ) or snapshotted_data.`CustomerID` != source_data.`CustomerID`
        or
        (
            ((snapshotted_data.`CustomerID` is null) and not (source_data.`CustomerID` is null))
            or
            ((not snapshotted_data.`CustomerID` is null) and (source_data.`CustomerID` is null))
        ) or snapshotted_data.`ShipToAddressID` != source_data.`ShipToAddressID`
        or
        (
            ((snapshotted_data.`ShipToAddressID` is null) and not (source_data.`ShipToAddressID` is null))
            or
            ((not snapshotted_data.`ShipToAddressID` is null) and (source_data.`ShipToAddressID` is null))
        ) or snapshotted_data.`BillToAddressID` != source_data.`BillToAddressID`
        or
        (
            ((snapshotted_data.`BillToAddressID` is null) and not (source_data.`BillToAddressID` is null))
            or
            ((not snapshotted_data.`BillToAddressID` is null) and (source_data.`BillToAddressID` is null))
        ) or snapshotted_data.`ShipMethod` != source_data.`ShipMethod`
        or
        (
            ((snapshotted_data.`ShipMethod` is null) and not (source_data.`ShipMethod` is null))
            or
            ((not snapshotted_data.`ShipMethod` is null) and (source_data.`ShipMethod` is null))
        ) or snapshotted_data.`CreditCardApprovalCode` != source_data.`CreditCardApprovalCode`
        or
        (
            ((snapshotted_data.`CreditCardApprovalCode` is null) and not (source_data.`CreditCardApprovalCode` is null))
            or
            ((not snapshotted_data.`CreditCardApprovalCode` is null) and (source_data.`CreditCardApprovalCode` is null))
        ) or snapshotted_data.`SubTotal` != source_data.`SubTotal`
        or
        (
            ((snapshotted_data.`SubTotal` is null) and not (source_data.`SubTotal` is null))
            or
            ((not snapshotted_data.`SubTotal` is null) and (source_data.`SubTotal` is null))
        ) or snapshotted_data.`TaxAmt` != source_data.`TaxAmt`
        or
        (
            ((snapshotted_data.`TaxAmt` is null) and not (source_data.`TaxAmt` is null))
            or
            ((not snapshotted_data.`TaxAmt` is null) and (source_data.`TaxAmt` is null))
        ) or snapshotted_data.`Freight` != source_data.`Freight`
        or
        (
            ((snapshotted_data.`Freight` is null) and not (source_data.`Freight` is null))
            or
            ((not snapshotted_data.`Freight` is null) and (source_data.`Freight` is null))
        ) or snapshotted_data.`TotalDue` != source_data.`TotalDue`
        or
        (
            ((snapshotted_data.`TotalDue` is null) and not (source_data.`TotalDue` is null))
            or
            ((not snapshotted_data.`TotalDue` is null) and (source_data.`TotalDue` is null))
        ) or snapshotted_data.`Comment` != source_data.`Comment`
        or
        (
            ((snapshotted_data.`Comment` is null) and not (source_data.`Comment` is null))
            or
            ((not snapshotted_data.`Comment` is null) and (source_data.`Comment` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`SalesOrderID` != source_data.`SalesOrderID`
        or
        (
            ((snapshotted_data.`SalesOrderID` is null) and not (source_data.`SalesOrderID` is null))
            or
            ((not snapshotted_data.`SalesOrderID` is null) and (source_data.`SalesOrderID` is null))
        ) or snapshotted_data.`RevisionNumber` != source_data.`RevisionNumber`
        or
        (
            ((snapshotted_data.`RevisionNumber` is null) and not (source_data.`RevisionNumber` is null))
            or
            ((not snapshotted_data.`RevisionNumber` is null) and (source_data.`RevisionNumber` is null))
        ) or snapshotted_data.`OrderDate` != source_data.`OrderDate`
        or
        (
            ((snapshotted_data.`OrderDate` is null) and not (source_data.`OrderDate` is null))
            or
            ((not snapshotted_data.`OrderDate` is null) and (source_data.`OrderDate` is null))
        ) or snapshotted_data.`DueDate` != source_data.`DueDate`
        or
        (
            ((snapshotted_data.`DueDate` is null) and not (source_data.`DueDate` is null))
            or
            ((not snapshotted_data.`DueDate` is null) and (source_data.`DueDate` is null))
        ) or snapshotted_data.`ShipDate` != source_data.`ShipDate`
        or
        (
            ((snapshotted_data.`ShipDate` is null) and not (source_data.`ShipDate` is null))
            or
            ((not snapshotted_data.`ShipDate` is null) and (source_data.`ShipDate` is null))
        ) or snapshotted_data.`Status` != source_data.`Status`
        or
        (
            ((snapshotted_data.`Status` is null) and not (source_data.`Status` is null))
            or
            ((not snapshotted_data.`Status` is null) and (source_data.`Status` is null))
        ) or snapshotted_data.`OnlineOrderFlag` != source_data.`OnlineOrderFlag`
        or
        (
            ((snapshotted_data.`OnlineOrderFlag` is null) and not (source_data.`OnlineOrderFlag` is null))
            or
            ((not snapshotted_data.`OnlineOrderFlag` is null) and (source_data.`OnlineOrderFlag` is null))
        ) or snapshotted_data.`SalesOrderNumber` != source_data.`SalesOrderNumber`
        or
        (
            ((snapshotted_data.`SalesOrderNumber` is null) and not (source_data.`SalesOrderNumber` is null))
            or
            ((not snapshotted_data.`SalesOrderNumber` is null) and (source_data.`SalesOrderNumber` is null))
        ) or snapshotted_data.`PurchaseOrderNumber` != source_data.`PurchaseOrderNumber`
        or
        (
            ((snapshotted_data.`PurchaseOrderNumber` is null) and not (source_data.`PurchaseOrderNumber` is null))
            or
            ((not snapshotted_data.`PurchaseOrderNumber` is null) and (source_data.`PurchaseOrderNumber` is null))
        ) or snapshotted_data.`AccountNumber` != source_data.`AccountNumber`
        or
        (
            ((snapshotted_data.`AccountNumber` is null) and not (source_data.`AccountNumber` is null))
            or
            ((not snapshotted_data.`AccountNumber` is null) and (source_data.`AccountNumber` is null))
        ) or snapshotted_data.`CustomerID` != source_data.`CustomerID`
        or
        (
            ((snapshotted_data.`CustomerID` is null) and not (source_data.`CustomerID` is null))
            or
            ((not snapshotted_data.`CustomerID` is null) and (source_data.`CustomerID` is null))
        ) or snapshotted_data.`ShipToAddressID` != source_data.`ShipToAddressID`
        or
        (
            ((snapshotted_data.`ShipToAddressID` is null) and not (source_data.`ShipToAddressID` is null))
            or
            ((not snapshotted_data.`ShipToAddressID` is null) and (source_data.`ShipToAddressID` is null))
        ) or snapshotted_data.`BillToAddressID` != source_data.`BillToAddressID`
        or
        (
            ((snapshotted_data.`BillToAddressID` is null) and not (source_data.`BillToAddressID` is null))
            or
            ((not snapshotted_data.`BillToAddressID` is null) and (source_data.`BillToAddressID` is null))
        ) or snapshotted_data.`ShipMethod` != source_data.`ShipMethod`
        or
        (
            ((snapshotted_data.`ShipMethod` is null) and not (source_data.`ShipMethod` is null))
            or
            ((not snapshotted_data.`ShipMethod` is null) and (source_data.`ShipMethod` is null))
        ) or snapshotted_data.`CreditCardApprovalCode` != source_data.`CreditCardApprovalCode`
        or
        (
            ((snapshotted_data.`CreditCardApprovalCode` is null) and not (source_data.`CreditCardApprovalCode` is null))
            or
            ((not snapshotted_data.`CreditCardApprovalCode` is null) and (source_data.`CreditCardApprovalCode` is null))
        ) or snapshotted_data.`SubTotal` != source_data.`SubTotal`
        or
        (
            ((snapshotted_data.`SubTotal` is null) and not (source_data.`SubTotal` is null))
            or
            ((not snapshotted_data.`SubTotal` is null) and (source_data.`SubTotal` is null))
        ) or snapshotted_data.`TaxAmt` != source_data.`TaxAmt`
        or
        (
            ((snapshotted_data.`TaxAmt` is null) and not (source_data.`TaxAmt` is null))
            or
            ((not snapshotted_data.`TaxAmt` is null) and (source_data.`TaxAmt` is null))
        ) or snapshotted_data.`Freight` != source_data.`Freight`
        or
        (
            ((snapshotted_data.`Freight` is null) and not (source_data.`Freight` is null))
            or
            ((not snapshotted_data.`Freight` is null) and (source_data.`Freight` is null))
        ) or snapshotted_data.`TotalDue` != source_data.`TotalDue`
        or
        (
            ((snapshotted_data.`TotalDue` is null) and not (source_data.`TotalDue` is null))
            or
            ((not snapshotted_data.`TotalDue` is null) and (source_data.`TotalDue` is null))
        ) or snapshotted_data.`Comment` != source_data.`Comment`
        or
        (
            ((snapshotted_data.`Comment` is null) and not (source_data.`Comment` is null))
            or
            ((not snapshotted_data.`Comment` is null) and (source_data.`Comment` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

  
    
[0m23:28:46.217719 [debug] [Thread-1 (]: SQL status: OK in 0.390 seconds
[0m23:28:46.221665 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=3db4cb47-8848-4894-9a7a-6b570d7d0650) - Closing
[0m23:28:46.293128 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:28:46.293128 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

    
DESCRIBE TABLE `salesorderheader_snapshot__dbt_tmp`

  
[0m23:28:46.453060 [debug] [Thread-1 (]: SQL status: OK in 0.150 seconds
[0m23:28:46.463117 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=d3cedca1-5b64-404b-8810-14560541ce7c) - Closing
[0m23:28:46.548029 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:28:46.553218 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`salesorderheader_snapshot`

  
[0m23:28:46.884595 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:28:46.888405 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=09501535-0aae-4b2e-9d89-891740423760) - Closing
[0m23:28:46.973637 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:28:46.974592 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

    
DESCRIBE TABLE `salesorderheader_snapshot__dbt_tmp`

  
[0m23:28:47.112770 [debug] [Thread-1 (]: SQL status: OK in 0.140 seconds
[0m23:28:47.122946 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=6aaf961f-106e-4b4b-917d-b46a7c163223) - Closing
[0m23:28:47.192890 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:28:47.192890 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`salesorderheader_snapshot`

  
[0m23:28:47.515532 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:28:47.518520 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=ae7b0531-20f9-4ec8-a606-ae72931c3a6b) - Closing
[0m23:28:47.595393 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:28:47.597398 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

    
DESCRIBE TABLE `salesorderheader_snapshot__dbt_tmp`

  
[0m23:28:47.755396 [debug] [Thread-1 (]: SQL status: OK in 0.160 seconds
[0m23:28:47.757641 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=86c8bd61-f3e9-4a77-b881-3a4f0bda18ce) - Closing
[0m23:28:47.827239 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:28:47.827239 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */
select * from (
        
    
    with snapshot_query as (

        with salesorderheader_snapshot as (
    SELECT
        SalesOrderID,
        RevisionNumber,
        OrderDate,
        DueDate,
        ShipDate,
        Status,
        OnlineOrderFlag,
        SalesOrderNumber,
        PurchaseOrderNumber,
        AccountNumber,
        CustomerID,
        ShipToAddressID,
        BillToAddressID,
        ShipMethod,
        CreditCardApprovalCode,
        SubTotal,
        TaxAmt,
        Freight,
        TotalDue,
        Comment
    FROM `hive_metastore`.`saleslt`.`salesorderheader`
)

select * from salesorderheader_snapshot

    ),

    snapshotted_data as (

        select *, 
    
        SalesOrderID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`salesorderheader_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        SalesOrderID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(SalesOrderID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        SalesOrderID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        SalesOrderID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`SalesOrderID` != source_data.`SalesOrderID`
        or
        (
            ((snapshotted_data.`SalesOrderID` is null) and not (source_data.`SalesOrderID` is null))
            or
            ((not snapshotted_data.`SalesOrderID` is null) and (source_data.`SalesOrderID` is null))
        ) or snapshotted_data.`RevisionNumber` != source_data.`RevisionNumber`
        or
        (
            ((snapshotted_data.`RevisionNumber` is null) and not (source_data.`RevisionNumber` is null))
            or
            ((not snapshotted_data.`RevisionNumber` is null) and (source_data.`RevisionNumber` is null))
        ) or snapshotted_data.`OrderDate` != source_data.`OrderDate`
        or
        (
            ((snapshotted_data.`OrderDate` is null) and not (source_data.`OrderDate` is null))
            or
            ((not snapshotted_data.`OrderDate` is null) and (source_data.`OrderDate` is null))
        ) or snapshotted_data.`DueDate` != source_data.`DueDate`
        or
        (
            ((snapshotted_data.`DueDate` is null) and not (source_data.`DueDate` is null))
            or
            ((not snapshotted_data.`DueDate` is null) and (source_data.`DueDate` is null))
        ) or snapshotted_data.`ShipDate` != source_data.`ShipDate`
        or
        (
            ((snapshotted_data.`ShipDate` is null) and not (source_data.`ShipDate` is null))
            or
            ((not snapshotted_data.`ShipDate` is null) and (source_data.`ShipDate` is null))
        ) or snapshotted_data.`Status` != source_data.`Status`
        or
        (
            ((snapshotted_data.`Status` is null) and not (source_data.`Status` is null))
            or
            ((not snapshotted_data.`Status` is null) and (source_data.`Status` is null))
        ) or snapshotted_data.`OnlineOrderFlag` != source_data.`OnlineOrderFlag`
        or
        (
            ((snapshotted_data.`OnlineOrderFlag` is null) and not (source_data.`OnlineOrderFlag` is null))
            or
            ((not snapshotted_data.`OnlineOrderFlag` is null) and (source_data.`OnlineOrderFlag` is null))
        ) or snapshotted_data.`SalesOrderNumber` != source_data.`SalesOrderNumber`
        or
        (
            ((snapshotted_data.`SalesOrderNumber` is null) and not (source_data.`SalesOrderNumber` is null))
            or
            ((not snapshotted_data.`SalesOrderNumber` is null) and (source_data.`SalesOrderNumber` is null))
        ) or snapshotted_data.`PurchaseOrderNumber` != source_data.`PurchaseOrderNumber`
        or
        (
            ((snapshotted_data.`PurchaseOrderNumber` is null) and not (source_data.`PurchaseOrderNumber` is null))
            or
            ((not snapshotted_data.`PurchaseOrderNumber` is null) and (source_data.`PurchaseOrderNumber` is null))
        ) or snapshotted_data.`AccountNumber` != source_data.`AccountNumber`
        or
        (
            ((snapshotted_data.`AccountNumber` is null) and not (source_data.`AccountNumber` is null))
            or
            ((not snapshotted_data.`AccountNumber` is null) and (source_data.`AccountNumber` is null))
        ) or snapshotted_data.`CustomerID` != source_data.`CustomerID`
        or
        (
            ((snapshotted_data.`CustomerID` is null) and not (source_data.`CustomerID` is null))
            or
            ((not snapshotted_data.`CustomerID` is null) and (source_data.`CustomerID` is null))
        ) or snapshotted_data.`ShipToAddressID` != source_data.`ShipToAddressID`
        or
        (
            ((snapshotted_data.`ShipToAddressID` is null) and not (source_data.`ShipToAddressID` is null))
            or
            ((not snapshotted_data.`ShipToAddressID` is null) and (source_data.`ShipToAddressID` is null))
        ) or snapshotted_data.`BillToAddressID` != source_data.`BillToAddressID`
        or
        (
            ((snapshotted_data.`BillToAddressID` is null) and not (source_data.`BillToAddressID` is null))
            or
            ((not snapshotted_data.`BillToAddressID` is null) and (source_data.`BillToAddressID` is null))
        ) or snapshotted_data.`ShipMethod` != source_data.`ShipMethod`
        or
        (
            ((snapshotted_data.`ShipMethod` is null) and not (source_data.`ShipMethod` is null))
            or
            ((not snapshotted_data.`ShipMethod` is null) and (source_data.`ShipMethod` is null))
        ) or snapshotted_data.`CreditCardApprovalCode` != source_data.`CreditCardApprovalCode`
        or
        (
            ((snapshotted_data.`CreditCardApprovalCode` is null) and not (source_data.`CreditCardApprovalCode` is null))
            or
            ((not snapshotted_data.`CreditCardApprovalCode` is null) and (source_data.`CreditCardApprovalCode` is null))
        ) or snapshotted_data.`SubTotal` != source_data.`SubTotal`
        or
        (
            ((snapshotted_data.`SubTotal` is null) and not (source_data.`SubTotal` is null))
            or
            ((not snapshotted_data.`SubTotal` is null) and (source_data.`SubTotal` is null))
        ) or snapshotted_data.`TaxAmt` != source_data.`TaxAmt`
        or
        (
            ((snapshotted_data.`TaxAmt` is null) and not (source_data.`TaxAmt` is null))
            or
            ((not snapshotted_data.`TaxAmt` is null) and (source_data.`TaxAmt` is null))
        ) or snapshotted_data.`Freight` != source_data.`Freight`
        or
        (
            ((snapshotted_data.`Freight` is null) and not (source_data.`Freight` is null))
            or
            ((not snapshotted_data.`Freight` is null) and (source_data.`Freight` is null))
        ) or snapshotted_data.`TotalDue` != source_data.`TotalDue`
        or
        (
            ((snapshotted_data.`TotalDue` is null) and not (source_data.`TotalDue` is null))
            or
            ((not snapshotted_data.`TotalDue` is null) and (source_data.`TotalDue` is null))
        ) or snapshotted_data.`Comment` != source_data.`Comment`
        or
        (
            ((snapshotted_data.`Comment` is null) and not (source_data.`Comment` is null))
            or
            ((not snapshotted_data.`Comment` is null) and (source_data.`Comment` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`SalesOrderID` != source_data.`SalesOrderID`
        or
        (
            ((snapshotted_data.`SalesOrderID` is null) and not (source_data.`SalesOrderID` is null))
            or
            ((not snapshotted_data.`SalesOrderID` is null) and (source_data.`SalesOrderID` is null))
        ) or snapshotted_data.`RevisionNumber` != source_data.`RevisionNumber`
        or
        (
            ((snapshotted_data.`RevisionNumber` is null) and not (source_data.`RevisionNumber` is null))
            or
            ((not snapshotted_data.`RevisionNumber` is null) and (source_data.`RevisionNumber` is null))
        ) or snapshotted_data.`OrderDate` != source_data.`OrderDate`
        or
        (
            ((snapshotted_data.`OrderDate` is null) and not (source_data.`OrderDate` is null))
            or
            ((not snapshotted_data.`OrderDate` is null) and (source_data.`OrderDate` is null))
        ) or snapshotted_data.`DueDate` != source_data.`DueDate`
        or
        (
            ((snapshotted_data.`DueDate` is null) and not (source_data.`DueDate` is null))
            or
            ((not snapshotted_data.`DueDate` is null) and (source_data.`DueDate` is null))
        ) or snapshotted_data.`ShipDate` != source_data.`ShipDate`
        or
        (
            ((snapshotted_data.`ShipDate` is null) and not (source_data.`ShipDate` is null))
            or
            ((not snapshotted_data.`ShipDate` is null) and (source_data.`ShipDate` is null))
        ) or snapshotted_data.`Status` != source_data.`Status`
        or
        (
            ((snapshotted_data.`Status` is null) and not (source_data.`Status` is null))
            or
            ((not snapshotted_data.`Status` is null) and (source_data.`Status` is null))
        ) or snapshotted_data.`OnlineOrderFlag` != source_data.`OnlineOrderFlag`
        or
        (
            ((snapshotted_data.`OnlineOrderFlag` is null) and not (source_data.`OnlineOrderFlag` is null))
            or
            ((not snapshotted_data.`OnlineOrderFlag` is null) and (source_data.`OnlineOrderFlag` is null))
        ) or snapshotted_data.`SalesOrderNumber` != source_data.`SalesOrderNumber`
        or
        (
            ((snapshotted_data.`SalesOrderNumber` is null) and not (source_data.`SalesOrderNumber` is null))
            or
            ((not snapshotted_data.`SalesOrderNumber` is null) and (source_data.`SalesOrderNumber` is null))
        ) or snapshotted_data.`PurchaseOrderNumber` != source_data.`PurchaseOrderNumber`
        or
        (
            ((snapshotted_data.`PurchaseOrderNumber` is null) and not (source_data.`PurchaseOrderNumber` is null))
            or
            ((not snapshotted_data.`PurchaseOrderNumber` is null) and (source_data.`PurchaseOrderNumber` is null))
        ) or snapshotted_data.`AccountNumber` != source_data.`AccountNumber`
        or
        (
            ((snapshotted_data.`AccountNumber` is null) and not (source_data.`AccountNumber` is null))
            or
            ((not snapshotted_data.`AccountNumber` is null) and (source_data.`AccountNumber` is null))
        ) or snapshotted_data.`CustomerID` != source_data.`CustomerID`
        or
        (
            ((snapshotted_data.`CustomerID` is null) and not (source_data.`CustomerID` is null))
            or
            ((not snapshotted_data.`CustomerID` is null) and (source_data.`CustomerID` is null))
        ) or snapshotted_data.`ShipToAddressID` != source_data.`ShipToAddressID`
        or
        (
            ((snapshotted_data.`ShipToAddressID` is null) and not (source_data.`ShipToAddressID` is null))
            or
            ((not snapshotted_data.`ShipToAddressID` is null) and (source_data.`ShipToAddressID` is null))
        ) or snapshotted_data.`BillToAddressID` != source_data.`BillToAddressID`
        or
        (
            ((snapshotted_data.`BillToAddressID` is null) and not (source_data.`BillToAddressID` is null))
            or
            ((not snapshotted_data.`BillToAddressID` is null) and (source_data.`BillToAddressID` is null))
        ) or snapshotted_data.`ShipMethod` != source_data.`ShipMethod`
        or
        (
            ((snapshotted_data.`ShipMethod` is null) and not (source_data.`ShipMethod` is null))
            or
            ((not snapshotted_data.`ShipMethod` is null) and (source_data.`ShipMethod` is null))
        ) or snapshotted_data.`CreditCardApprovalCode` != source_data.`CreditCardApprovalCode`
        or
        (
            ((snapshotted_data.`CreditCardApprovalCode` is null) and not (source_data.`CreditCardApprovalCode` is null))
            or
            ((not snapshotted_data.`CreditCardApprovalCode` is null) and (source_data.`CreditCardApprovalCode` is null))
        ) or snapshotted_data.`SubTotal` != source_data.`SubTotal`
        or
        (
            ((snapshotted_data.`SubTotal` is null) and not (source_data.`SubTotal` is null))
            or
            ((not snapshotted_data.`SubTotal` is null) and (source_data.`SubTotal` is null))
        ) or snapshotted_data.`TaxAmt` != source_data.`TaxAmt`
        or
        (
            ((snapshotted_data.`TaxAmt` is null) and not (source_data.`TaxAmt` is null))
            or
            ((not snapshotted_data.`TaxAmt` is null) and (source_data.`TaxAmt` is null))
        ) or snapshotted_data.`Freight` != source_data.`Freight`
        or
        (
            ((snapshotted_data.`Freight` is null) and not (source_data.`Freight` is null))
            or
            ((not snapshotted_data.`Freight` is null) and (source_data.`Freight` is null))
        ) or snapshotted_data.`TotalDue` != source_data.`TotalDue`
        or
        (
            ((snapshotted_data.`TotalDue` is null) and not (source_data.`TotalDue` is null))
            or
            ((not snapshotted_data.`TotalDue` is null) and (source_data.`TotalDue` is null))
        ) or snapshotted_data.`Comment` != source_data.`Comment`
        or
        (
            ((snapshotted_data.`Comment` is null) and not (source_data.`Comment` is null))
            or
            ((not snapshotted_data.`Comment` is null) and (source_data.`Comment` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

    ) as __dbt_sbq
    where false
    limit 0

[0m23:28:48.207882 [debug] [Thread-1 (]: SQL status: OK in 0.380 seconds
[0m23:28:48.208876 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=7b08a1cd-7b0a-4c3c-a450-c6389178d279) - Closing
[0m23:28:48.281506 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:28:48.283024 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:28:48.403249 [debug] [Thread-1 (]: SQL status: OK in 0.120 seconds
[0m23:28:48.403249 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=f5c8cd82-27c0-431a-9133-7dfbf7f54a91) - Closing
[0m23:28:48.473048 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:28:48.473048 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:28:48.473048 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

      merge into `hive_metastore`.`snapshots`.`salesorderheader_snapshot` as DBT_INTERNAL_DEST
    
      using `salesorderheader_snapshot__dbt_tmp` as DBT_INTERNAL_SOURCE
    
    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id
    when matched
     
       and DBT_INTERNAL_DEST.dbt_valid_to is null
     
     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')
        then update
        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to

    when not matched
     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'
        then insert *
    ;

  
[0m23:28:53.510095 [debug] [Thread-1 (]: SQL status: OK in 5.040 seconds
[0m23:28:53.511357 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=d7a0cc05-cc08-4cf8-b053-a5426d937933) - Closing
[0m23:28:53.586119 [debug] [Thread-1 (]: Applying DROP to: `salesorderheader_snapshot__dbt_tmp`
[0m23:28:53.587631 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:28:53.588791 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */
DROP VIEW IF EXISTS `salesorderheader_snapshot__dbt_tmp`
[0m23:28:53.729385 [debug] [Thread-1 (]: SQL status: OK in 0.140 seconds
[0m23:28:53.731377 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72, command-id=1e2f898c-56fb-45da-93ef-ac86dcc6b311) - Closing
[0m23:28:53.803870 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a86262ce-5f97-4b36-a404-b09ef9bea98b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000021AABCC15A0>]}
[0m23:28:53.805380 [info ] [Thread-1 (]: 7 of 7 OK snapshotted snapshots.salesorderheader_snapshot ...................... [[32mOK[0m in 9.74s]
[0m23:28:53.806393 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.salesorderheader_snapshot
[0m23:28:53.808464 [debug] [MainThread]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=master, idle-time=76.12072372436523s, language=None, compute-name=) - Recreating due to idleness
[0m23:28:53.810184 [debug] [MainThread]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=master, idle-time=0s, language=None, compute-name=) - Reset connection handle
[0m23:28:53.810184 [debug] [MainThread]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=master, idle-time=0s, language=None, compute-name=) - Reusing connection previously named master
[0m23:28:53.813039 [debug] [MainThread]: Connection 'master' was properly closed.
[0m23:28:53.813039 [debug] [MainThread]: Connection 'list_hive_metastore' was properly closed.
[0m23:28:53.813039 [debug] [MainThread]: On list_hive_metastore: Close
[0m23:28:53.813039 [debug] [MainThread]: Databricks adapter: Connection(session-id=0130cbfc-c029-4905-88d7-943a1af51c26) - Closing
[0m23:28:53.892771 [debug] [MainThread]: Connection 'list_hive_metastore_saleslt' was properly closed.
[0m23:28:53.893932 [debug] [MainThread]: On list_hive_metastore_saleslt: Close
[0m23:28:53.894936 [debug] [MainThread]: Databricks adapter: Connection(session-id=27894347-8d9b-486d-9d5c-d16bf8e3e30d) - Closing
[0m23:28:53.976143 [debug] [MainThread]: Connection 'snapshot.medalion_dbt_spark.salesorderheader_snapshot' was properly closed.
[0m23:28:53.976143 [debug] [MainThread]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: Close
[0m23:28:53.977193 [debug] [MainThread]: Databricks adapter: Connection(session-id=58501ad6-dcb8-476d-9765-b9ce0b9b4d72) - Closing
[0m23:28:54.046487 [info ] [MainThread]: 
[0m23:28:54.048479 [info ] [MainThread]: Finished running 7 snapshots in 0 hours 1 minutes and 20.41 seconds (80.41s).
[0m23:28:54.050482 [debug] [MainThread]: Command end result
[0m23:28:54.096173 [debug] [MainThread]: Wrote artifact WritableManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\manifest.json
[0m23:28:54.101091 [debug] [MainThread]: Wrote artifact SemanticManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\semantic_manifest.json
[0m23:28:54.111208 [debug] [MainThread]: Wrote artifact RunExecutionResult to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\run_results.json
[0m23:28:54.112201 [info ] [MainThread]: 
[0m23:28:54.113648 [info ] [MainThread]: [32mCompleted successfully[0m
[0m23:28:54.114656 [info ] [MainThread]: 
[0m23:28:54.115967 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m23:28:54.118035 [debug] [MainThread]: Command `dbt snapshot` succeeded at 23:28:54.118035 after 83.92 seconds
[0m23:28:54.118969 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000021A8E5E2590>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000021A9005E2F0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000021A8DFF7340>]}
[0m23:28:54.119965 [debug] [MainThread]: Flushing usage events
[0m23:28:55.652978 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m23:32:50.209097 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000244326AA620>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002443186AC50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002443186AA70>]}


============================== 23:32:50.215120 | 57b98072-50cc-4f82-afa8-6464540e8126 ==============================
[0m23:32:50.215120 [info ] [MainThread]: Running with dbt=1.10.1
[0m23:32:50.215120 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Users\\M S I\\.dbt', 'version_check': 'True', 'warn_error': 'None', 'log_path': 'D:\\Academic-Project\\Portofolio Data Engineer\\medalion_dbt_spark\\logs', 'debug': 'False', 'fail_fast': 'False', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'log_format': 'default', 'static_parser': 'True', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'target_path': 'None', 'invocation_command': 'dbt snapshot', 'send_anonymous_usage_stats': 'True'}
[0m23:32:51.157089 [debug] [MainThread]: Spark adapter: Setting pyhive.hive logging to ERROR
[0m23:32:51.160674 [debug] [MainThread]: Spark adapter: Setting thrift.transport logging to ERROR
[0m23:32:51.160674 [debug] [MainThread]: Spark adapter: Setting thrift.protocol logging to ERROR
[0m23:32:52.916435 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '57b98072-50cc-4f82-afa8-6464540e8126', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002444E410F40>]}
[0m23:32:52.969883 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '57b98072-50cc-4f82-afa8-6464540e8126', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000024431869BA0>]}
[0m23:32:52.973119 [info ] [MainThread]: Registered adapter: databricks=1.10.3
[0m23:32:53.343190 [debug] [MainThread]: checksum: 2c026f85d539c10c69b093157526ce33d0bf5533489eafb07fe5172434ec7740, vars: {}, profile: , target: , version: 1.10.1
[0m23:32:53.682835 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m23:32:53.684889 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m23:32:53.753072 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '57b98072-50cc-4f82-afa8-6464540e8126', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002444FA4DF30>]}
[0m23:32:53.908134 [debug] [MainThread]: Wrote artifact WritableManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\manifest.json
[0m23:32:53.915390 [debug] [MainThread]: Wrote artifact SemanticManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\semantic_manifest.json
[0m23:32:53.958619 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '57b98072-50cc-4f82-afa8-6464540e8126', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002444FA48CA0>]}
[0m23:32:53.958619 [info ] [MainThread]: Found 2 models, 7 snapshots, 4 data tests, 9 sources, 671 macros
[0m23:32:53.958619 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '57b98072-50cc-4f82-afa8-6464540e8126', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002444FA609D0>]}
[0m23:32:53.962014 [info ] [MainThread]: 
[0m23:32:53.963555 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m23:32:53.963555 [info ] [MainThread]: 
[0m23:32:53.963555 [debug] [MainThread]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=master, idle-time=0s, language=None, compute-name=) - Creating connection
[0m23:32:53.963555 [debug] [MainThread]: Acquiring new databricks connection 'master'
[0m23:32:53.973197 [debug] [ThreadPool]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=list_hive_metastore, idle-time=0s, language=None, compute-name=) - Creating connection
[0m23:32:53.973197 [debug] [ThreadPool]: Acquiring new databricks connection 'list_hive_metastore'
[0m23:32:53.973197 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore"
[0m23:32:53.973197 [debug] [ThreadPool]: On list_hive_metastore: GetSchemas(database=hive_metastore, schema=None)
[0m23:32:53.973197 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m23:32:54.557930 [debug] [ThreadPool]: Databricks adapter: Connection(session-id=94d7c042-13f6-475e-b1a3-6eae6d907c17) - Created
[0m23:32:55.315238 [debug] [ThreadPool]: SQL status: OK in 1.340 seconds
[0m23:32:55.317239 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=94d7c042-13f6-475e-b1a3-6eae6d907c17, command-id=3b3c2cb8-4978-45d0-8728-7d3a5a2fbe4f) - Closing
[0m23:32:55.463284 [debug] [ThreadPool]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=list_hive_metastore_snapshots, idle-time=0s, language=None, compute-name=) - Creating connection
[0m23:32:55.463284 [debug] [ThreadPool]: Acquiring new databricks connection 'list_hive_metastore_snapshots'
[0m23:32:55.463284 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_snapshots"
[0m23:32:55.463284 [debug] [ThreadPool]: On list_hive_metastore_snapshots: GetTables(database=hive_metastore, schema=snapshots)
[0m23:32:55.463284 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m23:32:55.687669 [debug] [ThreadPool]: Databricks adapter: Connection(session-id=3a990ef4-8733-4e59-ae25-6b9166bbd71d) - Created
[0m23:32:55.983458 [debug] [ThreadPool]: SQL status: OK in 0.520 seconds
[0m23:32:55.983458 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=3a990ef4-8733-4e59-ae25-6b9166bbd71d, command-id=62163898-5b95-44bd-bc71-166b1f654232) - Closing
[0m23:32:56.148946 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_snapshots"
[0m23:32:56.149720 [debug] [ThreadPool]: On list_hive_metastore_snapshots: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "list_hive_metastore_snapshots"} */

    
SELECT current_catalog()

  
[0m23:32:56.393015 [debug] [ThreadPool]: SQL status: OK in 0.240 seconds
[0m23:32:56.413086 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=3a990ef4-8733-4e59-ae25-6b9166bbd71d, command-id=942769c6-7b8b-4457-a958-7768f107c00e) - Closing
[0m23:32:56.508843 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_snapshots"
[0m23:32:56.508843 [debug] [ThreadPool]: On list_hive_metastore_snapshots: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "list_hive_metastore_snapshots"} */

    
SHOW VIEWS IN `hive_metastore`.`snapshots`

  
[0m23:32:56.803351 [debug] [ThreadPool]: SQL status: OK in 0.290 seconds
[0m23:32:56.813176 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=3a990ef4-8733-4e59-ae25-6b9166bbd71d, command-id=97921ed9-37ed-4b31-8f8e-4791a90a82f3) - Closing
[0m23:32:56.917315 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_hive_metastore_snapshots, now list_hive_metastore_saleslt)
[0m23:32:56.924807 [debug] [ThreadPool]: Databricks adapter: DatabricksDBTConnection(session-id=3a990ef4-8733-4e59-ae25-6b9166bbd71d, name=list_hive_metastore_saleslt, idle-time=0.009576559066772461s, language=None, compute-name=) - Reusing connection previously named list_hive_metastore_snapshots
[0m23:32:56.928009 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_saleslt"
[0m23:32:56.931008 [debug] [ThreadPool]: On list_hive_metastore_saleslt: GetTables(database=hive_metastore, schema=saleslt)
[0m23:32:57.136152 [debug] [ThreadPool]: SQL status: OK in 0.200 seconds
[0m23:32:57.143230 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=3a990ef4-8733-4e59-ae25-6b9166bbd71d, command-id=4e77dd96-2fbe-488b-9ec9-26cb458d46d5) - Closing
[0m23:32:57.213207 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_saleslt"
[0m23:32:57.213207 [debug] [ThreadPool]: On list_hive_metastore_saleslt: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "list_hive_metastore_saleslt"} */

    
SELECT current_catalog()

  
[0m23:32:57.367603 [debug] [ThreadPool]: SQL status: OK in 0.150 seconds
[0m23:32:57.373392 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=3a990ef4-8733-4e59-ae25-6b9166bbd71d, command-id=4beeceea-ecf6-4432-a48d-8fb9356f8d3f) - Closing
[0m23:32:57.455036 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_saleslt"
[0m23:32:57.458741 [debug] [ThreadPool]: On list_hive_metastore_saleslt: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "list_hive_metastore_saleslt"} */

    
SHOW VIEWS IN `hive_metastore`.`saleslt`

  
[0m23:32:57.747260 [debug] [ThreadPool]: SQL status: OK in 0.290 seconds
[0m23:32:57.757219 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=3a990ef4-8733-4e59-ae25-6b9166bbd71d, command-id=9f84d29a-bc10-4b8a-91b8-d719c58acf2a) - Closing
[0m23:32:57.892990 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '57b98072-50cc-4f82-afa8-6464540e8126', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000024436B85C60>]}
[0m23:32:57.914788 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.address_snapshot
[0m23:32:57.916797 [info ] [Thread-1 (]: 1 of 7 START snapshot snapshots.address_snapshot ............................... [RUN]
[0m23:32:57.916797 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=snapshot.medalion_dbt_spark.address_snapshot, idle-time=0s, language=None, compute-name=) - Creating connection
[0m23:32:57.916797 [debug] [Thread-1 (]: Acquiring new databricks connection 'snapshot.medalion_dbt_spark.address_snapshot'
[0m23:32:57.919319 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.address_snapshot
[0m23:32:57.926118 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.address_snapshot
[0m23:32:57.963277 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:32:57.964288 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

      describe extended `hive_metastore`.`snapshots`.`address_snapshot`
  
[0m23:32:57.964288 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m23:32:58.218182 [debug] [Thread-1 (]: Databricks adapter: Connection(session-id=932d71c7-61c7-444d-8907-1440155699de) - Created
[0m23:32:58.900851 [debug] [Thread-1 (]: SQL status: OK in 0.940 seconds
[0m23:32:58.903359 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=ee1c036b-e567-4618-9e65-2d3956d31706) - Closing
[0m23:32:59.033333 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:32:59.033851 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */
select * from (
        



with source_data as (
    select
        AddressID,
        AddressLine1,
        AddressLine2,
        City,
        StateProvince,
        CountryRegion,
        PostalCode
    from `hive_metastore`.`saleslt`.`address`
)
select *
from source_data

    ) as __dbt_sbq
    where false
    limit 0

    
[0m23:32:59.337432 [debug] [Thread-1 (]: SQL status: OK in 0.300 seconds
[0m23:32:59.357010 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=f51a69d8-d98d-4200-8f2b-d4f380127faa) - Closing
[0m23:32:59.476880 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:32:59.477512 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`address_snapshot`

  
[0m23:32:59.846716 [debug] [Thread-1 (]: SQL status: OK in 0.370 seconds
[0m23:32:59.846716 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=87c0d219-5ac4-4718-915c-a5c58cea3d4a) - Closing
[0m23:32:59.923134 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:32:59.923134 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`address_snapshot`

  
[0m23:33:00.247511 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:33:00.253155 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=c4357ede-61b6-43b1-9d53-ed7083b68429) - Closing
[0m23:33:00.377000 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:33:00.377000 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

        
  
    create or replace temporary view `address_snapshot__dbt_tmp` as
      
    
    with snapshot_query as (

        with source_data as (
    select
        AddressID,
        AddressLine1,
        AddressLine2,
        City,
        StateProvince,
        CountryRegion,
        PostalCode
    from `hive_metastore`.`saleslt`.`address`
)
select *
from source_data

    ),

    snapshotted_data as (

        select *, 
    
        AddressID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`address_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        AddressID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(AddressID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        AddressID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        AddressID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`AddressID` != source_data.`AddressID`
        or
        (
            ((snapshotted_data.`AddressID` is null) and not (source_data.`AddressID` is null))
            or
            ((not snapshotted_data.`AddressID` is null) and (source_data.`AddressID` is null))
        ) or snapshotted_data.`AddressLine1` != source_data.`AddressLine1`
        or
        (
            ((snapshotted_data.`AddressLine1` is null) and not (source_data.`AddressLine1` is null))
            or
            ((not snapshotted_data.`AddressLine1` is null) and (source_data.`AddressLine1` is null))
        ) or snapshotted_data.`AddressLine2` != source_data.`AddressLine2`
        or
        (
            ((snapshotted_data.`AddressLine2` is null) and not (source_data.`AddressLine2` is null))
            or
            ((not snapshotted_data.`AddressLine2` is null) and (source_data.`AddressLine2` is null))
        ) or snapshotted_data.`City` != source_data.`City`
        or
        (
            ((snapshotted_data.`City` is null) and not (source_data.`City` is null))
            or
            ((not snapshotted_data.`City` is null) and (source_data.`City` is null))
        ) or snapshotted_data.`StateProvince` != source_data.`StateProvince`
        or
        (
            ((snapshotted_data.`StateProvince` is null) and not (source_data.`StateProvince` is null))
            or
            ((not snapshotted_data.`StateProvince` is null) and (source_data.`StateProvince` is null))
        ) or snapshotted_data.`CountryRegion` != source_data.`CountryRegion`
        or
        (
            ((snapshotted_data.`CountryRegion` is null) and not (source_data.`CountryRegion` is null))
            or
            ((not snapshotted_data.`CountryRegion` is null) and (source_data.`CountryRegion` is null))
        ) or snapshotted_data.`PostalCode` != source_data.`PostalCode`
        or
        (
            ((snapshotted_data.`PostalCode` is null) and not (source_data.`PostalCode` is null))
            or
            ((not snapshotted_data.`PostalCode` is null) and (source_data.`PostalCode` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`AddressID` != source_data.`AddressID`
        or
        (
            ((snapshotted_data.`AddressID` is null) and not (source_data.`AddressID` is null))
            or
            ((not snapshotted_data.`AddressID` is null) and (source_data.`AddressID` is null))
        ) or snapshotted_data.`AddressLine1` != source_data.`AddressLine1`
        or
        (
            ((snapshotted_data.`AddressLine1` is null) and not (source_data.`AddressLine1` is null))
            or
            ((not snapshotted_data.`AddressLine1` is null) and (source_data.`AddressLine1` is null))
        ) or snapshotted_data.`AddressLine2` != source_data.`AddressLine2`
        or
        (
            ((snapshotted_data.`AddressLine2` is null) and not (source_data.`AddressLine2` is null))
            or
            ((not snapshotted_data.`AddressLine2` is null) and (source_data.`AddressLine2` is null))
        ) or snapshotted_data.`City` != source_data.`City`
        or
        (
            ((snapshotted_data.`City` is null) and not (source_data.`City` is null))
            or
            ((not snapshotted_data.`City` is null) and (source_data.`City` is null))
        ) or snapshotted_data.`StateProvince` != source_data.`StateProvince`
        or
        (
            ((snapshotted_data.`StateProvince` is null) and not (source_data.`StateProvince` is null))
            or
            ((not snapshotted_data.`StateProvince` is null) and (source_data.`StateProvince` is null))
        ) or snapshotted_data.`CountryRegion` != source_data.`CountryRegion`
        or
        (
            ((snapshotted_data.`CountryRegion` is null) and not (source_data.`CountryRegion` is null))
            or
            ((not snapshotted_data.`CountryRegion` is null) and (source_data.`CountryRegion` is null))
        ) or snapshotted_data.`PostalCode` != source_data.`PostalCode`
        or
        (
            ((snapshotted_data.`PostalCode` is null) and not (source_data.`PostalCode` is null))
            or
            ((not snapshotted_data.`PostalCode` is null) and (source_data.`PostalCode` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

  
    
[0m23:33:00.783212 [debug] [Thread-1 (]: SQL status: OK in 0.410 seconds
[0m23:33:00.783212 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=e0c8f544-762c-41ea-910e-1929cbfa7886) - Closing
[0m23:33:00.898249 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:33:00.903342 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

    
DESCRIBE TABLE `address_snapshot__dbt_tmp`

  
[0m23:33:01.131248 [debug] [Thread-1 (]: SQL status: OK in 0.220 seconds
[0m23:33:01.139066 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=f510faed-f7f4-4435-b2d4-fe6c70845722) - Closing
[0m23:33:01.215812 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:33:01.217817 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`address_snapshot`

  
[0m23:33:01.623274 [debug] [Thread-1 (]: SQL status: OK in 0.410 seconds
[0m23:33:01.623274 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=2185868a-abe3-477d-a4cd-ce70794e5faf) - Closing
[0m23:33:01.733212 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:33:01.736360 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

    
DESCRIBE TABLE `address_snapshot__dbt_tmp`

  
[0m23:33:01.900376 [debug] [Thread-1 (]: SQL status: OK in 0.160 seconds
[0m23:33:01.907506 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=e009717d-26a3-4c98-92e4-e78cb683e611) - Closing
[0m23:33:01.987644 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:33:01.992073 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`address_snapshot`

  
[0m23:33:02.333265 [debug] [Thread-1 (]: SQL status: OK in 0.340 seconds
[0m23:33:02.337022 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=20416a31-95cc-4bf1-a623-f845835e018a) - Closing
[0m23:33:02.449335 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:33:02.451267 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

    
DESCRIBE TABLE `address_snapshot__dbt_tmp`

  
[0m23:33:02.601958 [debug] [Thread-1 (]: SQL status: OK in 0.150 seconds
[0m23:33:02.609016 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=7a680b4a-8102-4acc-8a55-2c8dbb0599c2) - Closing
[0m23:33:02.705053 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:33:02.705053 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */
select * from (
        
    
    with snapshot_query as (

        with source_data as (
    select
        AddressID,
        AddressLine1,
        AddressLine2,
        City,
        StateProvince,
        CountryRegion,
        PostalCode
    from `hive_metastore`.`saleslt`.`address`
)
select *
from source_data

    ),

    snapshotted_data as (

        select *, 
    
        AddressID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`address_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        AddressID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(AddressID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        AddressID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        AddressID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`AddressID` != source_data.`AddressID`
        or
        (
            ((snapshotted_data.`AddressID` is null) and not (source_data.`AddressID` is null))
            or
            ((not snapshotted_data.`AddressID` is null) and (source_data.`AddressID` is null))
        ) or snapshotted_data.`AddressLine1` != source_data.`AddressLine1`
        or
        (
            ((snapshotted_data.`AddressLine1` is null) and not (source_data.`AddressLine1` is null))
            or
            ((not snapshotted_data.`AddressLine1` is null) and (source_data.`AddressLine1` is null))
        ) or snapshotted_data.`AddressLine2` != source_data.`AddressLine2`
        or
        (
            ((snapshotted_data.`AddressLine2` is null) and not (source_data.`AddressLine2` is null))
            or
            ((not snapshotted_data.`AddressLine2` is null) and (source_data.`AddressLine2` is null))
        ) or snapshotted_data.`City` != source_data.`City`
        or
        (
            ((snapshotted_data.`City` is null) and not (source_data.`City` is null))
            or
            ((not snapshotted_data.`City` is null) and (source_data.`City` is null))
        ) or snapshotted_data.`StateProvince` != source_data.`StateProvince`
        or
        (
            ((snapshotted_data.`StateProvince` is null) and not (source_data.`StateProvince` is null))
            or
            ((not snapshotted_data.`StateProvince` is null) and (source_data.`StateProvince` is null))
        ) or snapshotted_data.`CountryRegion` != source_data.`CountryRegion`
        or
        (
            ((snapshotted_data.`CountryRegion` is null) and not (source_data.`CountryRegion` is null))
            or
            ((not snapshotted_data.`CountryRegion` is null) and (source_data.`CountryRegion` is null))
        ) or snapshotted_data.`PostalCode` != source_data.`PostalCode`
        or
        (
            ((snapshotted_data.`PostalCode` is null) and not (source_data.`PostalCode` is null))
            or
            ((not snapshotted_data.`PostalCode` is null) and (source_data.`PostalCode` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`AddressID` != source_data.`AddressID`
        or
        (
            ((snapshotted_data.`AddressID` is null) and not (source_data.`AddressID` is null))
            or
            ((not snapshotted_data.`AddressID` is null) and (source_data.`AddressID` is null))
        ) or snapshotted_data.`AddressLine1` != source_data.`AddressLine1`
        or
        (
            ((snapshotted_data.`AddressLine1` is null) and not (source_data.`AddressLine1` is null))
            or
            ((not snapshotted_data.`AddressLine1` is null) and (source_data.`AddressLine1` is null))
        ) or snapshotted_data.`AddressLine2` != source_data.`AddressLine2`
        or
        (
            ((snapshotted_data.`AddressLine2` is null) and not (source_data.`AddressLine2` is null))
            or
            ((not snapshotted_data.`AddressLine2` is null) and (source_data.`AddressLine2` is null))
        ) or snapshotted_data.`City` != source_data.`City`
        or
        (
            ((snapshotted_data.`City` is null) and not (source_data.`City` is null))
            or
            ((not snapshotted_data.`City` is null) and (source_data.`City` is null))
        ) or snapshotted_data.`StateProvince` != source_data.`StateProvince`
        or
        (
            ((snapshotted_data.`StateProvince` is null) and not (source_data.`StateProvince` is null))
            or
            ((not snapshotted_data.`StateProvince` is null) and (source_data.`StateProvince` is null))
        ) or snapshotted_data.`CountryRegion` != source_data.`CountryRegion`
        or
        (
            ((snapshotted_data.`CountryRegion` is null) and not (source_data.`CountryRegion` is null))
            or
            ((not snapshotted_data.`CountryRegion` is null) and (source_data.`CountryRegion` is null))
        ) or snapshotted_data.`PostalCode` != source_data.`PostalCode`
        or
        (
            ((snapshotted_data.`PostalCode` is null) and not (source_data.`PostalCode` is null))
            or
            ((not snapshotted_data.`PostalCode` is null) and (source_data.`PostalCode` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

    ) as __dbt_sbq
    where false
    limit 0

[0m23:33:03.037188 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:33:03.043358 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=a8ed4ee9-7831-4773-874c-698159031a35) - Closing
[0m23:33:03.123259 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:33:03.123259 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:33:03.250829 [debug] [Thread-1 (]: SQL status: OK in 0.130 seconds
[0m23:33:03.250829 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=e708f3cb-d3b3-4540-a18a-181dcf0708f1) - Closing
[0m23:33:03.323204 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:33:03.323204 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:33:03.323204 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

      merge into `hive_metastore`.`snapshots`.`address_snapshot` as DBT_INTERNAL_DEST
    
      using `address_snapshot__dbt_tmp` as DBT_INTERNAL_SOURCE
    
    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id
    when matched
     
       and DBT_INTERNAL_DEST.dbt_valid_to is null
     
     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')
        then update
        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to

    when not matched
     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'
        then insert *
    ;

  
[0m23:33:07.863455 [debug] [Thread-1 (]: SQL status: OK in 4.540 seconds
[0m23:33:07.863455 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=429e2773-03a1-4111-8501-9047e8ac07c9) - Closing
[0m23:33:07.973264 [debug] [Thread-1 (]: Applying DROP to: `address_snapshot__dbt_tmp`
[0m23:33:07.976877 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:33:07.976877 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */
DROP VIEW IF EXISTS `address_snapshot__dbt_tmp`
[0m23:33:08.137020 [debug] [Thread-1 (]: SQL status: OK in 0.160 seconds
[0m23:33:08.137020 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=17525286-fa62-4a1d-b7b8-503ed748ccf6) - Closing
[0m23:33:08.236908 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '57b98072-50cc-4f82-afa8-6464540e8126', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002444FBC63E0>]}
[0m23:33:08.236908 [info ] [Thread-1 (]: 1 of 7 OK snapshotted snapshots.address_snapshot ............................... [[32mOK[0m in 10.32s]
[0m23:33:08.236908 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.address_snapshot
[0m23:33:08.236908 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.customer_snapshot
[0m23:33:08.243136 [info ] [Thread-1 (]: 2 of 7 START snapshot snapshots.customer_snapshot .............................. [RUN]
[0m23:33:08.244211 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.address_snapshot, now snapshot.medalion_dbt_spark.customer_snapshot)
[0m23:33:08.244211 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=932d71c7-61c7-444d-8907-1440155699de, name=snapshot.medalion_dbt_spark.customer_snapshot, idle-time=0.007303476333618164s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.address_snapshot
[0m23:33:08.244211 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.customer_snapshot
[0m23:33:08.253420 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.customer_snapshot
[0m23:33:08.258324 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:33:08.258810 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

      describe extended `hive_metastore`.`snapshots`.`customer_snapshot`
  
[0m23:33:08.865312 [debug] [Thread-1 (]: SQL status: OK in 0.610 seconds
[0m23:33:08.865312 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=6a73149e-0440-4ff7-9176-043774b98d22) - Closing
[0m23:33:08.953486 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:33:08.958353 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */
select * from (
        



with source_data as (
    select
        CustomerId,
        NameStyle,
        Title,
        FirstName,
        MiddleName,
        LastName,
        Suffix,
        CompanyName,
        SalesPerson,
        EmailAddress,
        Phone,
        PasswordHash,
        PasswordSalt
    from `hive_metastore`.`saleslt`.`customer`
)
select *
from source_data

    ) as __dbt_sbq
    where false
    limit 0

    
[0m23:33:09.223019 [debug] [Thread-1 (]: SQL status: OK in 0.260 seconds
[0m23:33:09.233041 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=f5f9d054-1af9-407e-927a-8027b3d59c89) - Closing
[0m23:33:09.302951 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:33:09.302951 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`customer_snapshot`

  
[0m23:33:09.637356 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:33:09.647141 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=6267911c-fb18-4863-974f-5bb9ba922a26) - Closing
[0m23:33:09.729790 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:33:09.729790 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`customer_snapshot`

  
[0m23:33:10.064443 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:33:10.066500 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=d96fdbde-bad1-43bd-8529-72c1a3d66a67) - Closing
[0m23:33:10.173163 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:33:10.173163 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

        
  
    create or replace temporary view `customer_snapshot__dbt_tmp` as
      
    
    with snapshot_query as (

        with source_data as (
    select
        CustomerId,
        NameStyle,
        Title,
        FirstName,
        MiddleName,
        LastName,
        Suffix,
        CompanyName,
        SalesPerson,
        EmailAddress,
        Phone,
        PasswordHash,
        PasswordSalt
    from `hive_metastore`.`saleslt`.`customer`
)
select *
from source_data

    ),

    snapshotted_data as (

        select *, 
    
        CustomerId as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`customer_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        CustomerId as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(CustomerId as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        CustomerId as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        CustomerId as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`CustomerId` != source_data.`CustomerId`
        or
        (
            ((snapshotted_data.`CustomerId` is null) and not (source_data.`CustomerId` is null))
            or
            ((not snapshotted_data.`CustomerId` is null) and (source_data.`CustomerId` is null))
        ) or snapshotted_data.`NameStyle` != source_data.`NameStyle`
        or
        (
            ((snapshotted_data.`NameStyle` is null) and not (source_data.`NameStyle` is null))
            or
            ((not snapshotted_data.`NameStyle` is null) and (source_data.`NameStyle` is null))
        ) or snapshotted_data.`Title` != source_data.`Title`
        or
        (
            ((snapshotted_data.`Title` is null) and not (source_data.`Title` is null))
            or
            ((not snapshotted_data.`Title` is null) and (source_data.`Title` is null))
        ) or snapshotted_data.`FirstName` != source_data.`FirstName`
        or
        (
            ((snapshotted_data.`FirstName` is null) and not (source_data.`FirstName` is null))
            or
            ((not snapshotted_data.`FirstName` is null) and (source_data.`FirstName` is null))
        ) or snapshotted_data.`MiddleName` != source_data.`MiddleName`
        or
        (
            ((snapshotted_data.`MiddleName` is null) and not (source_data.`MiddleName` is null))
            or
            ((not snapshotted_data.`MiddleName` is null) and (source_data.`MiddleName` is null))
        ) or snapshotted_data.`LastName` != source_data.`LastName`
        or
        (
            ((snapshotted_data.`LastName` is null) and not (source_data.`LastName` is null))
            or
            ((not snapshotted_data.`LastName` is null) and (source_data.`LastName` is null))
        ) or snapshotted_data.`Suffix` != source_data.`Suffix`
        or
        (
            ((snapshotted_data.`Suffix` is null) and not (source_data.`Suffix` is null))
            or
            ((not snapshotted_data.`Suffix` is null) and (source_data.`Suffix` is null))
        ) or snapshotted_data.`CompanyName` != source_data.`CompanyName`
        or
        (
            ((snapshotted_data.`CompanyName` is null) and not (source_data.`CompanyName` is null))
            or
            ((not snapshotted_data.`CompanyName` is null) and (source_data.`CompanyName` is null))
        ) or snapshotted_data.`SalesPerson` != source_data.`SalesPerson`
        or
        (
            ((snapshotted_data.`SalesPerson` is null) and not (source_data.`SalesPerson` is null))
            or
            ((not snapshotted_data.`SalesPerson` is null) and (source_data.`SalesPerson` is null))
        ) or snapshotted_data.`EmailAddress` != source_data.`EmailAddress`
        or
        (
            ((snapshotted_data.`EmailAddress` is null) and not (source_data.`EmailAddress` is null))
            or
            ((not snapshotted_data.`EmailAddress` is null) and (source_data.`EmailAddress` is null))
        ) or snapshotted_data.`Phone` != source_data.`Phone`
        or
        (
            ((snapshotted_data.`Phone` is null) and not (source_data.`Phone` is null))
            or
            ((not snapshotted_data.`Phone` is null) and (source_data.`Phone` is null))
        ) or snapshotted_data.`PasswordHash` != source_data.`PasswordHash`
        or
        (
            ((snapshotted_data.`PasswordHash` is null) and not (source_data.`PasswordHash` is null))
            or
            ((not snapshotted_data.`PasswordHash` is null) and (source_data.`PasswordHash` is null))
        ) or snapshotted_data.`PasswordSalt` != source_data.`PasswordSalt`
        or
        (
            ((snapshotted_data.`PasswordSalt` is null) and not (source_data.`PasswordSalt` is null))
            or
            ((not snapshotted_data.`PasswordSalt` is null) and (source_data.`PasswordSalt` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`CustomerId` != source_data.`CustomerId`
        or
        (
            ((snapshotted_data.`CustomerId` is null) and not (source_data.`CustomerId` is null))
            or
            ((not snapshotted_data.`CustomerId` is null) and (source_data.`CustomerId` is null))
        ) or snapshotted_data.`NameStyle` != source_data.`NameStyle`
        or
        (
            ((snapshotted_data.`NameStyle` is null) and not (source_data.`NameStyle` is null))
            or
            ((not snapshotted_data.`NameStyle` is null) and (source_data.`NameStyle` is null))
        ) or snapshotted_data.`Title` != source_data.`Title`
        or
        (
            ((snapshotted_data.`Title` is null) and not (source_data.`Title` is null))
            or
            ((not snapshotted_data.`Title` is null) and (source_data.`Title` is null))
        ) or snapshotted_data.`FirstName` != source_data.`FirstName`
        or
        (
            ((snapshotted_data.`FirstName` is null) and not (source_data.`FirstName` is null))
            or
            ((not snapshotted_data.`FirstName` is null) and (source_data.`FirstName` is null))
        ) or snapshotted_data.`MiddleName` != source_data.`MiddleName`
        or
        (
            ((snapshotted_data.`MiddleName` is null) and not (source_data.`MiddleName` is null))
            or
            ((not snapshotted_data.`MiddleName` is null) and (source_data.`MiddleName` is null))
        ) or snapshotted_data.`LastName` != source_data.`LastName`
        or
        (
            ((snapshotted_data.`LastName` is null) and not (source_data.`LastName` is null))
            or
            ((not snapshotted_data.`LastName` is null) and (source_data.`LastName` is null))
        ) or snapshotted_data.`Suffix` != source_data.`Suffix`
        or
        (
            ((snapshotted_data.`Suffix` is null) and not (source_data.`Suffix` is null))
            or
            ((not snapshotted_data.`Suffix` is null) and (source_data.`Suffix` is null))
        ) or snapshotted_data.`CompanyName` != source_data.`CompanyName`
        or
        (
            ((snapshotted_data.`CompanyName` is null) and not (source_data.`CompanyName` is null))
            or
            ((not snapshotted_data.`CompanyName` is null) and (source_data.`CompanyName` is null))
        ) or snapshotted_data.`SalesPerson` != source_data.`SalesPerson`
        or
        (
            ((snapshotted_data.`SalesPerson` is null) and not (source_data.`SalesPerson` is null))
            or
            ((not snapshotted_data.`SalesPerson` is null) and (source_data.`SalesPerson` is null))
        ) or snapshotted_data.`EmailAddress` != source_data.`EmailAddress`
        or
        (
            ((snapshotted_data.`EmailAddress` is null) and not (source_data.`EmailAddress` is null))
            or
            ((not snapshotted_data.`EmailAddress` is null) and (source_data.`EmailAddress` is null))
        ) or snapshotted_data.`Phone` != source_data.`Phone`
        or
        (
            ((snapshotted_data.`Phone` is null) and not (source_data.`Phone` is null))
            or
            ((not snapshotted_data.`Phone` is null) and (source_data.`Phone` is null))
        ) or snapshotted_data.`PasswordHash` != source_data.`PasswordHash`
        or
        (
            ((snapshotted_data.`PasswordHash` is null) and not (source_data.`PasswordHash` is null))
            or
            ((not snapshotted_data.`PasswordHash` is null) and (source_data.`PasswordHash` is null))
        ) or snapshotted_data.`PasswordSalt` != source_data.`PasswordSalt`
        or
        (
            ((snapshotted_data.`PasswordSalt` is null) and not (source_data.`PasswordSalt` is null))
            or
            ((not snapshotted_data.`PasswordSalt` is null) and (source_data.`PasswordSalt` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

  
    
[0m23:33:10.585193 [debug] [Thread-1 (]: SQL status: OK in 0.410 seconds
[0m23:33:10.587283 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=fd6d1424-de8b-4797-95e8-03a38c63557f) - Closing
[0m23:33:10.685372 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:33:10.687807 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

    
DESCRIBE TABLE `customer_snapshot__dbt_tmp`

  
[0m23:33:10.830605 [debug] [Thread-1 (]: SQL status: OK in 0.140 seconds
[0m23:33:10.837328 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=41cd18d5-914b-4c37-a8e0-781964c05401) - Closing
[0m23:33:10.920498 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:33:10.920498 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`customer_snapshot`

  
[0m23:33:11.256745 [debug] [Thread-1 (]: SQL status: OK in 0.340 seconds
[0m23:33:11.266855 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=2e5e79ad-c67e-44b9-9e76-608942ff38df) - Closing
[0m23:33:11.358817 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:33:11.361846 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

    
DESCRIBE TABLE `customer_snapshot__dbt_tmp`

  
[0m23:33:11.525115 [debug] [Thread-1 (]: SQL status: OK in 0.160 seconds
[0m23:33:11.533263 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=f9fb9ec9-a0bf-4157-8c54-634e8aaa2b76) - Closing
[0m23:33:11.622035 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:33:11.623762 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`customer_snapshot`

  
[0m23:33:11.958311 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:33:11.967022 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=7bfaf55f-9474-4a5a-9d1e-c4b4db5a4742) - Closing
[0m23:33:12.060789 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:33:12.062887 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

    
DESCRIBE TABLE `customer_snapshot__dbt_tmp`

  
[0m23:33:12.207164 [debug] [Thread-1 (]: SQL status: OK in 0.140 seconds
[0m23:33:12.218453 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=29bf1068-52df-444d-b498-f0d6053e05bb) - Closing
[0m23:33:12.293009 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:33:12.307752 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */
select * from (
        
    
    with snapshot_query as (

        with source_data as (
    select
        CustomerId,
        NameStyle,
        Title,
        FirstName,
        MiddleName,
        LastName,
        Suffix,
        CompanyName,
        SalesPerson,
        EmailAddress,
        Phone,
        PasswordHash,
        PasswordSalt
    from `hive_metastore`.`saleslt`.`customer`
)
select *
from source_data

    ),

    snapshotted_data as (

        select *, 
    
        CustomerId as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`customer_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        CustomerId as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(CustomerId as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        CustomerId as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        CustomerId as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`CustomerId` != source_data.`CustomerId`
        or
        (
            ((snapshotted_data.`CustomerId` is null) and not (source_data.`CustomerId` is null))
            or
            ((not snapshotted_data.`CustomerId` is null) and (source_data.`CustomerId` is null))
        ) or snapshotted_data.`NameStyle` != source_data.`NameStyle`
        or
        (
            ((snapshotted_data.`NameStyle` is null) and not (source_data.`NameStyle` is null))
            or
            ((not snapshotted_data.`NameStyle` is null) and (source_data.`NameStyle` is null))
        ) or snapshotted_data.`Title` != source_data.`Title`
        or
        (
            ((snapshotted_data.`Title` is null) and not (source_data.`Title` is null))
            or
            ((not snapshotted_data.`Title` is null) and (source_data.`Title` is null))
        ) or snapshotted_data.`FirstName` != source_data.`FirstName`
        or
        (
            ((snapshotted_data.`FirstName` is null) and not (source_data.`FirstName` is null))
            or
            ((not snapshotted_data.`FirstName` is null) and (source_data.`FirstName` is null))
        ) or snapshotted_data.`MiddleName` != source_data.`MiddleName`
        or
        (
            ((snapshotted_data.`MiddleName` is null) and not (source_data.`MiddleName` is null))
            or
            ((not snapshotted_data.`MiddleName` is null) and (source_data.`MiddleName` is null))
        ) or snapshotted_data.`LastName` != source_data.`LastName`
        or
        (
            ((snapshotted_data.`LastName` is null) and not (source_data.`LastName` is null))
            or
            ((not snapshotted_data.`LastName` is null) and (source_data.`LastName` is null))
        ) or snapshotted_data.`Suffix` != source_data.`Suffix`
        or
        (
            ((snapshotted_data.`Suffix` is null) and not (source_data.`Suffix` is null))
            or
            ((not snapshotted_data.`Suffix` is null) and (source_data.`Suffix` is null))
        ) or snapshotted_data.`CompanyName` != source_data.`CompanyName`
        or
        (
            ((snapshotted_data.`CompanyName` is null) and not (source_data.`CompanyName` is null))
            or
            ((not snapshotted_data.`CompanyName` is null) and (source_data.`CompanyName` is null))
        ) or snapshotted_data.`SalesPerson` != source_data.`SalesPerson`
        or
        (
            ((snapshotted_data.`SalesPerson` is null) and not (source_data.`SalesPerson` is null))
            or
            ((not snapshotted_data.`SalesPerson` is null) and (source_data.`SalesPerson` is null))
        ) or snapshotted_data.`EmailAddress` != source_data.`EmailAddress`
        or
        (
            ((snapshotted_data.`EmailAddress` is null) and not (source_data.`EmailAddress` is null))
            or
            ((not snapshotted_data.`EmailAddress` is null) and (source_data.`EmailAddress` is null))
        ) or snapshotted_data.`Phone` != source_data.`Phone`
        or
        (
            ((snapshotted_data.`Phone` is null) and not (source_data.`Phone` is null))
            or
            ((not snapshotted_data.`Phone` is null) and (source_data.`Phone` is null))
        ) or snapshotted_data.`PasswordHash` != source_data.`PasswordHash`
        or
        (
            ((snapshotted_data.`PasswordHash` is null) and not (source_data.`PasswordHash` is null))
            or
            ((not snapshotted_data.`PasswordHash` is null) and (source_data.`PasswordHash` is null))
        ) or snapshotted_data.`PasswordSalt` != source_data.`PasswordSalt`
        or
        (
            ((snapshotted_data.`PasswordSalt` is null) and not (source_data.`PasswordSalt` is null))
            or
            ((not snapshotted_data.`PasswordSalt` is null) and (source_data.`PasswordSalt` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`CustomerId` != source_data.`CustomerId`
        or
        (
            ((snapshotted_data.`CustomerId` is null) and not (source_data.`CustomerId` is null))
            or
            ((not snapshotted_data.`CustomerId` is null) and (source_data.`CustomerId` is null))
        ) or snapshotted_data.`NameStyle` != source_data.`NameStyle`
        or
        (
            ((snapshotted_data.`NameStyle` is null) and not (source_data.`NameStyle` is null))
            or
            ((not snapshotted_data.`NameStyle` is null) and (source_data.`NameStyle` is null))
        ) or snapshotted_data.`Title` != source_data.`Title`
        or
        (
            ((snapshotted_data.`Title` is null) and not (source_data.`Title` is null))
            or
            ((not snapshotted_data.`Title` is null) and (source_data.`Title` is null))
        ) or snapshotted_data.`FirstName` != source_data.`FirstName`
        or
        (
            ((snapshotted_data.`FirstName` is null) and not (source_data.`FirstName` is null))
            or
            ((not snapshotted_data.`FirstName` is null) and (source_data.`FirstName` is null))
        ) or snapshotted_data.`MiddleName` != source_data.`MiddleName`
        or
        (
            ((snapshotted_data.`MiddleName` is null) and not (source_data.`MiddleName` is null))
            or
            ((not snapshotted_data.`MiddleName` is null) and (source_data.`MiddleName` is null))
        ) or snapshotted_data.`LastName` != source_data.`LastName`
        or
        (
            ((snapshotted_data.`LastName` is null) and not (source_data.`LastName` is null))
            or
            ((not snapshotted_data.`LastName` is null) and (source_data.`LastName` is null))
        ) or snapshotted_data.`Suffix` != source_data.`Suffix`
        or
        (
            ((snapshotted_data.`Suffix` is null) and not (source_data.`Suffix` is null))
            or
            ((not snapshotted_data.`Suffix` is null) and (source_data.`Suffix` is null))
        ) or snapshotted_data.`CompanyName` != source_data.`CompanyName`
        or
        (
            ((snapshotted_data.`CompanyName` is null) and not (source_data.`CompanyName` is null))
            or
            ((not snapshotted_data.`CompanyName` is null) and (source_data.`CompanyName` is null))
        ) or snapshotted_data.`SalesPerson` != source_data.`SalesPerson`
        or
        (
            ((snapshotted_data.`SalesPerson` is null) and not (source_data.`SalesPerson` is null))
            or
            ((not snapshotted_data.`SalesPerson` is null) and (source_data.`SalesPerson` is null))
        ) or snapshotted_data.`EmailAddress` != source_data.`EmailAddress`
        or
        (
            ((snapshotted_data.`EmailAddress` is null) and not (source_data.`EmailAddress` is null))
            or
            ((not snapshotted_data.`EmailAddress` is null) and (source_data.`EmailAddress` is null))
        ) or snapshotted_data.`Phone` != source_data.`Phone`
        or
        (
            ((snapshotted_data.`Phone` is null) and not (source_data.`Phone` is null))
            or
            ((not snapshotted_data.`Phone` is null) and (source_data.`Phone` is null))
        ) or snapshotted_data.`PasswordHash` != source_data.`PasswordHash`
        or
        (
            ((snapshotted_data.`PasswordHash` is null) and not (source_data.`PasswordHash` is null))
            or
            ((not snapshotted_data.`PasswordHash` is null) and (source_data.`PasswordHash` is null))
        ) or snapshotted_data.`PasswordSalt` != source_data.`PasswordSalt`
        or
        (
            ((snapshotted_data.`PasswordSalt` is null) and not (source_data.`PasswordSalt` is null))
            or
            ((not snapshotted_data.`PasswordSalt` is null) and (source_data.`PasswordSalt` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

    ) as __dbt_sbq
    where false
    limit 0

[0m23:33:12.753570 [debug] [Thread-1 (]: SQL status: OK in 0.440 seconds
[0m23:33:12.753570 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=f4129d3f-dc51-49d5-8710-06dbdebfd24e) - Closing
[0m23:33:12.835608 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:33:12.837637 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:33:12.973170 [debug] [Thread-1 (]: SQL status: OK in 0.140 seconds
[0m23:33:12.973170 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=3f8f353d-56c9-4d01-887c-76ad7298f8a6) - Closing
[0m23:33:13.047790 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:33:13.053437 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:33:13.053437 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

      merge into `hive_metastore`.`snapshots`.`customer_snapshot` as DBT_INTERNAL_DEST
    
      using `customer_snapshot__dbt_tmp` as DBT_INTERNAL_SOURCE
    
    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id
    when matched
     
       and DBT_INTERNAL_DEST.dbt_valid_to is null
     
     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')
        then update
        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to

    when not matched
     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'
        then insert *
    ;

  
[0m23:33:17.581130 [debug] [Thread-1 (]: SQL status: OK in 4.530 seconds
[0m23:33:17.583943 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=2a95d0fc-281f-4854-8f6e-aee6cd99c7c3) - Closing
[0m23:33:17.670313 [debug] [Thread-1 (]: Applying DROP to: `customer_snapshot__dbt_tmp`
[0m23:33:17.673994 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:33:17.675982 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */
DROP VIEW IF EXISTS `customer_snapshot__dbt_tmp`
[0m23:33:17.799976 [debug] [Thread-1 (]: SQL status: OK in 0.120 seconds
[0m23:33:17.802879 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=0e24d838-4856-47e5-8153-94e2619a6cb9) - Closing
[0m23:33:17.886340 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '57b98072-50cc-4f82-afa8-6464540e8126', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002444E467550>]}
[0m23:33:17.888292 [info ] [Thread-1 (]: 2 of 7 OK snapshotted snapshots.customer_snapshot .............................. [[32mOK[0m in 9.64s]
[0m23:33:17.889512 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.customer_snapshot
[0m23:33:17.892857 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m23:33:17.894209 [info ] [Thread-1 (]: 3 of 7 START snapshot snapshots.customeraddress_snapshot ....................... [RUN]
[0m23:33:17.896243 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.customer_snapshot, now snapshot.medalion_dbt_spark.customeraddress_snapshot)
[0m23:33:17.898246 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=932d71c7-61c7-444d-8907-1440155699de, name=snapshot.medalion_dbt_spark.customeraddress_snapshot, idle-time=0.012917518615722656s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.customer_snapshot
[0m23:33:17.898569 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m23:33:17.907243 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m23:33:17.917269 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:33:17.917269 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

      describe extended `hive_metastore`.`snapshots`.`customeraddress_snapshot`
  
[0m23:33:18.887360 [debug] [Thread-1 (]: SQL status: OK in 0.970 seconds
[0m23:33:18.895028 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=215c4ade-f8bf-4beb-9bc1-7ec1e28b0022) - Closing
[0m23:33:18.987312 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:33:18.987312 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */
select * from (
        



with source_data as (
    select
        CustomerId,
        AddressId,
        AddressType
    from `hive_metastore`.`saleslt`.`customeraddress`
)
select *
from source_data

    ) as __dbt_sbq
    where false
    limit 0

    
[0m23:33:19.333280 [debug] [Thread-1 (]: SQL status: OK in 0.340 seconds
[0m23:33:19.338239 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=5b34c3ec-d0ba-4472-9e16-65dc1a9ea585) - Closing
[0m23:33:19.423105 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:33:19.423105 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`customeraddress_snapshot`

  
[0m23:33:19.742991 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:33:19.747041 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=27e53117-ee8c-462e-93bd-9af2a7fee441) - Closing
[0m23:33:19.813068 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:33:19.822935 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`customeraddress_snapshot`

  
[0m23:33:20.143331 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:33:20.143331 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=cad57dd1-01ec-47d8-bb6a-19777fc3ff12) - Closing
[0m23:33:20.223231 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:33:20.223231 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

        
  
    create or replace temporary view `customeraddress_snapshot__dbt_tmp` as
      
    
    with snapshot_query as (

        with source_data as (
    select
        CustomerId,
        AddressId,
        AddressType
    from `hive_metastore`.`saleslt`.`customeraddress`
)
select *
from source_data

    ),

    snapshotted_data as (

        select *, 
    
        CustomerId||'-'||AddressId as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`customeraddress_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        CustomerId||'-'||AddressId as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(CustomerId||'-'||AddressId as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        CustomerId||'-'||AddressId as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        CustomerId||'-'||AddressId as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`CustomerId` != source_data.`CustomerId`
        or
        (
            ((snapshotted_data.`CustomerId` is null) and not (source_data.`CustomerId` is null))
            or
            ((not snapshotted_data.`CustomerId` is null) and (source_data.`CustomerId` is null))
        ) or snapshotted_data.`AddressId` != source_data.`AddressId`
        or
        (
            ((snapshotted_data.`AddressId` is null) and not (source_data.`AddressId` is null))
            or
            ((not snapshotted_data.`AddressId` is null) and (source_data.`AddressId` is null))
        ) or snapshotted_data.`AddressType` != source_data.`AddressType`
        or
        (
            ((snapshotted_data.`AddressType` is null) and not (source_data.`AddressType` is null))
            or
            ((not snapshotted_data.`AddressType` is null) and (source_data.`AddressType` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`CustomerId` != source_data.`CustomerId`
        or
        (
            ((snapshotted_data.`CustomerId` is null) and not (source_data.`CustomerId` is null))
            or
            ((not snapshotted_data.`CustomerId` is null) and (source_data.`CustomerId` is null))
        ) or snapshotted_data.`AddressId` != source_data.`AddressId`
        or
        (
            ((snapshotted_data.`AddressId` is null) and not (source_data.`AddressId` is null))
            or
            ((not snapshotted_data.`AddressId` is null) and (source_data.`AddressId` is null))
        ) or snapshotted_data.`AddressType` != source_data.`AddressType`
        or
        (
            ((snapshotted_data.`AddressType` is null) and not (source_data.`AddressType` is null))
            or
            ((not snapshotted_data.`AddressType` is null) and (source_data.`AddressType` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

  
    
[0m23:33:20.598125 [debug] [Thread-1 (]: SQL status: OK in 0.370 seconds
[0m23:33:20.604832 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=c1321cf6-a542-4f6f-b8fb-9d1dfa6628cd) - Closing
[0m23:33:20.681348 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:33:20.682870 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

    
DESCRIBE TABLE `customeraddress_snapshot__dbt_tmp`

  
[0m23:33:20.828971 [debug] [Thread-1 (]: SQL status: OK in 0.150 seconds
[0m23:33:20.832003 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=956e570c-be35-4875-ab78-064430ffdffc) - Closing
[0m23:33:20.909442 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:33:20.909442 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`customeraddress_snapshot`

  
[0m23:33:21.253385 [debug] [Thread-1 (]: SQL status: OK in 0.340 seconds
[0m23:33:21.254745 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=6a65a7e5-7e36-45f6-ae5f-fd874d61d777) - Closing
[0m23:33:21.333392 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:33:21.333849 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

    
DESCRIBE TABLE `customeraddress_snapshot__dbt_tmp`

  
[0m23:33:21.489302 [debug] [Thread-1 (]: SQL status: OK in 0.150 seconds
[0m23:33:21.492886 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=b36e7e13-d820-4279-9884-64506d06c449) - Closing
[0m23:33:21.571150 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:33:21.572149 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`customeraddress_snapshot`

  
[0m23:33:21.923429 [debug] [Thread-1 (]: SQL status: OK in 0.340 seconds
[0m23:33:21.927380 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=96d01925-9f77-4656-8c7e-258392030f67) - Closing
[0m23:33:22.023244 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:33:22.025912 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

    
DESCRIBE TABLE `customeraddress_snapshot__dbt_tmp`

  
[0m23:33:22.159027 [debug] [Thread-1 (]: SQL status: OK in 0.130 seconds
[0m23:33:22.161018 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=b58c5e6f-d5ae-4a92-a137-70167e3341c7) - Closing
[0m23:33:22.243181 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:33:22.243181 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */
select * from (
        
    
    with snapshot_query as (

        with source_data as (
    select
        CustomerId,
        AddressId,
        AddressType
    from `hive_metastore`.`saleslt`.`customeraddress`
)
select *
from source_data

    ),

    snapshotted_data as (

        select *, 
    
        CustomerId||'-'||AddressId as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`customeraddress_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        CustomerId||'-'||AddressId as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(CustomerId||'-'||AddressId as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        CustomerId||'-'||AddressId as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        CustomerId||'-'||AddressId as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`CustomerId` != source_data.`CustomerId`
        or
        (
            ((snapshotted_data.`CustomerId` is null) and not (source_data.`CustomerId` is null))
            or
            ((not snapshotted_data.`CustomerId` is null) and (source_data.`CustomerId` is null))
        ) or snapshotted_data.`AddressId` != source_data.`AddressId`
        or
        (
            ((snapshotted_data.`AddressId` is null) and not (source_data.`AddressId` is null))
            or
            ((not snapshotted_data.`AddressId` is null) and (source_data.`AddressId` is null))
        ) or snapshotted_data.`AddressType` != source_data.`AddressType`
        or
        (
            ((snapshotted_data.`AddressType` is null) and not (source_data.`AddressType` is null))
            or
            ((not snapshotted_data.`AddressType` is null) and (source_data.`AddressType` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`CustomerId` != source_data.`CustomerId`
        or
        (
            ((snapshotted_data.`CustomerId` is null) and not (source_data.`CustomerId` is null))
            or
            ((not snapshotted_data.`CustomerId` is null) and (source_data.`CustomerId` is null))
        ) or snapshotted_data.`AddressId` != source_data.`AddressId`
        or
        (
            ((snapshotted_data.`AddressId` is null) and not (source_data.`AddressId` is null))
            or
            ((not snapshotted_data.`AddressId` is null) and (source_data.`AddressId` is null))
        ) or snapshotted_data.`AddressType` != source_data.`AddressType`
        or
        (
            ((snapshotted_data.`AddressType` is null) and not (source_data.`AddressType` is null))
            or
            ((not snapshotted_data.`AddressType` is null) and (source_data.`AddressType` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

    ) as __dbt_sbq
    where false
    limit 0

[0m23:33:22.523265 [debug] [Thread-1 (]: SQL status: OK in 0.280 seconds
[0m23:33:22.523265 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=116fbf7f-d5f6-4624-b36d-57c7f1640dc3) - Closing
[0m23:33:22.604269 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:33:22.604269 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:33:22.719269 [debug] [Thread-1 (]: SQL status: OK in 0.110 seconds
[0m23:33:22.720357 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=feedb80d-70cf-4236-8109-d3b5db6040a4) - Closing
[0m23:33:22.790833 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:33:22.792833 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:33:22.793349 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

      merge into `hive_metastore`.`snapshots`.`customeraddress_snapshot` as DBT_INTERNAL_DEST
    
      using `customeraddress_snapshot__dbt_tmp` as DBT_INTERNAL_SOURCE
    
    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id
    when matched
     
       and DBT_INTERNAL_DEST.dbt_valid_to is null
     
     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')
        then update
        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to

    when not matched
     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'
        then insert *
    ;

  
[0m23:33:26.894554 [debug] [Thread-1 (]: SQL status: OK in 4.100 seconds
[0m23:33:26.896279 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=ccd04a5f-24e7-49ef-b750-66a1f23e6f94) - Closing
[0m23:33:26.976976 [debug] [Thread-1 (]: Applying DROP to: `customeraddress_snapshot__dbt_tmp`
[0m23:33:26.976976 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:33:26.978980 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */
DROP VIEW IF EXISTS `customeraddress_snapshot__dbt_tmp`
[0m23:33:27.147441 [debug] [Thread-1 (]: SQL status: OK in 0.170 seconds
[0m23:33:27.154832 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=831c40cd-122a-490d-8543-8dab23c621ed) - Closing
[0m23:33:27.243113 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '57b98072-50cc-4f82-afa8-6464540e8126', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002444FCCE8F0>]}
[0m23:33:27.244122 [info ] [Thread-1 (]: 3 of 7 OK snapshotted snapshots.customeraddress_snapshot ....................... [[32mOK[0m in 9.35s]
[0m23:33:27.245121 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m23:33:27.246121 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.product_snapshot
[0m23:33:27.247122 [info ] [Thread-1 (]: 4 of 7 START snapshot snapshots.product_snapshot ............................... [RUN]
[0m23:33:27.247620 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.customeraddress_snapshot, now snapshot.medalion_dbt_spark.product_snapshot)
[0m23:33:27.248754 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=932d71c7-61c7-444d-8907-1440155699de, name=snapshot.medalion_dbt_spark.product_snapshot, idle-time=0.005162954330444336s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m23:33:27.248754 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.product_snapshot
[0m23:33:27.253928 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.product_snapshot
[0m23:33:27.261456 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:33:27.264110 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

      describe extended `hive_metastore`.`snapshots`.`product_snapshot`
  
[0m23:33:27.839384 [debug] [Thread-1 (]: SQL status: OK in 0.580 seconds
[0m23:33:27.841391 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=8da6ac23-4981-45ed-97b4-773512889303) - Closing
[0m23:33:27.923074 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:33:27.923074 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */
select * from (
        



with product_snapshot as (
    SELECT
        ProductID,
        Name,
        ProductNumber,
        Color,
        StandardCost,
        ListPrice,
        Size,
        Weight,
        ProductCategoryID,
        ProductModelID,
        SellStartDate,
        SellEndDate,
        DiscontinuedDate,
        ThumbNailPhoto,
        ThumbnailPhotoFileName
    FROM `hive_metastore`.`saleslt`.`product`
)

select * from product_snapshot

    ) as __dbt_sbq
    where false
    limit 0

    
[0m23:33:28.213128 [debug] [Thread-1 (]: SQL status: OK in 0.290 seconds
[0m23:33:28.219593 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=2f53bec0-6b3b-4c35-8e28-601a45732dd1) - Closing
[0m23:33:28.291444 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:33:28.292954 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`product_snapshot`

  
[0m23:33:28.630138 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:33:28.638242 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=127219ed-c83d-4da0-9a50-67fe6c00ad8f) - Closing
[0m23:33:28.723106 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:33:28.723106 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`product_snapshot`

  
[0m23:33:29.057778 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:33:29.059606 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=52146f60-0352-42e0-8e3b-372008a61efa) - Closing
[0m23:33:29.138312 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:33:29.139671 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

        
  
    create or replace temporary view `product_snapshot__dbt_tmp` as
      
    
    with snapshot_query as (

        with product_snapshot as (
    SELECT
        ProductID,
        Name,
        ProductNumber,
        Color,
        StandardCost,
        ListPrice,
        Size,
        Weight,
        ProductCategoryID,
        ProductModelID,
        SellStartDate,
        SellEndDate,
        DiscontinuedDate,
        ThumbNailPhoto,
        ThumbnailPhotoFileName
    FROM `hive_metastore`.`saleslt`.`product`
)

select * from product_snapshot

    ),

    snapshotted_data as (

        select *, 
    
        ProductID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`product_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        ProductID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(ProductID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        ProductID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        ProductID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`ProductID` != source_data.`ProductID`
        or
        (
            ((snapshotted_data.`ProductID` is null) and not (source_data.`ProductID` is null))
            or
            ((not snapshotted_data.`ProductID` is null) and (source_data.`ProductID` is null))
        ) or snapshotted_data.`Name` != source_data.`Name`
        or
        (
            ((snapshotted_data.`Name` is null) and not (source_data.`Name` is null))
            or
            ((not snapshotted_data.`Name` is null) and (source_data.`Name` is null))
        ) or snapshotted_data.`ProductNumber` != source_data.`ProductNumber`
        or
        (
            ((snapshotted_data.`ProductNumber` is null) and not (source_data.`ProductNumber` is null))
            or
            ((not snapshotted_data.`ProductNumber` is null) and (source_data.`ProductNumber` is null))
        ) or snapshotted_data.`Color` != source_data.`Color`
        or
        (
            ((snapshotted_data.`Color` is null) and not (source_data.`Color` is null))
            or
            ((not snapshotted_data.`Color` is null) and (source_data.`Color` is null))
        ) or snapshotted_data.`StandardCost` != source_data.`StandardCost`
        or
        (
            ((snapshotted_data.`StandardCost` is null) and not (source_data.`StandardCost` is null))
            or
            ((not snapshotted_data.`StandardCost` is null) and (source_data.`StandardCost` is null))
        ) or snapshotted_data.`ListPrice` != source_data.`ListPrice`
        or
        (
            ((snapshotted_data.`ListPrice` is null) and not (source_data.`ListPrice` is null))
            or
            ((not snapshotted_data.`ListPrice` is null) and (source_data.`ListPrice` is null))
        ) or snapshotted_data.`Size` != source_data.`Size`
        or
        (
            ((snapshotted_data.`Size` is null) and not (source_data.`Size` is null))
            or
            ((not snapshotted_data.`Size` is null) and (source_data.`Size` is null))
        ) or snapshotted_data.`Weight` != source_data.`Weight`
        or
        (
            ((snapshotted_data.`Weight` is null) and not (source_data.`Weight` is null))
            or
            ((not snapshotted_data.`Weight` is null) and (source_data.`Weight` is null))
        ) or snapshotted_data.`ProductCategoryID` != source_data.`ProductCategoryID`
        or
        (
            ((snapshotted_data.`ProductCategoryID` is null) and not (source_data.`ProductCategoryID` is null))
            or
            ((not snapshotted_data.`ProductCategoryID` is null) and (source_data.`ProductCategoryID` is null))
        ) or snapshotted_data.`ProductModelID` != source_data.`ProductModelID`
        or
        (
            ((snapshotted_data.`ProductModelID` is null) and not (source_data.`ProductModelID` is null))
            or
            ((not snapshotted_data.`ProductModelID` is null) and (source_data.`ProductModelID` is null))
        ) or snapshotted_data.`SellStartDate` != source_data.`SellStartDate`
        or
        (
            ((snapshotted_data.`SellStartDate` is null) and not (source_data.`SellStartDate` is null))
            or
            ((not snapshotted_data.`SellStartDate` is null) and (source_data.`SellStartDate` is null))
        ) or snapshotted_data.`SellEndDate` != source_data.`SellEndDate`
        or
        (
            ((snapshotted_data.`SellEndDate` is null) and not (source_data.`SellEndDate` is null))
            or
            ((not snapshotted_data.`SellEndDate` is null) and (source_data.`SellEndDate` is null))
        ) or snapshotted_data.`DiscontinuedDate` != source_data.`DiscontinuedDate`
        or
        (
            ((snapshotted_data.`DiscontinuedDate` is null) and not (source_data.`DiscontinuedDate` is null))
            or
            ((not snapshotted_data.`DiscontinuedDate` is null) and (source_data.`DiscontinuedDate` is null))
        ) or snapshotted_data.`ThumbNailPhoto` != source_data.`ThumbNailPhoto`
        or
        (
            ((snapshotted_data.`ThumbNailPhoto` is null) and not (source_data.`ThumbNailPhoto` is null))
            or
            ((not snapshotted_data.`ThumbNailPhoto` is null) and (source_data.`ThumbNailPhoto` is null))
        ) or snapshotted_data.`ThumbnailPhotoFileName` != source_data.`ThumbnailPhotoFileName`
        or
        (
            ((snapshotted_data.`ThumbnailPhotoFileName` is null) and not (source_data.`ThumbnailPhotoFileName` is null))
            or
            ((not snapshotted_data.`ThumbnailPhotoFileName` is null) and (source_data.`ThumbnailPhotoFileName` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`ProductID` != source_data.`ProductID`
        or
        (
            ((snapshotted_data.`ProductID` is null) and not (source_data.`ProductID` is null))
            or
            ((not snapshotted_data.`ProductID` is null) and (source_data.`ProductID` is null))
        ) or snapshotted_data.`Name` != source_data.`Name`
        or
        (
            ((snapshotted_data.`Name` is null) and not (source_data.`Name` is null))
            or
            ((not snapshotted_data.`Name` is null) and (source_data.`Name` is null))
        ) or snapshotted_data.`ProductNumber` != source_data.`ProductNumber`
        or
        (
            ((snapshotted_data.`ProductNumber` is null) and not (source_data.`ProductNumber` is null))
            or
            ((not snapshotted_data.`ProductNumber` is null) and (source_data.`ProductNumber` is null))
        ) or snapshotted_data.`Color` != source_data.`Color`
        or
        (
            ((snapshotted_data.`Color` is null) and not (source_data.`Color` is null))
            or
            ((not snapshotted_data.`Color` is null) and (source_data.`Color` is null))
        ) or snapshotted_data.`StandardCost` != source_data.`StandardCost`
        or
        (
            ((snapshotted_data.`StandardCost` is null) and not (source_data.`StandardCost` is null))
            or
            ((not snapshotted_data.`StandardCost` is null) and (source_data.`StandardCost` is null))
        ) or snapshotted_data.`ListPrice` != source_data.`ListPrice`
        or
        (
            ((snapshotted_data.`ListPrice` is null) and not (source_data.`ListPrice` is null))
            or
            ((not snapshotted_data.`ListPrice` is null) and (source_data.`ListPrice` is null))
        ) or snapshotted_data.`Size` != source_data.`Size`
        or
        (
            ((snapshotted_data.`Size` is null) and not (source_data.`Size` is null))
            or
            ((not snapshotted_data.`Size` is null) and (source_data.`Size` is null))
        ) or snapshotted_data.`Weight` != source_data.`Weight`
        or
        (
            ((snapshotted_data.`Weight` is null) and not (source_data.`Weight` is null))
            or
            ((not snapshotted_data.`Weight` is null) and (source_data.`Weight` is null))
        ) or snapshotted_data.`ProductCategoryID` != source_data.`ProductCategoryID`
        or
        (
            ((snapshotted_data.`ProductCategoryID` is null) and not (source_data.`ProductCategoryID` is null))
            or
            ((not snapshotted_data.`ProductCategoryID` is null) and (source_data.`ProductCategoryID` is null))
        ) or snapshotted_data.`ProductModelID` != source_data.`ProductModelID`
        or
        (
            ((snapshotted_data.`ProductModelID` is null) and not (source_data.`ProductModelID` is null))
            or
            ((not snapshotted_data.`ProductModelID` is null) and (source_data.`ProductModelID` is null))
        ) or snapshotted_data.`SellStartDate` != source_data.`SellStartDate`
        or
        (
            ((snapshotted_data.`SellStartDate` is null) and not (source_data.`SellStartDate` is null))
            or
            ((not snapshotted_data.`SellStartDate` is null) and (source_data.`SellStartDate` is null))
        ) or snapshotted_data.`SellEndDate` != source_data.`SellEndDate`
        or
        (
            ((snapshotted_data.`SellEndDate` is null) and not (source_data.`SellEndDate` is null))
            or
            ((not snapshotted_data.`SellEndDate` is null) and (source_data.`SellEndDate` is null))
        ) or snapshotted_data.`DiscontinuedDate` != source_data.`DiscontinuedDate`
        or
        (
            ((snapshotted_data.`DiscontinuedDate` is null) and not (source_data.`DiscontinuedDate` is null))
            or
            ((not snapshotted_data.`DiscontinuedDate` is null) and (source_data.`DiscontinuedDate` is null))
        ) or snapshotted_data.`ThumbNailPhoto` != source_data.`ThumbNailPhoto`
        or
        (
            ((snapshotted_data.`ThumbNailPhoto` is null) and not (source_data.`ThumbNailPhoto` is null))
            or
            ((not snapshotted_data.`ThumbNailPhoto` is null) and (source_data.`ThumbNailPhoto` is null))
        ) or snapshotted_data.`ThumbnailPhotoFileName` != source_data.`ThumbnailPhotoFileName`
        or
        (
            ((snapshotted_data.`ThumbnailPhotoFileName` is null) and not (source_data.`ThumbnailPhotoFileName` is null))
            or
            ((not snapshotted_data.`ThumbnailPhotoFileName` is null) and (source_data.`ThumbnailPhotoFileName` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

  
    
[0m23:33:29.497353 [debug] [Thread-1 (]: SQL status: OK in 0.360 seconds
[0m23:33:29.503161 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=8f7598dc-3b22-453b-8267-ccd426ffea66) - Closing
[0m23:33:29.591328 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:33:29.595139 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

    
DESCRIBE TABLE `product_snapshot__dbt_tmp`

  
[0m23:33:29.745204 [debug] [Thread-1 (]: SQL status: OK in 0.150 seconds
[0m23:33:29.752970 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=a0c5faed-26bf-4ff9-a052-77bbf5cb043f) - Closing
[0m23:33:29.829714 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:33:29.830710 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`product_snapshot`

  
[0m23:33:30.148618 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:33:30.150618 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=cc215dca-281f-4c3c-9945-dd9570e8489d) - Closing
[0m23:33:30.222923 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:33:30.222923 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

    
DESCRIBE TABLE `product_snapshot__dbt_tmp`

  
[0m23:33:30.372904 [debug] [Thread-1 (]: SQL status: OK in 0.150 seconds
[0m23:33:30.376930 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=557015a3-c356-47c8-99a7-440955198af7) - Closing
[0m23:33:30.443166 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:33:30.443166 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`product_snapshot`

  
[0m23:33:30.778577 [debug] [Thread-1 (]: SQL status: OK in 0.340 seconds
[0m23:33:30.778577 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=a3d1f3a9-d8b7-4914-a014-9a5307d4d059) - Closing
[0m23:33:30.867320 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:33:30.873483 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

    
DESCRIBE TABLE `product_snapshot__dbt_tmp`

  
[0m23:33:31.010634 [debug] [Thread-1 (]: SQL status: OK in 0.140 seconds
[0m23:33:31.013241 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=103dcd1d-d2c3-45a7-908e-eddcc3f16bd8) - Closing
[0m23:33:31.093285 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:33:31.093285 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */
select * from (
        
    
    with snapshot_query as (

        with product_snapshot as (
    SELECT
        ProductID,
        Name,
        ProductNumber,
        Color,
        StandardCost,
        ListPrice,
        Size,
        Weight,
        ProductCategoryID,
        ProductModelID,
        SellStartDate,
        SellEndDate,
        DiscontinuedDate,
        ThumbNailPhoto,
        ThumbnailPhotoFileName
    FROM `hive_metastore`.`saleslt`.`product`
)

select * from product_snapshot

    ),

    snapshotted_data as (

        select *, 
    
        ProductID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`product_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        ProductID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(ProductID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        ProductID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        ProductID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`ProductID` != source_data.`ProductID`
        or
        (
            ((snapshotted_data.`ProductID` is null) and not (source_data.`ProductID` is null))
            or
            ((not snapshotted_data.`ProductID` is null) and (source_data.`ProductID` is null))
        ) or snapshotted_data.`Name` != source_data.`Name`
        or
        (
            ((snapshotted_data.`Name` is null) and not (source_data.`Name` is null))
            or
            ((not snapshotted_data.`Name` is null) and (source_data.`Name` is null))
        ) or snapshotted_data.`ProductNumber` != source_data.`ProductNumber`
        or
        (
            ((snapshotted_data.`ProductNumber` is null) and not (source_data.`ProductNumber` is null))
            or
            ((not snapshotted_data.`ProductNumber` is null) and (source_data.`ProductNumber` is null))
        ) or snapshotted_data.`Color` != source_data.`Color`
        or
        (
            ((snapshotted_data.`Color` is null) and not (source_data.`Color` is null))
            or
            ((not snapshotted_data.`Color` is null) and (source_data.`Color` is null))
        ) or snapshotted_data.`StandardCost` != source_data.`StandardCost`
        or
        (
            ((snapshotted_data.`StandardCost` is null) and not (source_data.`StandardCost` is null))
            or
            ((not snapshotted_data.`StandardCost` is null) and (source_data.`StandardCost` is null))
        ) or snapshotted_data.`ListPrice` != source_data.`ListPrice`
        or
        (
            ((snapshotted_data.`ListPrice` is null) and not (source_data.`ListPrice` is null))
            or
            ((not snapshotted_data.`ListPrice` is null) and (source_data.`ListPrice` is null))
        ) or snapshotted_data.`Size` != source_data.`Size`
        or
        (
            ((snapshotted_data.`Size` is null) and not (source_data.`Size` is null))
            or
            ((not snapshotted_data.`Size` is null) and (source_data.`Size` is null))
        ) or snapshotted_data.`Weight` != source_data.`Weight`
        or
        (
            ((snapshotted_data.`Weight` is null) and not (source_data.`Weight` is null))
            or
            ((not snapshotted_data.`Weight` is null) and (source_data.`Weight` is null))
        ) or snapshotted_data.`ProductCategoryID` != source_data.`ProductCategoryID`
        or
        (
            ((snapshotted_data.`ProductCategoryID` is null) and not (source_data.`ProductCategoryID` is null))
            or
            ((not snapshotted_data.`ProductCategoryID` is null) and (source_data.`ProductCategoryID` is null))
        ) or snapshotted_data.`ProductModelID` != source_data.`ProductModelID`
        or
        (
            ((snapshotted_data.`ProductModelID` is null) and not (source_data.`ProductModelID` is null))
            or
            ((not snapshotted_data.`ProductModelID` is null) and (source_data.`ProductModelID` is null))
        ) or snapshotted_data.`SellStartDate` != source_data.`SellStartDate`
        or
        (
            ((snapshotted_data.`SellStartDate` is null) and not (source_data.`SellStartDate` is null))
            or
            ((not snapshotted_data.`SellStartDate` is null) and (source_data.`SellStartDate` is null))
        ) or snapshotted_data.`SellEndDate` != source_data.`SellEndDate`
        or
        (
            ((snapshotted_data.`SellEndDate` is null) and not (source_data.`SellEndDate` is null))
            or
            ((not snapshotted_data.`SellEndDate` is null) and (source_data.`SellEndDate` is null))
        ) or snapshotted_data.`DiscontinuedDate` != source_data.`DiscontinuedDate`
        or
        (
            ((snapshotted_data.`DiscontinuedDate` is null) and not (source_data.`DiscontinuedDate` is null))
            or
            ((not snapshotted_data.`DiscontinuedDate` is null) and (source_data.`DiscontinuedDate` is null))
        ) or snapshotted_data.`ThumbNailPhoto` != source_data.`ThumbNailPhoto`
        or
        (
            ((snapshotted_data.`ThumbNailPhoto` is null) and not (source_data.`ThumbNailPhoto` is null))
            or
            ((not snapshotted_data.`ThumbNailPhoto` is null) and (source_data.`ThumbNailPhoto` is null))
        ) or snapshotted_data.`ThumbnailPhotoFileName` != source_data.`ThumbnailPhotoFileName`
        or
        (
            ((snapshotted_data.`ThumbnailPhotoFileName` is null) and not (source_data.`ThumbnailPhotoFileName` is null))
            or
            ((not snapshotted_data.`ThumbnailPhotoFileName` is null) and (source_data.`ThumbnailPhotoFileName` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`ProductID` != source_data.`ProductID`
        or
        (
            ((snapshotted_data.`ProductID` is null) and not (source_data.`ProductID` is null))
            or
            ((not snapshotted_data.`ProductID` is null) and (source_data.`ProductID` is null))
        ) or snapshotted_data.`Name` != source_data.`Name`
        or
        (
            ((snapshotted_data.`Name` is null) and not (source_data.`Name` is null))
            or
            ((not snapshotted_data.`Name` is null) and (source_data.`Name` is null))
        ) or snapshotted_data.`ProductNumber` != source_data.`ProductNumber`
        or
        (
            ((snapshotted_data.`ProductNumber` is null) and not (source_data.`ProductNumber` is null))
            or
            ((not snapshotted_data.`ProductNumber` is null) and (source_data.`ProductNumber` is null))
        ) or snapshotted_data.`Color` != source_data.`Color`
        or
        (
            ((snapshotted_data.`Color` is null) and not (source_data.`Color` is null))
            or
            ((not snapshotted_data.`Color` is null) and (source_data.`Color` is null))
        ) or snapshotted_data.`StandardCost` != source_data.`StandardCost`
        or
        (
            ((snapshotted_data.`StandardCost` is null) and not (source_data.`StandardCost` is null))
            or
            ((not snapshotted_data.`StandardCost` is null) and (source_data.`StandardCost` is null))
        ) or snapshotted_data.`ListPrice` != source_data.`ListPrice`
        or
        (
            ((snapshotted_data.`ListPrice` is null) and not (source_data.`ListPrice` is null))
            or
            ((not snapshotted_data.`ListPrice` is null) and (source_data.`ListPrice` is null))
        ) or snapshotted_data.`Size` != source_data.`Size`
        or
        (
            ((snapshotted_data.`Size` is null) and not (source_data.`Size` is null))
            or
            ((not snapshotted_data.`Size` is null) and (source_data.`Size` is null))
        ) or snapshotted_data.`Weight` != source_data.`Weight`
        or
        (
            ((snapshotted_data.`Weight` is null) and not (source_data.`Weight` is null))
            or
            ((not snapshotted_data.`Weight` is null) and (source_data.`Weight` is null))
        ) or snapshotted_data.`ProductCategoryID` != source_data.`ProductCategoryID`
        or
        (
            ((snapshotted_data.`ProductCategoryID` is null) and not (source_data.`ProductCategoryID` is null))
            or
            ((not snapshotted_data.`ProductCategoryID` is null) and (source_data.`ProductCategoryID` is null))
        ) or snapshotted_data.`ProductModelID` != source_data.`ProductModelID`
        or
        (
            ((snapshotted_data.`ProductModelID` is null) and not (source_data.`ProductModelID` is null))
            or
            ((not snapshotted_data.`ProductModelID` is null) and (source_data.`ProductModelID` is null))
        ) or snapshotted_data.`SellStartDate` != source_data.`SellStartDate`
        or
        (
            ((snapshotted_data.`SellStartDate` is null) and not (source_data.`SellStartDate` is null))
            or
            ((not snapshotted_data.`SellStartDate` is null) and (source_data.`SellStartDate` is null))
        ) or snapshotted_data.`SellEndDate` != source_data.`SellEndDate`
        or
        (
            ((snapshotted_data.`SellEndDate` is null) and not (source_data.`SellEndDate` is null))
            or
            ((not snapshotted_data.`SellEndDate` is null) and (source_data.`SellEndDate` is null))
        ) or snapshotted_data.`DiscontinuedDate` != source_data.`DiscontinuedDate`
        or
        (
            ((snapshotted_data.`DiscontinuedDate` is null) and not (source_data.`DiscontinuedDate` is null))
            or
            ((not snapshotted_data.`DiscontinuedDate` is null) and (source_data.`DiscontinuedDate` is null))
        ) or snapshotted_data.`ThumbNailPhoto` != source_data.`ThumbNailPhoto`
        or
        (
            ((snapshotted_data.`ThumbNailPhoto` is null) and not (source_data.`ThumbNailPhoto` is null))
            or
            ((not snapshotted_data.`ThumbNailPhoto` is null) and (source_data.`ThumbNailPhoto` is null))
        ) or snapshotted_data.`ThumbnailPhotoFileName` != source_data.`ThumbnailPhotoFileName`
        or
        (
            ((snapshotted_data.`ThumbnailPhotoFileName` is null) and not (source_data.`ThumbnailPhotoFileName` is null))
            or
            ((not snapshotted_data.`ThumbnailPhotoFileName` is null) and (source_data.`ThumbnailPhotoFileName` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

    ) as __dbt_sbq
    where false
    limit 0

[0m23:33:31.433201 [debug] [Thread-1 (]: SQL status: OK in 0.340 seconds
[0m23:33:31.433201 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=00f54b32-1b21-4bf7-9929-5711c60196b5) - Closing
[0m23:33:31.525259 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:33:31.527334 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:33:31.646854 [debug] [Thread-1 (]: SQL status: OK in 0.120 seconds
[0m23:33:31.648899 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=9d175866-b9fd-4363-b105-732903983ab3) - Closing
[0m23:33:31.735427 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:33:31.735427 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:33:31.743190 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

      merge into `hive_metastore`.`snapshots`.`product_snapshot` as DBT_INTERNAL_DEST
    
      using `product_snapshot__dbt_tmp` as DBT_INTERNAL_SOURCE
    
    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id
    when matched
     
       and DBT_INTERNAL_DEST.dbt_valid_to is null
     
     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')
        then update
        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to

    when not matched
     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'
        then insert *
    ;

  
[0m23:33:35.560014 [debug] [Thread-1 (]: SQL status: OK in 3.810 seconds
[0m23:33:35.562087 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=33ef94b9-84bb-44ce-82f3-682d62ad2a45) - Closing
[0m23:33:35.643073 [debug] [Thread-1 (]: Applying DROP to: `product_snapshot__dbt_tmp`
[0m23:33:35.643073 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:33:35.643073 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */
DROP VIEW IF EXISTS `product_snapshot__dbt_tmp`
[0m23:33:35.769242 [debug] [Thread-1 (]: SQL status: OK in 0.130 seconds
[0m23:33:35.774462 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=f14d2f1d-6c5d-4837-95dc-849eb0f7e69a) - Closing
[0m23:33:35.853185 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '57b98072-50cc-4f82-afa8-6464540e8126', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002444FA8AC20>]}
[0m23:33:35.853185 [info ] [Thread-1 (]: 4 of 7 OK snapshotted snapshots.product_snapshot ............................... [[32mOK[0m in 8.60s]
[0m23:33:35.857173 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.product_snapshot
[0m23:33:35.857173 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.productmodel_snapshot
[0m23:33:35.857173 [info ] [Thread-1 (]: 5 of 7 START snapshot snapshots.productmodel_snapshot .......................... [RUN]
[0m23:33:35.864321 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.product_snapshot, now snapshot.medalion_dbt_spark.productmodel_snapshot)
[0m23:33:35.865230 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=932d71c7-61c7-444d-8907-1440155699de, name=snapshot.medalion_dbt_spark.productmodel_snapshot, idle-time=0.014051198959350586s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.product_snapshot
[0m23:33:35.865230 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.productmodel_snapshot
[0m23:33:35.877283 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.productmodel_snapshot
[0m23:33:35.887273 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:33:35.887273 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

      describe extended `hive_metastore`.`snapshots`.`productmodel_snapshot`
  
[0m23:33:36.456164 [debug] [Thread-1 (]: SQL status: OK in 0.570 seconds
[0m23:33:36.458158 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=ec9ab715-7ca5-43db-aaac-825f846e0ed2) - Closing
[0m23:33:36.527365 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:33:36.528364 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */
select * from (
        



with product_snapshot as (
    SELECT
        ProductModelID,
        Name,
        CatalogDescription
    FROM `hive_metastore`.`saleslt`.`productmodel`
)

select * from product_snapshot

    ) as __dbt_sbq
    where false
    limit 0

    
[0m23:33:36.809191 [debug] [Thread-1 (]: SQL status: OK in 0.280 seconds
[0m23:33:36.811647 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=2becb6b6-c09d-4676-af58-201c05be8550) - Closing
[0m23:33:36.885933 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:33:36.885933 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`productmodel_snapshot`

  
[0m23:33:37.223683 [debug] [Thread-1 (]: SQL status: OK in 0.340 seconds
[0m23:33:37.225911 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=64d3400e-9a1d-4a02-988d-97091d19ae27) - Closing
[0m23:33:37.301174 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:33:37.302171 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`productmodel_snapshot`

  
[0m23:33:37.640284 [debug] [Thread-1 (]: SQL status: OK in 0.340 seconds
[0m23:33:37.643225 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=8e3a1484-c28d-4969-b505-a405e3b37f45) - Closing
[0m23:33:37.716206 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:33:37.717103 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

        
  
    create or replace temporary view `productmodel_snapshot__dbt_tmp` as
      
    
    with snapshot_query as (

        with product_snapshot as (
    SELECT
        ProductModelID,
        Name,
        CatalogDescription
    FROM `hive_metastore`.`saleslt`.`productmodel`
)

select * from product_snapshot

    ),

    snapshotted_data as (

        select *, 
    
        ProductModelID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`productmodel_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        ProductModelID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(ProductModelID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        ProductModelID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        ProductModelID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`ProductModelID` != source_data.`ProductModelID`
        or
        (
            ((snapshotted_data.`ProductModelID` is null) and not (source_data.`ProductModelID` is null))
            or
            ((not snapshotted_data.`ProductModelID` is null) and (source_data.`ProductModelID` is null))
        ) or snapshotted_data.`Name` != source_data.`Name`
        or
        (
            ((snapshotted_data.`Name` is null) and not (source_data.`Name` is null))
            or
            ((not snapshotted_data.`Name` is null) and (source_data.`Name` is null))
        ) or snapshotted_data.`CatalogDescription` != source_data.`CatalogDescription`
        or
        (
            ((snapshotted_data.`CatalogDescription` is null) and not (source_data.`CatalogDescription` is null))
            or
            ((not snapshotted_data.`CatalogDescription` is null) and (source_data.`CatalogDescription` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`ProductModelID` != source_data.`ProductModelID`
        or
        (
            ((snapshotted_data.`ProductModelID` is null) and not (source_data.`ProductModelID` is null))
            or
            ((not snapshotted_data.`ProductModelID` is null) and (source_data.`ProductModelID` is null))
        ) or snapshotted_data.`Name` != source_data.`Name`
        or
        (
            ((snapshotted_data.`Name` is null) and not (source_data.`Name` is null))
            or
            ((not snapshotted_data.`Name` is null) and (source_data.`Name` is null))
        ) or snapshotted_data.`CatalogDescription` != source_data.`CatalogDescription`
        or
        (
            ((snapshotted_data.`CatalogDescription` is null) and not (source_data.`CatalogDescription` is null))
            or
            ((not snapshotted_data.`CatalogDescription` is null) and (source_data.`CatalogDescription` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

  
    
[0m23:33:38.042136 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:33:38.043289 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=28dd85d2-3619-462c-b4c6-ee3a46bc19bb) - Closing
[0m23:33:38.119327 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:33:38.120341 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

    
DESCRIBE TABLE `productmodel_snapshot__dbt_tmp`

  
[0m23:33:38.270624 [debug] [Thread-1 (]: SQL status: OK in 0.150 seconds
[0m23:33:38.274159 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=14ccab89-10b7-4ff6-aa2c-6b794b10be2d) - Closing
[0m23:33:38.344390 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:33:38.344390 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`productmodel_snapshot`

  
[0m23:33:38.663061 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:33:38.663061 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=37a7699e-9216-47bb-825a-6c5098e605f4) - Closing
[0m23:33:38.743224 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:33:38.743224 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

    
DESCRIBE TABLE `productmodel_snapshot__dbt_tmp`

  
[0m23:33:38.873315 [debug] [Thread-1 (]: SQL status: OK in 0.130 seconds
[0m23:33:38.873315 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=cfd0e82e-5f44-47f3-82ea-ef056f040405) - Closing
[0m23:33:38.953435 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:33:38.953435 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`productmodel_snapshot`

  
[0m23:33:39.273125 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:33:39.273125 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=c25ebf31-5961-4661-976f-a0768478c859) - Closing
[0m23:33:39.354648 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:33:39.354648 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

    
DESCRIBE TABLE `productmodel_snapshot__dbt_tmp`

  
[0m23:33:39.510566 [debug] [Thread-1 (]: SQL status: OK in 0.150 seconds
[0m23:33:39.513331 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=fe1b3a1f-5a13-4aeb-bdfa-780ffb976ede) - Closing
[0m23:33:39.588214 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:33:39.588214 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */
select * from (
        
    
    with snapshot_query as (

        with product_snapshot as (
    SELECT
        ProductModelID,
        Name,
        CatalogDescription
    FROM `hive_metastore`.`saleslt`.`productmodel`
)

select * from product_snapshot

    ),

    snapshotted_data as (

        select *, 
    
        ProductModelID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`productmodel_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        ProductModelID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(ProductModelID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        ProductModelID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        ProductModelID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`ProductModelID` != source_data.`ProductModelID`
        or
        (
            ((snapshotted_data.`ProductModelID` is null) and not (source_data.`ProductModelID` is null))
            or
            ((not snapshotted_data.`ProductModelID` is null) and (source_data.`ProductModelID` is null))
        ) or snapshotted_data.`Name` != source_data.`Name`
        or
        (
            ((snapshotted_data.`Name` is null) and not (source_data.`Name` is null))
            or
            ((not snapshotted_data.`Name` is null) and (source_data.`Name` is null))
        ) or snapshotted_data.`CatalogDescription` != source_data.`CatalogDescription`
        or
        (
            ((snapshotted_data.`CatalogDescription` is null) and not (source_data.`CatalogDescription` is null))
            or
            ((not snapshotted_data.`CatalogDescription` is null) and (source_data.`CatalogDescription` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`ProductModelID` != source_data.`ProductModelID`
        or
        (
            ((snapshotted_data.`ProductModelID` is null) and not (source_data.`ProductModelID` is null))
            or
            ((not snapshotted_data.`ProductModelID` is null) and (source_data.`ProductModelID` is null))
        ) or snapshotted_data.`Name` != source_data.`Name`
        or
        (
            ((snapshotted_data.`Name` is null) and not (source_data.`Name` is null))
            or
            ((not snapshotted_data.`Name` is null) and (source_data.`Name` is null))
        ) or snapshotted_data.`CatalogDescription` != source_data.`CatalogDescription`
        or
        (
            ((snapshotted_data.`CatalogDescription` is null) and not (source_data.`CatalogDescription` is null))
            or
            ((not snapshotted_data.`CatalogDescription` is null) and (source_data.`CatalogDescription` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

    ) as __dbt_sbq
    where false
    limit 0

[0m23:33:39.913065 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:33:39.922958 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=f68f1841-52ca-43c1-be0d-eaf6a9e8b25b) - Closing
[0m23:33:39.992987 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:33:39.992987 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:33:40.122783 [debug] [Thread-1 (]: SQL status: OK in 0.130 seconds
[0m23:33:40.128087 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=b76e224c-4c4f-4fe1-8851-7d14cb6d0d4a) - Closing
[0m23:33:40.193122 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:33:40.193122 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:33:40.193122 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

      merge into `hive_metastore`.`snapshots`.`productmodel_snapshot` as DBT_INTERNAL_DEST
    
      using `productmodel_snapshot__dbt_tmp` as DBT_INTERNAL_SOURCE
    
    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id
    when matched
     
       and DBT_INTERNAL_DEST.dbt_valid_to is null
     
     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')
        then update
        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to

    when not matched
     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'
        then insert *
    ;

  
[0m23:33:44.737402 [debug] [Thread-1 (]: SQL status: OK in 4.540 seconds
[0m23:33:44.747633 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=88903993-b861-4039-8302-8012035ae904) - Closing
[0m23:33:44.833048 [debug] [Thread-1 (]: Applying DROP to: `productmodel_snapshot__dbt_tmp`
[0m23:33:44.837605 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:33:44.837605 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */
DROP VIEW IF EXISTS `productmodel_snapshot__dbt_tmp`
[0m23:33:44.972220 [debug] [Thread-1 (]: SQL status: OK in 0.130 seconds
[0m23:33:44.973226 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=e8d68834-7482-47de-84dd-91930f6a8417) - Closing
[0m23:33:45.063185 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '57b98072-50cc-4f82-afa8-6464540e8126', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002444FE55B10>]}
[0m23:33:45.070266 [info ] [Thread-1 (]: 5 of 7 OK snapshotted snapshots.productmodel_snapshot .......................... [[32mOK[0m in 9.20s]
[0m23:33:45.075993 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.productmodel_snapshot
[0m23:33:45.078561 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m23:33:45.079925 [info ] [Thread-1 (]: 6 of 7 START snapshot snapshots.salesorderdetail_snapshot ...................... [RUN]
[0m23:33:45.083170 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.productmodel_snapshot, now snapshot.medalion_dbt_spark.salesorderdetail_snapshot)
[0m23:33:45.083170 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=932d71c7-61c7-444d-8907-1440155699de, name=snapshot.medalion_dbt_spark.salesorderdetail_snapshot, idle-time=0.019985675811767578s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.productmodel_snapshot
[0m23:33:45.084678 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m23:33:45.089989 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m23:33:45.096797 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:33:45.098108 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

      describe extended `hive_metastore`.`snapshots`.`salesorderdetail_snapshot`
  
[0m23:33:45.733144 [debug] [Thread-1 (]: SQL status: OK in 0.640 seconds
[0m23:33:45.743128 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=b60f5aad-e4d3-40be-9962-0a062d9263f9) - Closing
[0m23:33:45.823047 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:33:45.823047 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */
select * from (
        



with salesorderdetail_snapshot as (
    SELECT
        SalesOrderID,
        SalesOrderDetailID,
        OrderQty,
        ProductID,
        UnitPrice,
        UnitPriceDiscount,
        LineTotal
    FROM `hive_metastore`.`saleslt`.`salesorderdetail`
)

select * from salesorderdetail_snapshot

    ) as __dbt_sbq
    where false
    limit 0

    
[0m23:33:46.084971 [debug] [Thread-1 (]: SQL status: OK in 0.260 seconds
[0m23:33:46.084971 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=ffe063c0-adf2-43eb-a320-e04ef563d6de) - Closing
[0m23:33:46.173293 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:33:46.173293 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`salesorderdetail_snapshot`

  
[0m23:33:46.535732 [debug] [Thread-1 (]: SQL status: OK in 0.360 seconds
[0m23:33:46.544996 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=03f813e3-03f9-4b7b-9be2-af17dada6447) - Closing
[0m23:33:46.613399 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:33:46.613399 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`salesorderdetail_snapshot`

  
[0m23:33:46.947420 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:33:46.947420 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=012e48f8-995c-414c-bca3-730cc007d2c3) - Closing
[0m23:33:47.034122 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:33:47.035105 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

        
  
    create or replace temporary view `salesorderdetail_snapshot__dbt_tmp` as
      
    
    with snapshot_query as (

        with salesorderdetail_snapshot as (
    SELECT
        SalesOrderID,
        SalesOrderDetailID,
        OrderQty,
        ProductID,
        UnitPrice,
        UnitPriceDiscount,
        LineTotal
    FROM `hive_metastore`.`saleslt`.`salesorderdetail`
)

select * from salesorderdetail_snapshot

    ),

    snapshotted_data as (

        select *, 
    
        SalesOrderDetailID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`salesorderdetail_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        SalesOrderDetailID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(SalesOrderDetailID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        SalesOrderDetailID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        SalesOrderDetailID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`SalesOrderID` != source_data.`SalesOrderID`
        or
        (
            ((snapshotted_data.`SalesOrderID` is null) and not (source_data.`SalesOrderID` is null))
            or
            ((not snapshotted_data.`SalesOrderID` is null) and (source_data.`SalesOrderID` is null))
        ) or snapshotted_data.`SalesOrderDetailID` != source_data.`SalesOrderDetailID`
        or
        (
            ((snapshotted_data.`SalesOrderDetailID` is null) and not (source_data.`SalesOrderDetailID` is null))
            or
            ((not snapshotted_data.`SalesOrderDetailID` is null) and (source_data.`SalesOrderDetailID` is null))
        ) or snapshotted_data.`OrderQty` != source_data.`OrderQty`
        or
        (
            ((snapshotted_data.`OrderQty` is null) and not (source_data.`OrderQty` is null))
            or
            ((not snapshotted_data.`OrderQty` is null) and (source_data.`OrderQty` is null))
        ) or snapshotted_data.`ProductID` != source_data.`ProductID`
        or
        (
            ((snapshotted_data.`ProductID` is null) and not (source_data.`ProductID` is null))
            or
            ((not snapshotted_data.`ProductID` is null) and (source_data.`ProductID` is null))
        ) or snapshotted_data.`UnitPrice` != source_data.`UnitPrice`
        or
        (
            ((snapshotted_data.`UnitPrice` is null) and not (source_data.`UnitPrice` is null))
            or
            ((not snapshotted_data.`UnitPrice` is null) and (source_data.`UnitPrice` is null))
        ) or snapshotted_data.`UnitPriceDiscount` != source_data.`UnitPriceDiscount`
        or
        (
            ((snapshotted_data.`UnitPriceDiscount` is null) and not (source_data.`UnitPriceDiscount` is null))
            or
            ((not snapshotted_data.`UnitPriceDiscount` is null) and (source_data.`UnitPriceDiscount` is null))
        ) or snapshotted_data.`LineTotal` != source_data.`LineTotal`
        or
        (
            ((snapshotted_data.`LineTotal` is null) and not (source_data.`LineTotal` is null))
            or
            ((not snapshotted_data.`LineTotal` is null) and (source_data.`LineTotal` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`SalesOrderID` != source_data.`SalesOrderID`
        or
        (
            ((snapshotted_data.`SalesOrderID` is null) and not (source_data.`SalesOrderID` is null))
            or
            ((not snapshotted_data.`SalesOrderID` is null) and (source_data.`SalesOrderID` is null))
        ) or snapshotted_data.`SalesOrderDetailID` != source_data.`SalesOrderDetailID`
        or
        (
            ((snapshotted_data.`SalesOrderDetailID` is null) and not (source_data.`SalesOrderDetailID` is null))
            or
            ((not snapshotted_data.`SalesOrderDetailID` is null) and (source_data.`SalesOrderDetailID` is null))
        ) or snapshotted_data.`OrderQty` != source_data.`OrderQty`
        or
        (
            ((snapshotted_data.`OrderQty` is null) and not (source_data.`OrderQty` is null))
            or
            ((not snapshotted_data.`OrderQty` is null) and (source_data.`OrderQty` is null))
        ) or snapshotted_data.`ProductID` != source_data.`ProductID`
        or
        (
            ((snapshotted_data.`ProductID` is null) and not (source_data.`ProductID` is null))
            or
            ((not snapshotted_data.`ProductID` is null) and (source_data.`ProductID` is null))
        ) or snapshotted_data.`UnitPrice` != source_data.`UnitPrice`
        or
        (
            ((snapshotted_data.`UnitPrice` is null) and not (source_data.`UnitPrice` is null))
            or
            ((not snapshotted_data.`UnitPrice` is null) and (source_data.`UnitPrice` is null))
        ) or snapshotted_data.`UnitPriceDiscount` != source_data.`UnitPriceDiscount`
        or
        (
            ((snapshotted_data.`UnitPriceDiscount` is null) and not (source_data.`UnitPriceDiscount` is null))
            or
            ((not snapshotted_data.`UnitPriceDiscount` is null) and (source_data.`UnitPriceDiscount` is null))
        ) or snapshotted_data.`LineTotal` != source_data.`LineTotal`
        or
        (
            ((snapshotted_data.`LineTotal` is null) and not (source_data.`LineTotal` is null))
            or
            ((not snapshotted_data.`LineTotal` is null) and (source_data.`LineTotal` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

  
    
[0m23:33:47.359525 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:33:47.359525 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=07fc50a8-d621-4eaa-bbb1-4c4dfa4328a5) - Closing
[0m23:33:47.443002 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:33:47.445383 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

    
DESCRIBE TABLE `salesorderdetail_snapshot__dbt_tmp`

  
[0m23:33:47.607172 [debug] [Thread-1 (]: SQL status: OK in 0.160 seconds
[0m23:33:47.613149 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=4f6843d6-2e09-4a2b-a487-4899eb9e9e57) - Closing
[0m23:33:47.705607 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:33:47.709676 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`salesorderdetail_snapshot`

  
[0m23:33:48.057945 [debug] [Thread-1 (]: SQL status: OK in 0.350 seconds
[0m23:33:48.067630 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=3bce3f13-535d-42d6-9316-afeba3d46c98) - Closing
[0m23:33:48.155087 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:33:48.157171 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

    
DESCRIBE TABLE `salesorderdetail_snapshot__dbt_tmp`

  
[0m23:33:48.302076 [debug] [Thread-1 (]: SQL status: OK in 0.140 seconds
[0m23:33:48.304544 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=20da0bb8-cba0-4a06-baca-2b0d2155e7e6) - Closing
[0m23:33:48.377358 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:33:48.384272 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`salesorderdetail_snapshot`

  
[0m23:33:48.725540 [debug] [Thread-1 (]: SQL status: OK in 0.340 seconds
[0m23:33:48.735048 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=3f74e46e-06aa-4a9e-a438-ab9731dcab96) - Closing
[0m23:33:48.827413 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:33:48.827413 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

    
DESCRIBE TABLE `salesorderdetail_snapshot__dbt_tmp`

  
[0m23:33:48.973226 [debug] [Thread-1 (]: SQL status: OK in 0.150 seconds
[0m23:33:48.980658 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=80d4c8db-abf1-4641-bce2-f7a1de86889c) - Closing
[0m23:33:49.063163 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:33:49.074381 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */
select * from (
        
    
    with snapshot_query as (

        with salesorderdetail_snapshot as (
    SELECT
        SalesOrderID,
        SalesOrderDetailID,
        OrderQty,
        ProductID,
        UnitPrice,
        UnitPriceDiscount,
        LineTotal
    FROM `hive_metastore`.`saleslt`.`salesorderdetail`
)

select * from salesorderdetail_snapshot

    ),

    snapshotted_data as (

        select *, 
    
        SalesOrderDetailID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`salesorderdetail_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        SalesOrderDetailID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(SalesOrderDetailID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        SalesOrderDetailID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        SalesOrderDetailID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`SalesOrderID` != source_data.`SalesOrderID`
        or
        (
            ((snapshotted_data.`SalesOrderID` is null) and not (source_data.`SalesOrderID` is null))
            or
            ((not snapshotted_data.`SalesOrderID` is null) and (source_data.`SalesOrderID` is null))
        ) or snapshotted_data.`SalesOrderDetailID` != source_data.`SalesOrderDetailID`
        or
        (
            ((snapshotted_data.`SalesOrderDetailID` is null) and not (source_data.`SalesOrderDetailID` is null))
            or
            ((not snapshotted_data.`SalesOrderDetailID` is null) and (source_data.`SalesOrderDetailID` is null))
        ) or snapshotted_data.`OrderQty` != source_data.`OrderQty`
        or
        (
            ((snapshotted_data.`OrderQty` is null) and not (source_data.`OrderQty` is null))
            or
            ((not snapshotted_data.`OrderQty` is null) and (source_data.`OrderQty` is null))
        ) or snapshotted_data.`ProductID` != source_data.`ProductID`
        or
        (
            ((snapshotted_data.`ProductID` is null) and not (source_data.`ProductID` is null))
            or
            ((not snapshotted_data.`ProductID` is null) and (source_data.`ProductID` is null))
        ) or snapshotted_data.`UnitPrice` != source_data.`UnitPrice`
        or
        (
            ((snapshotted_data.`UnitPrice` is null) and not (source_data.`UnitPrice` is null))
            or
            ((not snapshotted_data.`UnitPrice` is null) and (source_data.`UnitPrice` is null))
        ) or snapshotted_data.`UnitPriceDiscount` != source_data.`UnitPriceDiscount`
        or
        (
            ((snapshotted_data.`UnitPriceDiscount` is null) and not (source_data.`UnitPriceDiscount` is null))
            or
            ((not snapshotted_data.`UnitPriceDiscount` is null) and (source_data.`UnitPriceDiscount` is null))
        ) or snapshotted_data.`LineTotal` != source_data.`LineTotal`
        or
        (
            ((snapshotted_data.`LineTotal` is null) and not (source_data.`LineTotal` is null))
            or
            ((not snapshotted_data.`LineTotal` is null) and (source_data.`LineTotal` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`SalesOrderID` != source_data.`SalesOrderID`
        or
        (
            ((snapshotted_data.`SalesOrderID` is null) and not (source_data.`SalesOrderID` is null))
            or
            ((not snapshotted_data.`SalesOrderID` is null) and (source_data.`SalesOrderID` is null))
        ) or snapshotted_data.`SalesOrderDetailID` != source_data.`SalesOrderDetailID`
        or
        (
            ((snapshotted_data.`SalesOrderDetailID` is null) and not (source_data.`SalesOrderDetailID` is null))
            or
            ((not snapshotted_data.`SalesOrderDetailID` is null) and (source_data.`SalesOrderDetailID` is null))
        ) or snapshotted_data.`OrderQty` != source_data.`OrderQty`
        or
        (
            ((snapshotted_data.`OrderQty` is null) and not (source_data.`OrderQty` is null))
            or
            ((not snapshotted_data.`OrderQty` is null) and (source_data.`OrderQty` is null))
        ) or snapshotted_data.`ProductID` != source_data.`ProductID`
        or
        (
            ((snapshotted_data.`ProductID` is null) and not (source_data.`ProductID` is null))
            or
            ((not snapshotted_data.`ProductID` is null) and (source_data.`ProductID` is null))
        ) or snapshotted_data.`UnitPrice` != source_data.`UnitPrice`
        or
        (
            ((snapshotted_data.`UnitPrice` is null) and not (source_data.`UnitPrice` is null))
            or
            ((not snapshotted_data.`UnitPrice` is null) and (source_data.`UnitPrice` is null))
        ) or snapshotted_data.`UnitPriceDiscount` != source_data.`UnitPriceDiscount`
        or
        (
            ((snapshotted_data.`UnitPriceDiscount` is null) and not (source_data.`UnitPriceDiscount` is null))
            or
            ((not snapshotted_data.`UnitPriceDiscount` is null) and (source_data.`UnitPriceDiscount` is null))
        ) or snapshotted_data.`LineTotal` != source_data.`LineTotal`
        or
        (
            ((snapshotted_data.`LineTotal` is null) and not (source_data.`LineTotal` is null))
            or
            ((not snapshotted_data.`LineTotal` is null) and (source_data.`LineTotal` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

    ) as __dbt_sbq
    where false
    limit 0

[0m23:33:49.393293 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:33:49.393293 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=9528134a-69f8-4ef2-a397-c3664a91da22) - Closing
[0m23:33:49.493167 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:33:49.495799 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:33:49.616397 [debug] [Thread-1 (]: SQL status: OK in 0.120 seconds
[0m23:33:49.616397 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=93fc3ca1-68c8-4c38-8547-e3b45415b743) - Closing
[0m23:33:49.696586 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:33:49.696586 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:33:49.696586 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

      merge into `hive_metastore`.`snapshots`.`salesorderdetail_snapshot` as DBT_INTERNAL_DEST
    
      using `salesorderdetail_snapshot__dbt_tmp` as DBT_INTERNAL_SOURCE
    
    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id
    when matched
     
       and DBT_INTERNAL_DEST.dbt_valid_to is null
     
     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')
        then update
        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to

    when not matched
     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'
        then insert *
    ;

  
[0m23:33:54.457571 [debug] [Thread-1 (]: SQL status: OK in 4.760 seconds
[0m23:33:54.457571 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=cf349c1d-b429-423c-8259-12f12fd8e11f) - Closing
[0m23:33:54.582228 [debug] [Thread-1 (]: Applying DROP to: `salesorderdetail_snapshot__dbt_tmp`
[0m23:33:54.583897 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:33:54.583897 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */
DROP VIEW IF EXISTS `salesorderdetail_snapshot__dbt_tmp`
[0m23:33:54.745209 [debug] [Thread-1 (]: SQL status: OK in 0.160 seconds
[0m23:33:54.753232 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=29dc56e8-af36-4bca-9eaa-3d65fe996441) - Closing
[0m23:33:54.823308 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '57b98072-50cc-4f82-afa8-6464540e8126', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002444FCBB130>]}
[0m23:33:54.823308 [info ] [Thread-1 (]: 6 of 7 OK snapshotted snapshots.salesorderdetail_snapshot ...................... [[32mOK[0m in 9.74s]
[0m23:33:54.823308 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m23:33:54.823308 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.salesorderheader_snapshot
[0m23:33:54.823308 [info ] [Thread-1 (]: 7 of 7 START snapshot snapshots.salesorderheader_snapshot ...................... [RUN]
[0m23:33:54.830237 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.salesorderdetail_snapshot, now snapshot.medalion_dbt_spark.salesorderheader_snapshot)
[0m23:33:54.831218 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=932d71c7-61c7-444d-8907-1440155699de, name=snapshot.medalion_dbt_spark.salesorderheader_snapshot, idle-time=0.00791025161743164s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m23:33:54.832226 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.salesorderheader_snapshot
[0m23:33:54.836741 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.salesorderheader_snapshot
[0m23:33:54.843134 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:33:54.843134 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

      describe extended `hive_metastore`.`snapshots`.`salesorderheader_snapshot`
  
[0m23:33:55.434307 [debug] [Thread-1 (]: SQL status: OK in 0.590 seconds
[0m23:33:55.437692 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=a20c6016-9f16-4f92-a6a8-1ae996cf96ea) - Closing
[0m23:33:55.520375 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:33:55.521385 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */
select * from (
        



with salesorderheader_snapshot as (
    SELECT
        SalesOrderID,
        RevisionNumber,
        OrderDate,
        DueDate,
        ShipDate,
        Status,
        OnlineOrderFlag,
        SalesOrderNumber,
        PurchaseOrderNumber,
        AccountNumber,
        CustomerID,
        ShipToAddressID,
        BillToAddressID,
        ShipMethod,
        CreditCardApprovalCode,
        SubTotal,
        TaxAmt,
        Freight,
        TotalDue,
        Comment
    FROM `hive_metastore`.`saleslt`.`salesorderheader`
)

select * from salesorderheader_snapshot

    ) as __dbt_sbq
    where false
    limit 0

    
[0m23:33:55.811836 [debug] [Thread-1 (]: SQL status: OK in 0.290 seconds
[0m23:33:55.815708 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=70b7ddbe-748d-48ad-87f8-9a2fa4e33511) - Closing
[0m23:33:55.893095 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:33:55.894106 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`salesorderheader_snapshot`

  
[0m23:33:56.243303 [debug] [Thread-1 (]: SQL status: OK in 0.350 seconds
[0m23:33:56.247757 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=7a7b4fad-812f-4bf6-92b9-ce396fe8f589) - Closing
[0m23:33:56.323915 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:33:56.324850 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`salesorderheader_snapshot`

  
[0m23:33:56.637578 [debug] [Thread-1 (]: SQL status: OK in 0.310 seconds
[0m23:33:56.639584 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=73a1ea70-57a7-411a-9e0c-503ee5c347d9) - Closing
[0m23:33:56.713162 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:33:56.713162 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

        
  
    create or replace temporary view `salesorderheader_snapshot__dbt_tmp` as
      
    
    with snapshot_query as (

        with salesorderheader_snapshot as (
    SELECT
        SalesOrderID,
        RevisionNumber,
        OrderDate,
        DueDate,
        ShipDate,
        Status,
        OnlineOrderFlag,
        SalesOrderNumber,
        PurchaseOrderNumber,
        AccountNumber,
        CustomerID,
        ShipToAddressID,
        BillToAddressID,
        ShipMethod,
        CreditCardApprovalCode,
        SubTotal,
        TaxAmt,
        Freight,
        TotalDue,
        Comment
    FROM `hive_metastore`.`saleslt`.`salesorderheader`
)

select * from salesorderheader_snapshot

    ),

    snapshotted_data as (

        select *, 
    
        SalesOrderID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`salesorderheader_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        SalesOrderID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(SalesOrderID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        SalesOrderID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        SalesOrderID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`SalesOrderID` != source_data.`SalesOrderID`
        or
        (
            ((snapshotted_data.`SalesOrderID` is null) and not (source_data.`SalesOrderID` is null))
            or
            ((not snapshotted_data.`SalesOrderID` is null) and (source_data.`SalesOrderID` is null))
        ) or snapshotted_data.`RevisionNumber` != source_data.`RevisionNumber`
        or
        (
            ((snapshotted_data.`RevisionNumber` is null) and not (source_data.`RevisionNumber` is null))
            or
            ((not snapshotted_data.`RevisionNumber` is null) and (source_data.`RevisionNumber` is null))
        ) or snapshotted_data.`OrderDate` != source_data.`OrderDate`
        or
        (
            ((snapshotted_data.`OrderDate` is null) and not (source_data.`OrderDate` is null))
            or
            ((not snapshotted_data.`OrderDate` is null) and (source_data.`OrderDate` is null))
        ) or snapshotted_data.`DueDate` != source_data.`DueDate`
        or
        (
            ((snapshotted_data.`DueDate` is null) and not (source_data.`DueDate` is null))
            or
            ((not snapshotted_data.`DueDate` is null) and (source_data.`DueDate` is null))
        ) or snapshotted_data.`ShipDate` != source_data.`ShipDate`
        or
        (
            ((snapshotted_data.`ShipDate` is null) and not (source_data.`ShipDate` is null))
            or
            ((not snapshotted_data.`ShipDate` is null) and (source_data.`ShipDate` is null))
        ) or snapshotted_data.`Status` != source_data.`Status`
        or
        (
            ((snapshotted_data.`Status` is null) and not (source_data.`Status` is null))
            or
            ((not snapshotted_data.`Status` is null) and (source_data.`Status` is null))
        ) or snapshotted_data.`OnlineOrderFlag` != source_data.`OnlineOrderFlag`
        or
        (
            ((snapshotted_data.`OnlineOrderFlag` is null) and not (source_data.`OnlineOrderFlag` is null))
            or
            ((not snapshotted_data.`OnlineOrderFlag` is null) and (source_data.`OnlineOrderFlag` is null))
        ) or snapshotted_data.`SalesOrderNumber` != source_data.`SalesOrderNumber`
        or
        (
            ((snapshotted_data.`SalesOrderNumber` is null) and not (source_data.`SalesOrderNumber` is null))
            or
            ((not snapshotted_data.`SalesOrderNumber` is null) and (source_data.`SalesOrderNumber` is null))
        ) or snapshotted_data.`PurchaseOrderNumber` != source_data.`PurchaseOrderNumber`
        or
        (
            ((snapshotted_data.`PurchaseOrderNumber` is null) and not (source_data.`PurchaseOrderNumber` is null))
            or
            ((not snapshotted_data.`PurchaseOrderNumber` is null) and (source_data.`PurchaseOrderNumber` is null))
        ) or snapshotted_data.`AccountNumber` != source_data.`AccountNumber`
        or
        (
            ((snapshotted_data.`AccountNumber` is null) and not (source_data.`AccountNumber` is null))
            or
            ((not snapshotted_data.`AccountNumber` is null) and (source_data.`AccountNumber` is null))
        ) or snapshotted_data.`CustomerID` != source_data.`CustomerID`
        or
        (
            ((snapshotted_data.`CustomerID` is null) and not (source_data.`CustomerID` is null))
            or
            ((not snapshotted_data.`CustomerID` is null) and (source_data.`CustomerID` is null))
        ) or snapshotted_data.`ShipToAddressID` != source_data.`ShipToAddressID`
        or
        (
            ((snapshotted_data.`ShipToAddressID` is null) and not (source_data.`ShipToAddressID` is null))
            or
            ((not snapshotted_data.`ShipToAddressID` is null) and (source_data.`ShipToAddressID` is null))
        ) or snapshotted_data.`BillToAddressID` != source_data.`BillToAddressID`
        or
        (
            ((snapshotted_data.`BillToAddressID` is null) and not (source_data.`BillToAddressID` is null))
            or
            ((not snapshotted_data.`BillToAddressID` is null) and (source_data.`BillToAddressID` is null))
        ) or snapshotted_data.`ShipMethod` != source_data.`ShipMethod`
        or
        (
            ((snapshotted_data.`ShipMethod` is null) and not (source_data.`ShipMethod` is null))
            or
            ((not snapshotted_data.`ShipMethod` is null) and (source_data.`ShipMethod` is null))
        ) or snapshotted_data.`CreditCardApprovalCode` != source_data.`CreditCardApprovalCode`
        or
        (
            ((snapshotted_data.`CreditCardApprovalCode` is null) and not (source_data.`CreditCardApprovalCode` is null))
            or
            ((not snapshotted_data.`CreditCardApprovalCode` is null) and (source_data.`CreditCardApprovalCode` is null))
        ) or snapshotted_data.`SubTotal` != source_data.`SubTotal`
        or
        (
            ((snapshotted_data.`SubTotal` is null) and not (source_data.`SubTotal` is null))
            or
            ((not snapshotted_data.`SubTotal` is null) and (source_data.`SubTotal` is null))
        ) or snapshotted_data.`TaxAmt` != source_data.`TaxAmt`
        or
        (
            ((snapshotted_data.`TaxAmt` is null) and not (source_data.`TaxAmt` is null))
            or
            ((not snapshotted_data.`TaxAmt` is null) and (source_data.`TaxAmt` is null))
        ) or snapshotted_data.`Freight` != source_data.`Freight`
        or
        (
            ((snapshotted_data.`Freight` is null) and not (source_data.`Freight` is null))
            or
            ((not snapshotted_data.`Freight` is null) and (source_data.`Freight` is null))
        ) or snapshotted_data.`TotalDue` != source_data.`TotalDue`
        or
        (
            ((snapshotted_data.`TotalDue` is null) and not (source_data.`TotalDue` is null))
            or
            ((not snapshotted_data.`TotalDue` is null) and (source_data.`TotalDue` is null))
        ) or snapshotted_data.`Comment` != source_data.`Comment`
        or
        (
            ((snapshotted_data.`Comment` is null) and not (source_data.`Comment` is null))
            or
            ((not snapshotted_data.`Comment` is null) and (source_data.`Comment` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`SalesOrderID` != source_data.`SalesOrderID`
        or
        (
            ((snapshotted_data.`SalesOrderID` is null) and not (source_data.`SalesOrderID` is null))
            or
            ((not snapshotted_data.`SalesOrderID` is null) and (source_data.`SalesOrderID` is null))
        ) or snapshotted_data.`RevisionNumber` != source_data.`RevisionNumber`
        or
        (
            ((snapshotted_data.`RevisionNumber` is null) and not (source_data.`RevisionNumber` is null))
            or
            ((not snapshotted_data.`RevisionNumber` is null) and (source_data.`RevisionNumber` is null))
        ) or snapshotted_data.`OrderDate` != source_data.`OrderDate`
        or
        (
            ((snapshotted_data.`OrderDate` is null) and not (source_data.`OrderDate` is null))
            or
            ((not snapshotted_data.`OrderDate` is null) and (source_data.`OrderDate` is null))
        ) or snapshotted_data.`DueDate` != source_data.`DueDate`
        or
        (
            ((snapshotted_data.`DueDate` is null) and not (source_data.`DueDate` is null))
            or
            ((not snapshotted_data.`DueDate` is null) and (source_data.`DueDate` is null))
        ) or snapshotted_data.`ShipDate` != source_data.`ShipDate`
        or
        (
            ((snapshotted_data.`ShipDate` is null) and not (source_data.`ShipDate` is null))
            or
            ((not snapshotted_data.`ShipDate` is null) and (source_data.`ShipDate` is null))
        ) or snapshotted_data.`Status` != source_data.`Status`
        or
        (
            ((snapshotted_data.`Status` is null) and not (source_data.`Status` is null))
            or
            ((not snapshotted_data.`Status` is null) and (source_data.`Status` is null))
        ) or snapshotted_data.`OnlineOrderFlag` != source_data.`OnlineOrderFlag`
        or
        (
            ((snapshotted_data.`OnlineOrderFlag` is null) and not (source_data.`OnlineOrderFlag` is null))
            or
            ((not snapshotted_data.`OnlineOrderFlag` is null) and (source_data.`OnlineOrderFlag` is null))
        ) or snapshotted_data.`SalesOrderNumber` != source_data.`SalesOrderNumber`
        or
        (
            ((snapshotted_data.`SalesOrderNumber` is null) and not (source_data.`SalesOrderNumber` is null))
            or
            ((not snapshotted_data.`SalesOrderNumber` is null) and (source_data.`SalesOrderNumber` is null))
        ) or snapshotted_data.`PurchaseOrderNumber` != source_data.`PurchaseOrderNumber`
        or
        (
            ((snapshotted_data.`PurchaseOrderNumber` is null) and not (source_data.`PurchaseOrderNumber` is null))
            or
            ((not snapshotted_data.`PurchaseOrderNumber` is null) and (source_data.`PurchaseOrderNumber` is null))
        ) or snapshotted_data.`AccountNumber` != source_data.`AccountNumber`
        or
        (
            ((snapshotted_data.`AccountNumber` is null) and not (source_data.`AccountNumber` is null))
            or
            ((not snapshotted_data.`AccountNumber` is null) and (source_data.`AccountNumber` is null))
        ) or snapshotted_data.`CustomerID` != source_data.`CustomerID`
        or
        (
            ((snapshotted_data.`CustomerID` is null) and not (source_data.`CustomerID` is null))
            or
            ((not snapshotted_data.`CustomerID` is null) and (source_data.`CustomerID` is null))
        ) or snapshotted_data.`ShipToAddressID` != source_data.`ShipToAddressID`
        or
        (
            ((snapshotted_data.`ShipToAddressID` is null) and not (source_data.`ShipToAddressID` is null))
            or
            ((not snapshotted_data.`ShipToAddressID` is null) and (source_data.`ShipToAddressID` is null))
        ) or snapshotted_data.`BillToAddressID` != source_data.`BillToAddressID`
        or
        (
            ((snapshotted_data.`BillToAddressID` is null) and not (source_data.`BillToAddressID` is null))
            or
            ((not snapshotted_data.`BillToAddressID` is null) and (source_data.`BillToAddressID` is null))
        ) or snapshotted_data.`ShipMethod` != source_data.`ShipMethod`
        or
        (
            ((snapshotted_data.`ShipMethod` is null) and not (source_data.`ShipMethod` is null))
            or
            ((not snapshotted_data.`ShipMethod` is null) and (source_data.`ShipMethod` is null))
        ) or snapshotted_data.`CreditCardApprovalCode` != source_data.`CreditCardApprovalCode`
        or
        (
            ((snapshotted_data.`CreditCardApprovalCode` is null) and not (source_data.`CreditCardApprovalCode` is null))
            or
            ((not snapshotted_data.`CreditCardApprovalCode` is null) and (source_data.`CreditCardApprovalCode` is null))
        ) or snapshotted_data.`SubTotal` != source_data.`SubTotal`
        or
        (
            ((snapshotted_data.`SubTotal` is null) and not (source_data.`SubTotal` is null))
            or
            ((not snapshotted_data.`SubTotal` is null) and (source_data.`SubTotal` is null))
        ) or snapshotted_data.`TaxAmt` != source_data.`TaxAmt`
        or
        (
            ((snapshotted_data.`TaxAmt` is null) and not (source_data.`TaxAmt` is null))
            or
            ((not snapshotted_data.`TaxAmt` is null) and (source_data.`TaxAmt` is null))
        ) or snapshotted_data.`Freight` != source_data.`Freight`
        or
        (
            ((snapshotted_data.`Freight` is null) and not (source_data.`Freight` is null))
            or
            ((not snapshotted_data.`Freight` is null) and (source_data.`Freight` is null))
        ) or snapshotted_data.`TotalDue` != source_data.`TotalDue`
        or
        (
            ((snapshotted_data.`TotalDue` is null) and not (source_data.`TotalDue` is null))
            or
            ((not snapshotted_data.`TotalDue` is null) and (source_data.`TotalDue` is null))
        ) or snapshotted_data.`Comment` != source_data.`Comment`
        or
        (
            ((snapshotted_data.`Comment` is null) and not (source_data.`Comment` is null))
            or
            ((not snapshotted_data.`Comment` is null) and (source_data.`Comment` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

  
    
[0m23:33:57.063004 [debug] [Thread-1 (]: SQL status: OK in 0.350 seconds
[0m23:33:57.065185 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=29546cbd-8730-4aac-bb0d-b30599c38125) - Closing
[0m23:33:57.148016 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:33:57.150023 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

    
DESCRIBE TABLE `salesorderheader_snapshot__dbt_tmp`

  
[0m23:33:57.316295 [debug] [Thread-1 (]: SQL status: OK in 0.170 seconds
[0m23:33:57.319244 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=e3a816f8-a1c8-498f-8e2e-20b57dc999e9) - Closing
[0m23:33:57.398951 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:33:57.399968 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`salesorderheader_snapshot`

  
[0m23:33:57.735296 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:33:57.737605 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=903e52ad-e062-486c-86cb-138c8de87d89) - Closing
[0m23:33:57.808657 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:33:57.809653 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

    
DESCRIBE TABLE `salesorderheader_snapshot__dbt_tmp`

  
[0m23:33:57.946086 [debug] [Thread-1 (]: SQL status: OK in 0.140 seconds
[0m23:33:57.949205 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=7c455586-1e4c-4355-b1f3-59352cb94b3c) - Closing
[0m23:33:58.017980 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:33:58.018984 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`salesorderheader_snapshot`

  
[0m23:33:58.339116 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:33:58.341137 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=ed0e8237-f7e1-41cc-8d10-b70c8c6f7b39) - Closing
[0m23:33:58.414958 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:33:58.420527 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

    
DESCRIBE TABLE `salesorderheader_snapshot__dbt_tmp`

  
[0m23:33:58.557338 [debug] [Thread-1 (]: SQL status: OK in 0.140 seconds
[0m23:33:58.562937 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=48467d41-0120-4ec9-813d-1bf73c966168) - Closing
[0m23:33:58.632907 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:33:58.632907 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */
select * from (
        
    
    with snapshot_query as (

        with salesorderheader_snapshot as (
    SELECT
        SalesOrderID,
        RevisionNumber,
        OrderDate,
        DueDate,
        ShipDate,
        Status,
        OnlineOrderFlag,
        SalesOrderNumber,
        PurchaseOrderNumber,
        AccountNumber,
        CustomerID,
        ShipToAddressID,
        BillToAddressID,
        ShipMethod,
        CreditCardApprovalCode,
        SubTotal,
        TaxAmt,
        Freight,
        TotalDue,
        Comment
    FROM `hive_metastore`.`saleslt`.`salesorderheader`
)

select * from salesorderheader_snapshot

    ),

    snapshotted_data as (

        select *, 
    
        SalesOrderID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`salesorderheader_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        SalesOrderID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(SalesOrderID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        SalesOrderID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        SalesOrderID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`SalesOrderID` != source_data.`SalesOrderID`
        or
        (
            ((snapshotted_data.`SalesOrderID` is null) and not (source_data.`SalesOrderID` is null))
            or
            ((not snapshotted_data.`SalesOrderID` is null) and (source_data.`SalesOrderID` is null))
        ) or snapshotted_data.`RevisionNumber` != source_data.`RevisionNumber`
        or
        (
            ((snapshotted_data.`RevisionNumber` is null) and not (source_data.`RevisionNumber` is null))
            or
            ((not snapshotted_data.`RevisionNumber` is null) and (source_data.`RevisionNumber` is null))
        ) or snapshotted_data.`OrderDate` != source_data.`OrderDate`
        or
        (
            ((snapshotted_data.`OrderDate` is null) and not (source_data.`OrderDate` is null))
            or
            ((not snapshotted_data.`OrderDate` is null) and (source_data.`OrderDate` is null))
        ) or snapshotted_data.`DueDate` != source_data.`DueDate`
        or
        (
            ((snapshotted_data.`DueDate` is null) and not (source_data.`DueDate` is null))
            or
            ((not snapshotted_data.`DueDate` is null) and (source_data.`DueDate` is null))
        ) or snapshotted_data.`ShipDate` != source_data.`ShipDate`
        or
        (
            ((snapshotted_data.`ShipDate` is null) and not (source_data.`ShipDate` is null))
            or
            ((not snapshotted_data.`ShipDate` is null) and (source_data.`ShipDate` is null))
        ) or snapshotted_data.`Status` != source_data.`Status`
        or
        (
            ((snapshotted_data.`Status` is null) and not (source_data.`Status` is null))
            or
            ((not snapshotted_data.`Status` is null) and (source_data.`Status` is null))
        ) or snapshotted_data.`OnlineOrderFlag` != source_data.`OnlineOrderFlag`
        or
        (
            ((snapshotted_data.`OnlineOrderFlag` is null) and not (source_data.`OnlineOrderFlag` is null))
            or
            ((not snapshotted_data.`OnlineOrderFlag` is null) and (source_data.`OnlineOrderFlag` is null))
        ) or snapshotted_data.`SalesOrderNumber` != source_data.`SalesOrderNumber`
        or
        (
            ((snapshotted_data.`SalesOrderNumber` is null) and not (source_data.`SalesOrderNumber` is null))
            or
            ((not snapshotted_data.`SalesOrderNumber` is null) and (source_data.`SalesOrderNumber` is null))
        ) or snapshotted_data.`PurchaseOrderNumber` != source_data.`PurchaseOrderNumber`
        or
        (
            ((snapshotted_data.`PurchaseOrderNumber` is null) and not (source_data.`PurchaseOrderNumber` is null))
            or
            ((not snapshotted_data.`PurchaseOrderNumber` is null) and (source_data.`PurchaseOrderNumber` is null))
        ) or snapshotted_data.`AccountNumber` != source_data.`AccountNumber`
        or
        (
            ((snapshotted_data.`AccountNumber` is null) and not (source_data.`AccountNumber` is null))
            or
            ((not snapshotted_data.`AccountNumber` is null) and (source_data.`AccountNumber` is null))
        ) or snapshotted_data.`CustomerID` != source_data.`CustomerID`
        or
        (
            ((snapshotted_data.`CustomerID` is null) and not (source_data.`CustomerID` is null))
            or
            ((not snapshotted_data.`CustomerID` is null) and (source_data.`CustomerID` is null))
        ) or snapshotted_data.`ShipToAddressID` != source_data.`ShipToAddressID`
        or
        (
            ((snapshotted_data.`ShipToAddressID` is null) and not (source_data.`ShipToAddressID` is null))
            or
            ((not snapshotted_data.`ShipToAddressID` is null) and (source_data.`ShipToAddressID` is null))
        ) or snapshotted_data.`BillToAddressID` != source_data.`BillToAddressID`
        or
        (
            ((snapshotted_data.`BillToAddressID` is null) and not (source_data.`BillToAddressID` is null))
            or
            ((not snapshotted_data.`BillToAddressID` is null) and (source_data.`BillToAddressID` is null))
        ) or snapshotted_data.`ShipMethod` != source_data.`ShipMethod`
        or
        (
            ((snapshotted_data.`ShipMethod` is null) and not (source_data.`ShipMethod` is null))
            or
            ((not snapshotted_data.`ShipMethod` is null) and (source_data.`ShipMethod` is null))
        ) or snapshotted_data.`CreditCardApprovalCode` != source_data.`CreditCardApprovalCode`
        or
        (
            ((snapshotted_data.`CreditCardApprovalCode` is null) and not (source_data.`CreditCardApprovalCode` is null))
            or
            ((not snapshotted_data.`CreditCardApprovalCode` is null) and (source_data.`CreditCardApprovalCode` is null))
        ) or snapshotted_data.`SubTotal` != source_data.`SubTotal`
        or
        (
            ((snapshotted_data.`SubTotal` is null) and not (source_data.`SubTotal` is null))
            or
            ((not snapshotted_data.`SubTotal` is null) and (source_data.`SubTotal` is null))
        ) or snapshotted_data.`TaxAmt` != source_data.`TaxAmt`
        or
        (
            ((snapshotted_data.`TaxAmt` is null) and not (source_data.`TaxAmt` is null))
            or
            ((not snapshotted_data.`TaxAmt` is null) and (source_data.`TaxAmt` is null))
        ) or snapshotted_data.`Freight` != source_data.`Freight`
        or
        (
            ((snapshotted_data.`Freight` is null) and not (source_data.`Freight` is null))
            or
            ((not snapshotted_data.`Freight` is null) and (source_data.`Freight` is null))
        ) or snapshotted_data.`TotalDue` != source_data.`TotalDue`
        or
        (
            ((snapshotted_data.`TotalDue` is null) and not (source_data.`TotalDue` is null))
            or
            ((not snapshotted_data.`TotalDue` is null) and (source_data.`TotalDue` is null))
        ) or snapshotted_data.`Comment` != source_data.`Comment`
        or
        (
            ((snapshotted_data.`Comment` is null) and not (source_data.`Comment` is null))
            or
            ((not snapshotted_data.`Comment` is null) and (source_data.`Comment` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`SalesOrderID` != source_data.`SalesOrderID`
        or
        (
            ((snapshotted_data.`SalesOrderID` is null) and not (source_data.`SalesOrderID` is null))
            or
            ((not snapshotted_data.`SalesOrderID` is null) and (source_data.`SalesOrderID` is null))
        ) or snapshotted_data.`RevisionNumber` != source_data.`RevisionNumber`
        or
        (
            ((snapshotted_data.`RevisionNumber` is null) and not (source_data.`RevisionNumber` is null))
            or
            ((not snapshotted_data.`RevisionNumber` is null) and (source_data.`RevisionNumber` is null))
        ) or snapshotted_data.`OrderDate` != source_data.`OrderDate`
        or
        (
            ((snapshotted_data.`OrderDate` is null) and not (source_data.`OrderDate` is null))
            or
            ((not snapshotted_data.`OrderDate` is null) and (source_data.`OrderDate` is null))
        ) or snapshotted_data.`DueDate` != source_data.`DueDate`
        or
        (
            ((snapshotted_data.`DueDate` is null) and not (source_data.`DueDate` is null))
            or
            ((not snapshotted_data.`DueDate` is null) and (source_data.`DueDate` is null))
        ) or snapshotted_data.`ShipDate` != source_data.`ShipDate`
        or
        (
            ((snapshotted_data.`ShipDate` is null) and not (source_data.`ShipDate` is null))
            or
            ((not snapshotted_data.`ShipDate` is null) and (source_data.`ShipDate` is null))
        ) or snapshotted_data.`Status` != source_data.`Status`
        or
        (
            ((snapshotted_data.`Status` is null) and not (source_data.`Status` is null))
            or
            ((not snapshotted_data.`Status` is null) and (source_data.`Status` is null))
        ) or snapshotted_data.`OnlineOrderFlag` != source_data.`OnlineOrderFlag`
        or
        (
            ((snapshotted_data.`OnlineOrderFlag` is null) and not (source_data.`OnlineOrderFlag` is null))
            or
            ((not snapshotted_data.`OnlineOrderFlag` is null) and (source_data.`OnlineOrderFlag` is null))
        ) or snapshotted_data.`SalesOrderNumber` != source_data.`SalesOrderNumber`
        or
        (
            ((snapshotted_data.`SalesOrderNumber` is null) and not (source_data.`SalesOrderNumber` is null))
            or
            ((not snapshotted_data.`SalesOrderNumber` is null) and (source_data.`SalesOrderNumber` is null))
        ) or snapshotted_data.`PurchaseOrderNumber` != source_data.`PurchaseOrderNumber`
        or
        (
            ((snapshotted_data.`PurchaseOrderNumber` is null) and not (source_data.`PurchaseOrderNumber` is null))
            or
            ((not snapshotted_data.`PurchaseOrderNumber` is null) and (source_data.`PurchaseOrderNumber` is null))
        ) or snapshotted_data.`AccountNumber` != source_data.`AccountNumber`
        or
        (
            ((snapshotted_data.`AccountNumber` is null) and not (source_data.`AccountNumber` is null))
            or
            ((not snapshotted_data.`AccountNumber` is null) and (source_data.`AccountNumber` is null))
        ) or snapshotted_data.`CustomerID` != source_data.`CustomerID`
        or
        (
            ((snapshotted_data.`CustomerID` is null) and not (source_data.`CustomerID` is null))
            or
            ((not snapshotted_data.`CustomerID` is null) and (source_data.`CustomerID` is null))
        ) or snapshotted_data.`ShipToAddressID` != source_data.`ShipToAddressID`
        or
        (
            ((snapshotted_data.`ShipToAddressID` is null) and not (source_data.`ShipToAddressID` is null))
            or
            ((not snapshotted_data.`ShipToAddressID` is null) and (source_data.`ShipToAddressID` is null))
        ) or snapshotted_data.`BillToAddressID` != source_data.`BillToAddressID`
        or
        (
            ((snapshotted_data.`BillToAddressID` is null) and not (source_data.`BillToAddressID` is null))
            or
            ((not snapshotted_data.`BillToAddressID` is null) and (source_data.`BillToAddressID` is null))
        ) or snapshotted_data.`ShipMethod` != source_data.`ShipMethod`
        or
        (
            ((snapshotted_data.`ShipMethod` is null) and not (source_data.`ShipMethod` is null))
            or
            ((not snapshotted_data.`ShipMethod` is null) and (source_data.`ShipMethod` is null))
        ) or snapshotted_data.`CreditCardApprovalCode` != source_data.`CreditCardApprovalCode`
        or
        (
            ((snapshotted_data.`CreditCardApprovalCode` is null) and not (source_data.`CreditCardApprovalCode` is null))
            or
            ((not snapshotted_data.`CreditCardApprovalCode` is null) and (source_data.`CreditCardApprovalCode` is null))
        ) or snapshotted_data.`SubTotal` != source_data.`SubTotal`
        or
        (
            ((snapshotted_data.`SubTotal` is null) and not (source_data.`SubTotal` is null))
            or
            ((not snapshotted_data.`SubTotal` is null) and (source_data.`SubTotal` is null))
        ) or snapshotted_data.`TaxAmt` != source_data.`TaxAmt`
        or
        (
            ((snapshotted_data.`TaxAmt` is null) and not (source_data.`TaxAmt` is null))
            or
            ((not snapshotted_data.`TaxAmt` is null) and (source_data.`TaxAmt` is null))
        ) or snapshotted_data.`Freight` != source_data.`Freight`
        or
        (
            ((snapshotted_data.`Freight` is null) and not (source_data.`Freight` is null))
            or
            ((not snapshotted_data.`Freight` is null) and (source_data.`Freight` is null))
        ) or snapshotted_data.`TotalDue` != source_data.`TotalDue`
        or
        (
            ((snapshotted_data.`TotalDue` is null) and not (source_data.`TotalDue` is null))
            or
            ((not snapshotted_data.`TotalDue` is null) and (source_data.`TotalDue` is null))
        ) or snapshotted_data.`Comment` != source_data.`Comment`
        or
        (
            ((snapshotted_data.`Comment` is null) and not (source_data.`Comment` is null))
            or
            ((not snapshotted_data.`Comment` is null) and (source_data.`Comment` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

    ) as __dbt_sbq
    where false
    limit 0

[0m23:33:59.033386 [debug] [Thread-1 (]: SQL status: OK in 0.400 seconds
[0m23:33:59.033386 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=88af1bc4-3af9-4efc-ae7f-f0f6cb469429) - Closing
[0m23:33:59.107706 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:33:59.113347 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:33:59.225691 [debug] [Thread-1 (]: SQL status: OK in 0.110 seconds
[0m23:33:59.228389 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=fe5b49a4-65de-41a8-99ab-ede02ed60aee) - Closing
[0m23:33:59.298319 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:33:59.307199 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:33:59.307199 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

      merge into `hive_metastore`.`snapshots`.`salesorderheader_snapshot` as DBT_INTERNAL_DEST
    
      using `salesorderheader_snapshot__dbt_tmp` as DBT_INTERNAL_SOURCE
    
    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id
    when matched
     
       and DBT_INTERNAL_DEST.dbt_valid_to is null
     
     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')
        then update
        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to

    when not matched
     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'
        then insert *
    ;

  
[0m23:34:03.915149 [debug] [Thread-1 (]: SQL status: OK in 4.600 seconds
[0m23:34:03.918478 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=786d1f2d-88b4-4b1d-a82e-6b10d83edbef) - Closing
[0m23:34:03.986826 [debug] [Thread-1 (]: Applying DROP to: `salesorderheader_snapshot__dbt_tmp`
[0m23:34:03.993455 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:34:03.993455 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */
DROP VIEW IF EXISTS `salesorderheader_snapshot__dbt_tmp`
[0m23:34:04.122894 [debug] [Thread-1 (]: SQL status: OK in 0.130 seconds
[0m23:34:04.122894 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=932d71c7-61c7-444d-8907-1440155699de, command-id=350303c0-29bf-466a-9dd0-c1e348d6a373) - Closing
[0m23:34:04.225762 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '57b98072-50cc-4f82-afa8-6464540e8126', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002444FD634C0>]}
[0m23:34:04.227774 [info ] [Thread-1 (]: 7 of 7 OK snapshotted snapshots.salesorderheader_snapshot ...................... [[32mOK[0m in 9.39s]
[0m23:34:04.227774 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.salesorderheader_snapshot
[0m23:34:04.232138 [debug] [MainThread]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=master, idle-time=66.32886838912964s, language=None, compute-name=) - Recreating due to idleness
[0m23:34:04.233207 [debug] [MainThread]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=master, idle-time=0s, language=None, compute-name=) - Reset connection handle
[0m23:34:04.233207 [debug] [MainThread]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=master, idle-time=0s, language=None, compute-name=) - Reusing connection previously named master
[0m23:34:04.233207 [debug] [MainThread]: Connection 'master' was properly closed.
[0m23:34:04.233207 [debug] [MainThread]: Connection 'list_hive_metastore' was properly closed.
[0m23:34:04.233207 [debug] [MainThread]: On list_hive_metastore: Close
[0m23:34:04.233207 [debug] [MainThread]: Databricks adapter: Connection(session-id=94d7c042-13f6-475e-b1a3-6eae6d907c17) - Closing
[0m23:34:04.309914 [debug] [MainThread]: Connection 'list_hive_metastore_saleslt' was properly closed.
[0m23:34:04.312958 [debug] [MainThread]: On list_hive_metastore_saleslt: Close
[0m23:34:04.315111 [debug] [MainThread]: Databricks adapter: Connection(session-id=3a990ef4-8733-4e59-ae25-6b9166bbd71d) - Closing
[0m23:34:04.393161 [debug] [MainThread]: Connection 'snapshot.medalion_dbt_spark.salesorderheader_snapshot' was properly closed.
[0m23:34:04.393161 [debug] [MainThread]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: Close
[0m23:34:04.393161 [debug] [MainThread]: Databricks adapter: Connection(session-id=932d71c7-61c7-444d-8907-1440155699de) - Closing
[0m23:34:04.482056 [info ] [MainThread]: 
[0m23:34:04.483127 [info ] [MainThread]: Finished running 7 snapshots in 0 hours 1 minutes and 10.52 seconds (70.52s).
[0m23:34:04.483127 [debug] [MainThread]: Command end result
[0m23:34:04.523116 [debug] [MainThread]: Wrote artifact WritableManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\manifest.json
[0m23:34:04.529095 [debug] [MainThread]: Wrote artifact SemanticManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\semantic_manifest.json
[0m23:34:04.540089 [debug] [MainThread]: Wrote artifact RunExecutionResult to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\run_results.json
[0m23:34:04.541173 [info ] [MainThread]: 
[0m23:34:04.542171 [info ] [MainThread]: [32mCompleted successfully[0m
[0m23:34:04.543186 [info ] [MainThread]: 
[0m23:34:04.543186 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m23:34:04.545240 [debug] [MainThread]: Command `dbt snapshot` succeeded at 23:34:04.545240 after 74.46 seconds
[0m23:34:04.546240 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000244326AA620>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000244339B4B80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000244339EB2E0>]}
[0m23:34:04.546240 [debug] [MainThread]: Flushing usage events
[0m23:34:05.888660 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m23:41:54.763478 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000245026465C0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002450180EBC0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002450180E9E0>]}


============================== 23:41:54.773246 | 68da9ca7-96e6-415f-804e-0786f6d6ea17 ==============================
[0m23:41:54.773246 [info ] [MainThread]: Running with dbt=1.10.1
[0m23:41:54.773246 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'fail_fast': 'False', 'profiles_dir': 'C:\\Users\\M S I\\.dbt', 'log_path': 'D:\\Academic-Project\\Portofolio Data Engineer\\medalion_dbt_spark\\logs', 'debug': 'False', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'introspect': 'True', 'static_parser': 'True', 'invocation_command': 'dbt snapshot', 'target_path': 'None', 'log_format': 'default', 'send_anonymous_usage_stats': 'True'}
[0m23:41:55.543314 [debug] [MainThread]: Spark adapter: Setting pyhive.hive logging to ERROR
[0m23:41:55.543314 [debug] [MainThread]: Spark adapter: Setting thrift.transport logging to ERROR
[0m23:41:55.543314 [debug] [MainThread]: Spark adapter: Setting thrift.protocol logging to ERROR
[0m23:41:56.769956 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '68da9ca7-96e6-415f-804e-0786f6d6ea17', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000024506BB6770>]}
[0m23:41:56.917279 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '68da9ca7-96e6-415f-804e-0786f6d6ea17', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002450180F2B0>]}
[0m23:41:56.917279 [info ] [MainThread]: Registered adapter: databricks=1.10.3
[0m23:41:57.324270 [debug] [MainThread]: checksum: 2c026f85d539c10c69b093157526ce33d0bf5533489eafb07fe5172434ec7740, vars: {}, profile: , target: , version: 1.10.1
[0m23:41:57.703494 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m23:41:57.703494 [debug] [MainThread]: Partial parsing: updated file: medalion_dbt_spark://models\example\staging\bronze.yml
[0m23:41:57.844916 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '68da9ca7-96e6-415f-804e-0786f6d6ea17', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002451F9F3AF0>]}
[0m23:41:57.963326 [debug] [MainThread]: Wrote artifact WritableManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\manifest.json
[0m23:41:57.969772 [debug] [MainThread]: Wrote artifact SemanticManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\semantic_manifest.json
[0m23:41:58.004345 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '68da9ca7-96e6-415f-804e-0786f6d6ea17', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002451FA503A0>]}
[0m23:41:58.004345 [info ] [MainThread]: Found 2 models, 7 snapshots, 4 data tests, 9 sources, 671 macros
[0m23:41:58.004345 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '68da9ca7-96e6-415f-804e-0786f6d6ea17', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002450176AC50>]}
[0m23:41:58.004345 [info ] [MainThread]: 
[0m23:41:58.011372 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m23:41:58.011372 [info ] [MainThread]: 
[0m23:41:58.011372 [debug] [MainThread]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=master, idle-time=0s, language=None, compute-name=) - Creating connection
[0m23:41:58.013393 [debug] [MainThread]: Acquiring new databricks connection 'master'
[0m23:41:58.018136 [debug] [ThreadPool]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=list_hive_metastore, idle-time=0s, language=None, compute-name=) - Creating connection
[0m23:41:58.018136 [debug] [ThreadPool]: Acquiring new databricks connection 'list_hive_metastore'
[0m23:41:58.023494 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore"
[0m23:41:58.023494 [debug] [ThreadPool]: On list_hive_metastore: GetSchemas(database=hive_metastore, schema=None)
[0m23:41:58.024734 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m23:41:58.699635 [debug] [ThreadPool]: Databricks adapter: Connection(session-id=339dfdc4-e170-44c8-bc92-a153ab9ffeee) - Created
[0m23:41:59.443389 [debug] [ThreadPool]: SQL status: OK in 1.420 seconds
[0m23:41:59.449599 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=339dfdc4-e170-44c8-bc92-a153ab9ffeee, command-id=883ba1dd-b724-4df2-ba71-e3a258be926e) - Closing
[0m23:41:59.599820 [debug] [ThreadPool]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=list_hive_metastore_saleslt, idle-time=0s, language=None, compute-name=) - Creating connection
[0m23:41:59.603263 [debug] [ThreadPool]: Acquiring new databricks connection 'list_hive_metastore_saleslt'
[0m23:41:59.606499 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_saleslt"
[0m23:41:59.607644 [debug] [ThreadPool]: On list_hive_metastore_saleslt: GetTables(database=hive_metastore, schema=saleslt)
[0m23:41:59.607644 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m23:41:59.906746 [debug] [ThreadPool]: Databricks adapter: Connection(session-id=4d37932c-f200-48fa-a156-e27a38360603) - Created
[0m23:42:00.087320 [debug] [ThreadPool]: SQL status: OK in 0.480 seconds
[0m23:42:00.087320 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=4d37932c-f200-48fa-a156-e27a38360603, command-id=08c550b5-d912-4f03-9f04-56767f4f7f0d) - Closing
[0m23:42:00.190405 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_saleslt"
[0m23:42:00.193358 [debug] [ThreadPool]: On list_hive_metastore_saleslt: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "list_hive_metastore_saleslt"} */

    
SELECT current_catalog()

  
[0m23:42:00.403650 [debug] [ThreadPool]: SQL status: OK in 0.210 seconds
[0m23:42:00.413402 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=4d37932c-f200-48fa-a156-e27a38360603, command-id=d84addc1-371c-4aa3-a104-2b9ea61e7651) - Closing
[0m23:42:00.505815 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_saleslt"
[0m23:42:00.506813 [debug] [ThreadPool]: On list_hive_metastore_saleslt: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "list_hive_metastore_saleslt"} */

    
SHOW VIEWS IN `hive_metastore`.`saleslt`

  
[0m23:42:00.766503 [debug] [ThreadPool]: SQL status: OK in 0.260 seconds
[0m23:42:00.773481 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=4d37932c-f200-48fa-a156-e27a38360603, command-id=8b02d006-9cb6-4f73-b0ff-9abd5308e62a) - Closing
[0m23:42:00.923724 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_hive_metastore_saleslt, now list_hive_metastore_snapshots)
[0m23:42:00.927534 [debug] [ThreadPool]: Databricks adapter: DatabricksDBTConnection(session-id=4d37932c-f200-48fa-a156-e27a38360603, name=list_hive_metastore_snapshots, idle-time=0.004932880401611328s, language=None, compute-name=) - Reusing connection previously named list_hive_metastore_saleslt
[0m23:42:00.935351 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_snapshots"
[0m23:42:00.937628 [debug] [ThreadPool]: On list_hive_metastore_snapshots: GetTables(database=hive_metastore, schema=snapshots)
[0m23:42:01.109565 [debug] [ThreadPool]: SQL status: OK in 0.170 seconds
[0m23:42:01.109565 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=4d37932c-f200-48fa-a156-e27a38360603, command-id=fe82eaf3-f3c0-4553-be7c-9b0098dff8d3) - Closing
[0m23:42:01.197305 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_snapshots"
[0m23:42:01.199392 [debug] [ThreadPool]: On list_hive_metastore_snapshots: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "list_hive_metastore_snapshots"} */

    
SELECT current_catalog()

  
[0m23:42:01.357412 [debug] [ThreadPool]: SQL status: OK in 0.160 seconds
[0m23:42:01.368424 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=4d37932c-f200-48fa-a156-e27a38360603, command-id=7a441adc-1f9e-45a8-9cd4-8db1c51ba667) - Closing
[0m23:42:01.453678 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_snapshots"
[0m23:42:01.456583 [debug] [ThreadPool]: On list_hive_metastore_snapshots: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "list_hive_metastore_snapshots"} */

    
SHOW VIEWS IN `hive_metastore`.`snapshots`

  
[0m23:42:01.763689 [debug] [ThreadPool]: SQL status: OK in 0.310 seconds
[0m23:42:01.767461 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=4d37932c-f200-48fa-a156-e27a38360603, command-id=e8b083d2-8859-43f4-b49a-751393e3b8e9) - Closing
[0m23:42:01.849706 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '68da9ca7-96e6-415f-804e-0786f6d6ea17', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000024501522320>]}
[0m23:42:01.858881 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.address_snapshot
[0m23:42:01.859887 [info ] [Thread-1 (]: 1 of 7 START snapshot snapshots.address_snapshot ............................... [RUN]
[0m23:42:01.859887 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=snapshot.medalion_dbt_spark.address_snapshot, idle-time=0s, language=None, compute-name=) - Creating connection
[0m23:42:01.859887 [debug] [Thread-1 (]: Acquiring new databricks connection 'snapshot.medalion_dbt_spark.address_snapshot'
[0m23:42:01.859887 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.address_snapshot
[0m23:42:01.870402 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.address_snapshot
[0m23:42:01.905575 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:42:01.906564 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

      describe extended `hive_metastore`.`snapshots`.`address_snapshot`
  
[0m23:42:01.906564 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m23:42:02.133748 [debug] [Thread-1 (]: Databricks adapter: Connection(session-id=e45560f2-32e3-4ef1-8091-405647d0a422) - Created
[0m23:42:02.781008 [debug] [Thread-1 (]: SQL status: OK in 0.870 seconds
[0m23:42:02.784618 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=b113470b-3e29-4b2c-8ba0-4a26847f7fa7) - Closing
[0m23:42:02.907541 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:42:02.908546 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */
select * from (
        



with source_data as (
    select
        AddressID,
        AddressLine1,
        AddressLine2,
        City,
        StateProvince,
        CountryRegion,
        PostalCode
    from `hive_metastore`.`saleslt`.`address`
)
select *
from source_data

    ) as __dbt_sbq
    where false
    limit 0

    
[0m23:42:03.227788 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:42:03.243488 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=2a6aa554-bb3e-4fe7-9a4a-03c99fdef3c4) - Closing
[0m23:42:03.327977 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:42:03.333600 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`address_snapshot`

  
[0m23:42:03.657515 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:42:03.663783 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=44faa964-4c13-4f5c-9136-7fd633f87aa3) - Closing
[0m23:42:03.760955 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:42:03.761956 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`address_snapshot`

  
[0m23:42:04.107158 [debug] [Thread-1 (]: SQL status: OK in 0.340 seconds
[0m23:42:04.107158 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=99df63ee-4420-4da9-be1c-39129722c4f0) - Closing
[0m23:42:04.233457 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:42:04.234464 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

        
  
    create or replace temporary view `address_snapshot__dbt_tmp` as
      
    
    with snapshot_query as (

        with source_data as (
    select
        AddressID,
        AddressLine1,
        AddressLine2,
        City,
        StateProvince,
        CountryRegion,
        PostalCode
    from `hive_metastore`.`saleslt`.`address`
)
select *
from source_data

    ),

    snapshotted_data as (

        select *, 
    
        AddressID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`address_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        AddressID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(AddressID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        AddressID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        AddressID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`AddressID` != source_data.`AddressID`
        or
        (
            ((snapshotted_data.`AddressID` is null) and not (source_data.`AddressID` is null))
            or
            ((not snapshotted_data.`AddressID` is null) and (source_data.`AddressID` is null))
        ) or snapshotted_data.`AddressLine1` != source_data.`AddressLine1`
        or
        (
            ((snapshotted_data.`AddressLine1` is null) and not (source_data.`AddressLine1` is null))
            or
            ((not snapshotted_data.`AddressLine1` is null) and (source_data.`AddressLine1` is null))
        ) or snapshotted_data.`AddressLine2` != source_data.`AddressLine2`
        or
        (
            ((snapshotted_data.`AddressLine2` is null) and not (source_data.`AddressLine2` is null))
            or
            ((not snapshotted_data.`AddressLine2` is null) and (source_data.`AddressLine2` is null))
        ) or snapshotted_data.`City` != source_data.`City`
        or
        (
            ((snapshotted_data.`City` is null) and not (source_data.`City` is null))
            or
            ((not snapshotted_data.`City` is null) and (source_data.`City` is null))
        ) or snapshotted_data.`StateProvince` != source_data.`StateProvince`
        or
        (
            ((snapshotted_data.`StateProvince` is null) and not (source_data.`StateProvince` is null))
            or
            ((not snapshotted_data.`StateProvince` is null) and (source_data.`StateProvince` is null))
        ) or snapshotted_data.`CountryRegion` != source_data.`CountryRegion`
        or
        (
            ((snapshotted_data.`CountryRegion` is null) and not (source_data.`CountryRegion` is null))
            or
            ((not snapshotted_data.`CountryRegion` is null) and (source_data.`CountryRegion` is null))
        ) or snapshotted_data.`PostalCode` != source_data.`PostalCode`
        or
        (
            ((snapshotted_data.`PostalCode` is null) and not (source_data.`PostalCode` is null))
            or
            ((not snapshotted_data.`PostalCode` is null) and (source_data.`PostalCode` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`AddressID` != source_data.`AddressID`
        or
        (
            ((snapshotted_data.`AddressID` is null) and not (source_data.`AddressID` is null))
            or
            ((not snapshotted_data.`AddressID` is null) and (source_data.`AddressID` is null))
        ) or snapshotted_data.`AddressLine1` != source_data.`AddressLine1`
        or
        (
            ((snapshotted_data.`AddressLine1` is null) and not (source_data.`AddressLine1` is null))
            or
            ((not snapshotted_data.`AddressLine1` is null) and (source_data.`AddressLine1` is null))
        ) or snapshotted_data.`AddressLine2` != source_data.`AddressLine2`
        or
        (
            ((snapshotted_data.`AddressLine2` is null) and not (source_data.`AddressLine2` is null))
            or
            ((not snapshotted_data.`AddressLine2` is null) and (source_data.`AddressLine2` is null))
        ) or snapshotted_data.`City` != source_data.`City`
        or
        (
            ((snapshotted_data.`City` is null) and not (source_data.`City` is null))
            or
            ((not snapshotted_data.`City` is null) and (source_data.`City` is null))
        ) or snapshotted_data.`StateProvince` != source_data.`StateProvince`
        or
        (
            ((snapshotted_data.`StateProvince` is null) and not (source_data.`StateProvince` is null))
            or
            ((not snapshotted_data.`StateProvince` is null) and (source_data.`StateProvince` is null))
        ) or snapshotted_data.`CountryRegion` != source_data.`CountryRegion`
        or
        (
            ((snapshotted_data.`CountryRegion` is null) and not (source_data.`CountryRegion` is null))
            or
            ((not snapshotted_data.`CountryRegion` is null) and (source_data.`CountryRegion` is null))
        ) or snapshotted_data.`PostalCode` != source_data.`PostalCode`
        or
        (
            ((snapshotted_data.`PostalCode` is null) and not (source_data.`PostalCode` is null))
            or
            ((not snapshotted_data.`PostalCode` is null) and (source_data.`PostalCode` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

  
    
[0m23:42:04.606823 [debug] [Thread-1 (]: SQL status: OK in 0.370 seconds
[0m23:42:04.609349 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=88a980e5-9d0e-4405-8c99-34cbdb375959) - Closing
[0m23:42:04.691363 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:42:04.691904 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

    
DESCRIBE TABLE `address_snapshot__dbt_tmp`

  
[0m23:42:04.875572 [debug] [Thread-1 (]: SQL status: OK in 0.180 seconds
[0m23:42:04.883706 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=a0e53907-0eea-4338-b091-e82660722235) - Closing
[0m23:42:04.968756 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:42:04.975274 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`address_snapshot`

  
[0m23:42:05.305467 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:42:05.313576 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=40333cd5-b9ea-4f89-a493-bf599947f158) - Closing
[0m23:42:05.398500 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:42:05.401516 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

    
DESCRIBE TABLE `address_snapshot__dbt_tmp`

  
[0m23:42:05.541055 [debug] [Thread-1 (]: SQL status: OK in 0.140 seconds
[0m23:42:05.543637 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=bee5748b-5ffe-47ec-adae-7504ca9b9c85) - Closing
[0m23:42:05.627523 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:42:05.635076 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`address_snapshot`

  
[0m23:42:05.953602 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:42:05.965346 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=03e12341-643c-480a-9b6f-fbc66c191d7b) - Closing
[0m23:42:06.062686 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:42:06.064613 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

    
DESCRIBE TABLE `address_snapshot__dbt_tmp`

  
[0m23:42:06.237861 [debug] [Thread-1 (]: SQL status: OK in 0.170 seconds
[0m23:42:06.247923 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=4b8dd8d4-aa01-4bdb-be7a-b84e8eafcb0d) - Closing
[0m23:42:06.353515 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:42:06.353515 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */
select * from (
        
    
    with snapshot_query as (

        with source_data as (
    select
        AddressID,
        AddressLine1,
        AddressLine2,
        City,
        StateProvince,
        CountryRegion,
        PostalCode
    from `hive_metastore`.`saleslt`.`address`
)
select *
from source_data

    ),

    snapshotted_data as (

        select *, 
    
        AddressID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`address_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        AddressID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(AddressID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        AddressID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        AddressID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`AddressID` != source_data.`AddressID`
        or
        (
            ((snapshotted_data.`AddressID` is null) and not (source_data.`AddressID` is null))
            or
            ((not snapshotted_data.`AddressID` is null) and (source_data.`AddressID` is null))
        ) or snapshotted_data.`AddressLine1` != source_data.`AddressLine1`
        or
        (
            ((snapshotted_data.`AddressLine1` is null) and not (source_data.`AddressLine1` is null))
            or
            ((not snapshotted_data.`AddressLine1` is null) and (source_data.`AddressLine1` is null))
        ) or snapshotted_data.`AddressLine2` != source_data.`AddressLine2`
        or
        (
            ((snapshotted_data.`AddressLine2` is null) and not (source_data.`AddressLine2` is null))
            or
            ((not snapshotted_data.`AddressLine2` is null) and (source_data.`AddressLine2` is null))
        ) or snapshotted_data.`City` != source_data.`City`
        or
        (
            ((snapshotted_data.`City` is null) and not (source_data.`City` is null))
            or
            ((not snapshotted_data.`City` is null) and (source_data.`City` is null))
        ) or snapshotted_data.`StateProvince` != source_data.`StateProvince`
        or
        (
            ((snapshotted_data.`StateProvince` is null) and not (source_data.`StateProvince` is null))
            or
            ((not snapshotted_data.`StateProvince` is null) and (source_data.`StateProvince` is null))
        ) or snapshotted_data.`CountryRegion` != source_data.`CountryRegion`
        or
        (
            ((snapshotted_data.`CountryRegion` is null) and not (source_data.`CountryRegion` is null))
            or
            ((not snapshotted_data.`CountryRegion` is null) and (source_data.`CountryRegion` is null))
        ) or snapshotted_data.`PostalCode` != source_data.`PostalCode`
        or
        (
            ((snapshotted_data.`PostalCode` is null) and not (source_data.`PostalCode` is null))
            or
            ((not snapshotted_data.`PostalCode` is null) and (source_data.`PostalCode` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`AddressID` != source_data.`AddressID`
        or
        (
            ((snapshotted_data.`AddressID` is null) and not (source_data.`AddressID` is null))
            or
            ((not snapshotted_data.`AddressID` is null) and (source_data.`AddressID` is null))
        ) or snapshotted_data.`AddressLine1` != source_data.`AddressLine1`
        or
        (
            ((snapshotted_data.`AddressLine1` is null) and not (source_data.`AddressLine1` is null))
            or
            ((not snapshotted_data.`AddressLine1` is null) and (source_data.`AddressLine1` is null))
        ) or snapshotted_data.`AddressLine2` != source_data.`AddressLine2`
        or
        (
            ((snapshotted_data.`AddressLine2` is null) and not (source_data.`AddressLine2` is null))
            or
            ((not snapshotted_data.`AddressLine2` is null) and (source_data.`AddressLine2` is null))
        ) or snapshotted_data.`City` != source_data.`City`
        or
        (
            ((snapshotted_data.`City` is null) and not (source_data.`City` is null))
            or
            ((not snapshotted_data.`City` is null) and (source_data.`City` is null))
        ) or snapshotted_data.`StateProvince` != source_data.`StateProvince`
        or
        (
            ((snapshotted_data.`StateProvince` is null) and not (source_data.`StateProvince` is null))
            or
            ((not snapshotted_data.`StateProvince` is null) and (source_data.`StateProvince` is null))
        ) or snapshotted_data.`CountryRegion` != source_data.`CountryRegion`
        or
        (
            ((snapshotted_data.`CountryRegion` is null) and not (source_data.`CountryRegion` is null))
            or
            ((not snapshotted_data.`CountryRegion` is null) and (source_data.`CountryRegion` is null))
        ) or snapshotted_data.`PostalCode` != source_data.`PostalCode`
        or
        (
            ((snapshotted_data.`PostalCode` is null) and not (source_data.`PostalCode` is null))
            or
            ((not snapshotted_data.`PostalCode` is null) and (source_data.`PostalCode` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

    ) as __dbt_sbq
    where false
    limit 0

[0m23:42:06.665071 [debug] [Thread-1 (]: SQL status: OK in 0.310 seconds
[0m23:42:06.667673 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=049a9ac4-b297-4f52-abcd-a373c7622b5d) - Closing
[0m23:42:06.759510 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:42:06.761644 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:42:06.887636 [debug] [Thread-1 (]: SQL status: OK in 0.120 seconds
[0m23:42:06.887636 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=f479c284-fe9f-49ee-bad0-7832db3e1251) - Closing
[0m23:42:06.963793 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:42:06.963793 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:42:06.963793 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

      merge into `hive_metastore`.`snapshots`.`address_snapshot` as DBT_INTERNAL_DEST
    
      using `address_snapshot__dbt_tmp` as DBT_INTERNAL_SOURCE
    
    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id
    when matched
     
       and DBT_INTERNAL_DEST.dbt_valid_to is null
     
     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')
        then update
        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to

    when not matched
     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'
        then insert *
    ;

  
[0m23:42:11.253450 [debug] [Thread-1 (]: SQL status: OK in 4.290 seconds
[0m23:42:11.255438 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=de65643b-5176-47ef-b435-9dbb86504f5d) - Closing
[0m23:42:11.377091 [debug] [Thread-1 (]: Applying DROP to: `address_snapshot__dbt_tmp`
[0m23:42:11.385381 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:42:11.387166 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */
DROP VIEW IF EXISTS `address_snapshot__dbt_tmp`
[0m23:42:11.551554 [debug] [Thread-1 (]: SQL status: OK in 0.160 seconds
[0m23:42:11.553647 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=8e3100e4-cc62-49c0-8269-f6aeeb6496d8) - Closing
[0m23:42:11.637771 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '68da9ca7-96e6-415f-804e-0786f6d6ea17', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002450145F1C0>]}
[0m23:42:11.638760 [info ] [Thread-1 (]: 1 of 7 OK snapshotted snapshots.address_snapshot ............................... [[32mOK[0m in 9.77s]
[0m23:42:11.639758 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.address_snapshot
[0m23:42:11.640759 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.customer_snapshot
[0m23:42:11.641776 [info ] [Thread-1 (]: 2 of 7 START snapshot snapshots.customer_snapshot .............................. [RUN]
[0m23:42:11.643292 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.address_snapshot, now snapshot.medalion_dbt_spark.customer_snapshot)
[0m23:42:11.643857 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, name=snapshot.medalion_dbt_spark.customer_snapshot, idle-time=0.009097814559936523s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.address_snapshot
[0m23:42:11.646069 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.customer_snapshot
[0m23:42:11.653271 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.customer_snapshot
[0m23:42:11.662086 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:42:11.663595 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

      describe extended `hive_metastore`.`snapshots`.`customer_snapshot`
  
[0m23:42:12.143244 [debug] [Thread-1 (]: SQL status: OK in 0.480 seconds
[0m23:42:12.146576 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=59dc2973-2ddc-449c-8ecb-8d364ca380e6) - Closing
[0m23:42:12.214509 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:42:12.216471 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */
select * from (
        



with source_data as (
    select
        CustomerId,
        NameStyle,
        Title,
        FirstName,
        MiddleName,
        LastName,
        Suffix,
        CompanyName,
        SalesPerson,
        EmailAddress,
        Phone,
        PasswordHash,
        PasswordSalt
    from `hive_metastore`.`saleslt`.`customer`
)
select *
from source_data

    ) as __dbt_sbq
    where false
    limit 0

    
[0m23:42:12.520740 [debug] [Thread-1 (]: SQL status: OK in 0.300 seconds
[0m23:42:12.523316 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=e8d34f73-e073-49c9-8695-24f3bce545ee) - Closing
[0m23:42:12.606201 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:42:12.607736 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`customer_snapshot`

  
[0m23:42:12.943362 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:42:12.943362 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=071eb30a-6440-4f7c-8979-6e52b27ba3f0) - Closing
[0m23:42:13.018594 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:42:13.023505 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`customer_snapshot`

  
[0m23:42:13.323482 [debug] [Thread-1 (]: SQL status: OK in 0.300 seconds
[0m23:42:13.323482 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=d1ebb8e2-c0dc-4f13-b2a0-3d1c98bf2788) - Closing
[0m23:42:13.423718 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:42:13.423718 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

        
  
    create or replace temporary view `customer_snapshot__dbt_tmp` as
      
    
    with snapshot_query as (

        with source_data as (
    select
        CustomerId,
        NameStyle,
        Title,
        FirstName,
        MiddleName,
        LastName,
        Suffix,
        CompanyName,
        SalesPerson,
        EmailAddress,
        Phone,
        PasswordHash,
        PasswordSalt
    from `hive_metastore`.`saleslt`.`customer`
)
select *
from source_data

    ),

    snapshotted_data as (

        select *, 
    
        CustomerId as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`customer_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        CustomerId as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(CustomerId as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        CustomerId as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        CustomerId as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`CustomerId` != source_data.`CustomerId`
        or
        (
            ((snapshotted_data.`CustomerId` is null) and not (source_data.`CustomerId` is null))
            or
            ((not snapshotted_data.`CustomerId` is null) and (source_data.`CustomerId` is null))
        ) or snapshotted_data.`NameStyle` != source_data.`NameStyle`
        or
        (
            ((snapshotted_data.`NameStyle` is null) and not (source_data.`NameStyle` is null))
            or
            ((not snapshotted_data.`NameStyle` is null) and (source_data.`NameStyle` is null))
        ) or snapshotted_data.`Title` != source_data.`Title`
        or
        (
            ((snapshotted_data.`Title` is null) and not (source_data.`Title` is null))
            or
            ((not snapshotted_data.`Title` is null) and (source_data.`Title` is null))
        ) or snapshotted_data.`FirstName` != source_data.`FirstName`
        or
        (
            ((snapshotted_data.`FirstName` is null) and not (source_data.`FirstName` is null))
            or
            ((not snapshotted_data.`FirstName` is null) and (source_data.`FirstName` is null))
        ) or snapshotted_data.`MiddleName` != source_data.`MiddleName`
        or
        (
            ((snapshotted_data.`MiddleName` is null) and not (source_data.`MiddleName` is null))
            or
            ((not snapshotted_data.`MiddleName` is null) and (source_data.`MiddleName` is null))
        ) or snapshotted_data.`LastName` != source_data.`LastName`
        or
        (
            ((snapshotted_data.`LastName` is null) and not (source_data.`LastName` is null))
            or
            ((not snapshotted_data.`LastName` is null) and (source_data.`LastName` is null))
        ) or snapshotted_data.`Suffix` != source_data.`Suffix`
        or
        (
            ((snapshotted_data.`Suffix` is null) and not (source_data.`Suffix` is null))
            or
            ((not snapshotted_data.`Suffix` is null) and (source_data.`Suffix` is null))
        ) or snapshotted_data.`CompanyName` != source_data.`CompanyName`
        or
        (
            ((snapshotted_data.`CompanyName` is null) and not (source_data.`CompanyName` is null))
            or
            ((not snapshotted_data.`CompanyName` is null) and (source_data.`CompanyName` is null))
        ) or snapshotted_data.`SalesPerson` != source_data.`SalesPerson`
        or
        (
            ((snapshotted_data.`SalesPerson` is null) and not (source_data.`SalesPerson` is null))
            or
            ((not snapshotted_data.`SalesPerson` is null) and (source_data.`SalesPerson` is null))
        ) or snapshotted_data.`EmailAddress` != source_data.`EmailAddress`
        or
        (
            ((snapshotted_data.`EmailAddress` is null) and not (source_data.`EmailAddress` is null))
            or
            ((not snapshotted_data.`EmailAddress` is null) and (source_data.`EmailAddress` is null))
        ) or snapshotted_data.`Phone` != source_data.`Phone`
        or
        (
            ((snapshotted_data.`Phone` is null) and not (source_data.`Phone` is null))
            or
            ((not snapshotted_data.`Phone` is null) and (source_data.`Phone` is null))
        ) or snapshotted_data.`PasswordHash` != source_data.`PasswordHash`
        or
        (
            ((snapshotted_data.`PasswordHash` is null) and not (source_data.`PasswordHash` is null))
            or
            ((not snapshotted_data.`PasswordHash` is null) and (source_data.`PasswordHash` is null))
        ) or snapshotted_data.`PasswordSalt` != source_data.`PasswordSalt`
        or
        (
            ((snapshotted_data.`PasswordSalt` is null) and not (source_data.`PasswordSalt` is null))
            or
            ((not snapshotted_data.`PasswordSalt` is null) and (source_data.`PasswordSalt` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`CustomerId` != source_data.`CustomerId`
        or
        (
            ((snapshotted_data.`CustomerId` is null) and not (source_data.`CustomerId` is null))
            or
            ((not snapshotted_data.`CustomerId` is null) and (source_data.`CustomerId` is null))
        ) or snapshotted_data.`NameStyle` != source_data.`NameStyle`
        or
        (
            ((snapshotted_data.`NameStyle` is null) and not (source_data.`NameStyle` is null))
            or
            ((not snapshotted_data.`NameStyle` is null) and (source_data.`NameStyle` is null))
        ) or snapshotted_data.`Title` != source_data.`Title`
        or
        (
            ((snapshotted_data.`Title` is null) and not (source_data.`Title` is null))
            or
            ((not snapshotted_data.`Title` is null) and (source_data.`Title` is null))
        ) or snapshotted_data.`FirstName` != source_data.`FirstName`
        or
        (
            ((snapshotted_data.`FirstName` is null) and not (source_data.`FirstName` is null))
            or
            ((not snapshotted_data.`FirstName` is null) and (source_data.`FirstName` is null))
        ) or snapshotted_data.`MiddleName` != source_data.`MiddleName`
        or
        (
            ((snapshotted_data.`MiddleName` is null) and not (source_data.`MiddleName` is null))
            or
            ((not snapshotted_data.`MiddleName` is null) and (source_data.`MiddleName` is null))
        ) or snapshotted_data.`LastName` != source_data.`LastName`
        or
        (
            ((snapshotted_data.`LastName` is null) and not (source_data.`LastName` is null))
            or
            ((not snapshotted_data.`LastName` is null) and (source_data.`LastName` is null))
        ) or snapshotted_data.`Suffix` != source_data.`Suffix`
        or
        (
            ((snapshotted_data.`Suffix` is null) and not (source_data.`Suffix` is null))
            or
            ((not snapshotted_data.`Suffix` is null) and (source_data.`Suffix` is null))
        ) or snapshotted_data.`CompanyName` != source_data.`CompanyName`
        or
        (
            ((snapshotted_data.`CompanyName` is null) and not (source_data.`CompanyName` is null))
            or
            ((not snapshotted_data.`CompanyName` is null) and (source_data.`CompanyName` is null))
        ) or snapshotted_data.`SalesPerson` != source_data.`SalesPerson`
        or
        (
            ((snapshotted_data.`SalesPerson` is null) and not (source_data.`SalesPerson` is null))
            or
            ((not snapshotted_data.`SalesPerson` is null) and (source_data.`SalesPerson` is null))
        ) or snapshotted_data.`EmailAddress` != source_data.`EmailAddress`
        or
        (
            ((snapshotted_data.`EmailAddress` is null) and not (source_data.`EmailAddress` is null))
            or
            ((not snapshotted_data.`EmailAddress` is null) and (source_data.`EmailAddress` is null))
        ) or snapshotted_data.`Phone` != source_data.`Phone`
        or
        (
            ((snapshotted_data.`Phone` is null) and not (source_data.`Phone` is null))
            or
            ((not snapshotted_data.`Phone` is null) and (source_data.`Phone` is null))
        ) or snapshotted_data.`PasswordHash` != source_data.`PasswordHash`
        or
        (
            ((snapshotted_data.`PasswordHash` is null) and not (source_data.`PasswordHash` is null))
            or
            ((not snapshotted_data.`PasswordHash` is null) and (source_data.`PasswordHash` is null))
        ) or snapshotted_data.`PasswordSalt` != source_data.`PasswordSalt`
        or
        (
            ((snapshotted_data.`PasswordSalt` is null) and not (source_data.`PasswordSalt` is null))
            or
            ((not snapshotted_data.`PasswordSalt` is null) and (source_data.`PasswordSalt` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

  
    
[0m23:42:13.753331 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:42:13.760932 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=bf4de376-b0ae-478a-b9ea-90426f204c1f) - Closing
[0m23:42:13.833546 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:42:13.833546 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

    
DESCRIBE TABLE `customer_snapshot__dbt_tmp`

  
[0m23:42:13.988549 [debug] [Thread-1 (]: SQL status: OK in 0.160 seconds
[0m23:42:13.993516 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=6e49ba28-1239-4c63-9e95-8644921751fa) - Closing
[0m23:42:14.064926 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:42:14.064926 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`customer_snapshot`

  
[0m23:42:14.382586 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:42:14.384381 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=c52f4196-d0f9-4cae-84d5-136d9fca56e0) - Closing
[0m23:42:14.453949 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:42:14.453949 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

    
DESCRIBE TABLE `customer_snapshot__dbt_tmp`

  
[0m23:42:14.614971 [debug] [Thread-1 (]: SQL status: OK in 0.160 seconds
[0m23:42:14.616928 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=c97a1c78-27cc-4661-903e-e29fb89529e4) - Closing
[0m23:42:14.693237 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:42:14.693237 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`customer_snapshot`

  
[0m23:42:15.003236 [debug] [Thread-1 (]: SQL status: OK in 0.310 seconds
[0m23:42:15.003236 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=9dc2943d-6828-4c1e-a636-639d9083d88d) - Closing
[0m23:42:15.083335 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:42:15.085535 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

    
DESCRIBE TABLE `customer_snapshot__dbt_tmp`

  
[0m23:42:15.223351 [debug] [Thread-1 (]: SQL status: OK in 0.140 seconds
[0m23:42:15.226638 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=6930b35d-68bb-4a51-8dd3-5143fa1689c1) - Closing
[0m23:42:15.305432 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:42:15.306774 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */
select * from (
        
    
    with snapshot_query as (

        with source_data as (
    select
        CustomerId,
        NameStyle,
        Title,
        FirstName,
        MiddleName,
        LastName,
        Suffix,
        CompanyName,
        SalesPerson,
        EmailAddress,
        Phone,
        PasswordHash,
        PasswordSalt
    from `hive_metastore`.`saleslt`.`customer`
)
select *
from source_data

    ),

    snapshotted_data as (

        select *, 
    
        CustomerId as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`customer_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        CustomerId as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(CustomerId as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        CustomerId as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        CustomerId as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`CustomerId` != source_data.`CustomerId`
        or
        (
            ((snapshotted_data.`CustomerId` is null) and not (source_data.`CustomerId` is null))
            or
            ((not snapshotted_data.`CustomerId` is null) and (source_data.`CustomerId` is null))
        ) or snapshotted_data.`NameStyle` != source_data.`NameStyle`
        or
        (
            ((snapshotted_data.`NameStyle` is null) and not (source_data.`NameStyle` is null))
            or
            ((not snapshotted_data.`NameStyle` is null) and (source_data.`NameStyle` is null))
        ) or snapshotted_data.`Title` != source_data.`Title`
        or
        (
            ((snapshotted_data.`Title` is null) and not (source_data.`Title` is null))
            or
            ((not snapshotted_data.`Title` is null) and (source_data.`Title` is null))
        ) or snapshotted_data.`FirstName` != source_data.`FirstName`
        or
        (
            ((snapshotted_data.`FirstName` is null) and not (source_data.`FirstName` is null))
            or
            ((not snapshotted_data.`FirstName` is null) and (source_data.`FirstName` is null))
        ) or snapshotted_data.`MiddleName` != source_data.`MiddleName`
        or
        (
            ((snapshotted_data.`MiddleName` is null) and not (source_data.`MiddleName` is null))
            or
            ((not snapshotted_data.`MiddleName` is null) and (source_data.`MiddleName` is null))
        ) or snapshotted_data.`LastName` != source_data.`LastName`
        or
        (
            ((snapshotted_data.`LastName` is null) and not (source_data.`LastName` is null))
            or
            ((not snapshotted_data.`LastName` is null) and (source_data.`LastName` is null))
        ) or snapshotted_data.`Suffix` != source_data.`Suffix`
        or
        (
            ((snapshotted_data.`Suffix` is null) and not (source_data.`Suffix` is null))
            or
            ((not snapshotted_data.`Suffix` is null) and (source_data.`Suffix` is null))
        ) or snapshotted_data.`CompanyName` != source_data.`CompanyName`
        or
        (
            ((snapshotted_data.`CompanyName` is null) and not (source_data.`CompanyName` is null))
            or
            ((not snapshotted_data.`CompanyName` is null) and (source_data.`CompanyName` is null))
        ) or snapshotted_data.`SalesPerson` != source_data.`SalesPerson`
        or
        (
            ((snapshotted_data.`SalesPerson` is null) and not (source_data.`SalesPerson` is null))
            or
            ((not snapshotted_data.`SalesPerson` is null) and (source_data.`SalesPerson` is null))
        ) or snapshotted_data.`EmailAddress` != source_data.`EmailAddress`
        or
        (
            ((snapshotted_data.`EmailAddress` is null) and not (source_data.`EmailAddress` is null))
            or
            ((not snapshotted_data.`EmailAddress` is null) and (source_data.`EmailAddress` is null))
        ) or snapshotted_data.`Phone` != source_data.`Phone`
        or
        (
            ((snapshotted_data.`Phone` is null) and not (source_data.`Phone` is null))
            or
            ((not snapshotted_data.`Phone` is null) and (source_data.`Phone` is null))
        ) or snapshotted_data.`PasswordHash` != source_data.`PasswordHash`
        or
        (
            ((snapshotted_data.`PasswordHash` is null) and not (source_data.`PasswordHash` is null))
            or
            ((not snapshotted_data.`PasswordHash` is null) and (source_data.`PasswordHash` is null))
        ) or snapshotted_data.`PasswordSalt` != source_data.`PasswordSalt`
        or
        (
            ((snapshotted_data.`PasswordSalt` is null) and not (source_data.`PasswordSalt` is null))
            or
            ((not snapshotted_data.`PasswordSalt` is null) and (source_data.`PasswordSalt` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`CustomerId` != source_data.`CustomerId`
        or
        (
            ((snapshotted_data.`CustomerId` is null) and not (source_data.`CustomerId` is null))
            or
            ((not snapshotted_data.`CustomerId` is null) and (source_data.`CustomerId` is null))
        ) or snapshotted_data.`NameStyle` != source_data.`NameStyle`
        or
        (
            ((snapshotted_data.`NameStyle` is null) and not (source_data.`NameStyle` is null))
            or
            ((not snapshotted_data.`NameStyle` is null) and (source_data.`NameStyle` is null))
        ) or snapshotted_data.`Title` != source_data.`Title`
        or
        (
            ((snapshotted_data.`Title` is null) and not (source_data.`Title` is null))
            or
            ((not snapshotted_data.`Title` is null) and (source_data.`Title` is null))
        ) or snapshotted_data.`FirstName` != source_data.`FirstName`
        or
        (
            ((snapshotted_data.`FirstName` is null) and not (source_data.`FirstName` is null))
            or
            ((not snapshotted_data.`FirstName` is null) and (source_data.`FirstName` is null))
        ) or snapshotted_data.`MiddleName` != source_data.`MiddleName`
        or
        (
            ((snapshotted_data.`MiddleName` is null) and not (source_data.`MiddleName` is null))
            or
            ((not snapshotted_data.`MiddleName` is null) and (source_data.`MiddleName` is null))
        ) or snapshotted_data.`LastName` != source_data.`LastName`
        or
        (
            ((snapshotted_data.`LastName` is null) and not (source_data.`LastName` is null))
            or
            ((not snapshotted_data.`LastName` is null) and (source_data.`LastName` is null))
        ) or snapshotted_data.`Suffix` != source_data.`Suffix`
        or
        (
            ((snapshotted_data.`Suffix` is null) and not (source_data.`Suffix` is null))
            or
            ((not snapshotted_data.`Suffix` is null) and (source_data.`Suffix` is null))
        ) or snapshotted_data.`CompanyName` != source_data.`CompanyName`
        or
        (
            ((snapshotted_data.`CompanyName` is null) and not (source_data.`CompanyName` is null))
            or
            ((not snapshotted_data.`CompanyName` is null) and (source_data.`CompanyName` is null))
        ) or snapshotted_data.`SalesPerson` != source_data.`SalesPerson`
        or
        (
            ((snapshotted_data.`SalesPerson` is null) and not (source_data.`SalesPerson` is null))
            or
            ((not snapshotted_data.`SalesPerson` is null) and (source_data.`SalesPerson` is null))
        ) or snapshotted_data.`EmailAddress` != source_data.`EmailAddress`
        or
        (
            ((snapshotted_data.`EmailAddress` is null) and not (source_data.`EmailAddress` is null))
            or
            ((not snapshotted_data.`EmailAddress` is null) and (source_data.`EmailAddress` is null))
        ) or snapshotted_data.`Phone` != source_data.`Phone`
        or
        (
            ((snapshotted_data.`Phone` is null) and not (source_data.`Phone` is null))
            or
            ((not snapshotted_data.`Phone` is null) and (source_data.`Phone` is null))
        ) or snapshotted_data.`PasswordHash` != source_data.`PasswordHash`
        or
        (
            ((snapshotted_data.`PasswordHash` is null) and not (source_data.`PasswordHash` is null))
            or
            ((not snapshotted_data.`PasswordHash` is null) and (source_data.`PasswordHash` is null))
        ) or snapshotted_data.`PasswordSalt` != source_data.`PasswordSalt`
        or
        (
            ((snapshotted_data.`PasswordSalt` is null) and not (source_data.`PasswordSalt` is null))
            or
            ((not snapshotted_data.`PasswordSalt` is null) and (source_data.`PasswordSalt` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

    ) as __dbt_sbq
    where false
    limit 0

[0m23:42:15.637390 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:42:15.637390 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=2526e842-e1b4-488c-a6f3-7df0272651b5) - Closing
[0m23:42:15.715684 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:42:15.717760 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:42:15.893367 [debug] [Thread-1 (]: SQL status: OK in 0.180 seconds
[0m23:42:15.893367 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=d964712f-01e0-4fa2-8eb1-396f544f762e) - Closing
[0m23:42:15.977983 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:42:15.985493 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:42:15.987524 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

      merge into `hive_metastore`.`snapshots`.`customer_snapshot` as DBT_INTERNAL_DEST
    
      using `customer_snapshot__dbt_tmp` as DBT_INTERNAL_SOURCE
    
    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id
    when matched
     
       and DBT_INTERNAL_DEST.dbt_valid_to is null
     
     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')
        then update
        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to

    when not matched
     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'
        then insert *
    ;

  
[0m23:42:20.525674 [debug] [Thread-1 (]: SQL status: OK in 4.540 seconds
[0m23:42:20.527672 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=cc2a9c55-2b51-4354-8043-482aa4810fcc) - Closing
[0m23:42:20.617876 [debug] [Thread-1 (]: Applying DROP to: `customer_snapshot__dbt_tmp`
[0m23:42:20.625435 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:42:20.626454 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */
DROP VIEW IF EXISTS `customer_snapshot__dbt_tmp`
[0m23:42:20.778370 [debug] [Thread-1 (]: SQL status: OK in 0.150 seconds
[0m23:42:20.780208 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=edc3aad5-224a-4497-8238-ef8d6719acaa) - Closing
[0m23:42:20.853196 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '68da9ca7-96e6-415f-804e-0786f6d6ea17', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002450145F1C0>]}
[0m23:42:20.860579 [info ] [Thread-1 (]: 2 of 7 OK snapshotted snapshots.customer_snapshot .............................. [[32mOK[0m in 9.21s]
[0m23:42:20.866907 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.customer_snapshot
[0m23:42:20.868913 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m23:42:20.872756 [info ] [Thread-1 (]: 3 of 7 START snapshot snapshots.customeraddress_snapshot ....................... [RUN]
[0m23:42:20.876133 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.customer_snapshot, now snapshot.medalion_dbt_spark.customeraddress_snapshot)
[0m23:42:20.877131 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, name=snapshot.medalion_dbt_spark.customeraddress_snapshot, idle-time=0.02393484115600586s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.customer_snapshot
[0m23:42:20.877131 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m23:42:20.895608 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m23:42:20.909804 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:42:20.911824 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

      describe extended `hive_metastore`.`snapshots`.`customeraddress_snapshot`
  
[0m23:42:21.905275 [debug] [Thread-1 (]: SQL status: OK in 0.990 seconds
[0m23:42:21.913398 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=90341d16-6ef4-4b8b-9362-476438f1d83e) - Closing
[0m23:42:21.993294 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:42:21.995279 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */
select * from (
        



with source_data as (
    select
        CustomerId,
        AddressId,
        AddressType
    from `hive_metastore`.`saleslt`.`customeraddress`
)
select *
from source_data

    ) as __dbt_sbq
    where false
    limit 0

    
[0m23:42:22.285447 [debug] [Thread-1 (]: SQL status: OK in 0.290 seconds
[0m23:42:22.287552 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=a72d14ac-58be-41c6-bcd1-4ef1f236a820) - Closing
[0m23:42:22.363343 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:42:22.365388 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`customeraddress_snapshot`

  
[0m23:42:22.693491 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:42:22.693491 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=37be69a8-8c0e-4b84-9e5d-b56643b0a71f) - Closing
[0m23:42:22.773410 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:42:22.773410 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`customeraddress_snapshot`

  
[0m23:42:23.151062 [debug] [Thread-1 (]: SQL status: OK in 0.380 seconds
[0m23:42:23.153443 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=ee3c5567-cc19-490f-9555-b965037f2f49) - Closing
[0m23:42:23.232162 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:42:23.233164 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

        
  
    create or replace temporary view `customeraddress_snapshot__dbt_tmp` as
      
    
    with snapshot_query as (

        with source_data as (
    select
        CustomerId,
        AddressId,
        AddressType
    from `hive_metastore`.`saleslt`.`customeraddress`
)
select *
from source_data

    ),

    snapshotted_data as (

        select *, 
    
        CustomerId||'-'||AddressId as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`customeraddress_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        CustomerId||'-'||AddressId as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(CustomerId||'-'||AddressId as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        CustomerId||'-'||AddressId as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        CustomerId||'-'||AddressId as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`CustomerId` != source_data.`CustomerId`
        or
        (
            ((snapshotted_data.`CustomerId` is null) and not (source_data.`CustomerId` is null))
            or
            ((not snapshotted_data.`CustomerId` is null) and (source_data.`CustomerId` is null))
        ) or snapshotted_data.`AddressId` != source_data.`AddressId`
        or
        (
            ((snapshotted_data.`AddressId` is null) and not (source_data.`AddressId` is null))
            or
            ((not snapshotted_data.`AddressId` is null) and (source_data.`AddressId` is null))
        ) or snapshotted_data.`AddressType` != source_data.`AddressType`
        or
        (
            ((snapshotted_data.`AddressType` is null) and not (source_data.`AddressType` is null))
            or
            ((not snapshotted_data.`AddressType` is null) and (source_data.`AddressType` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`CustomerId` != source_data.`CustomerId`
        or
        (
            ((snapshotted_data.`CustomerId` is null) and not (source_data.`CustomerId` is null))
            or
            ((not snapshotted_data.`CustomerId` is null) and (source_data.`CustomerId` is null))
        ) or snapshotted_data.`AddressId` != source_data.`AddressId`
        or
        (
            ((snapshotted_data.`AddressId` is null) and not (source_data.`AddressId` is null))
            or
            ((not snapshotted_data.`AddressId` is null) and (source_data.`AddressId` is null))
        ) or snapshotted_data.`AddressType` != source_data.`AddressType`
        or
        (
            ((snapshotted_data.`AddressType` is null) and not (source_data.`AddressType` is null))
            or
            ((not snapshotted_data.`AddressType` is null) and (source_data.`AddressType` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

  
    
[0m23:42:23.555828 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:42:23.557831 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=6532187f-54c2-4013-b51c-1fd3081cab69) - Closing
[0m23:42:23.639197 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:42:23.640186 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

    
DESCRIBE TABLE `customeraddress_snapshot__dbt_tmp`

  
[0m23:42:23.824466 [debug] [Thread-1 (]: SQL status: OK in 0.180 seconds
[0m23:42:23.824466 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=4b9d08e7-7f57-4049-8080-f8765083797b) - Closing
[0m23:42:23.913233 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:42:23.913233 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`customeraddress_snapshot`

  
[0m23:42:24.233411 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:42:24.239634 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=f55b64ed-65fd-4736-94b4-7715a862a204) - Closing
[0m23:42:24.347397 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:42:24.351413 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

    
DESCRIBE TABLE `customeraddress_snapshot__dbt_tmp`

  
[0m23:42:24.510801 [debug] [Thread-1 (]: SQL status: OK in 0.160 seconds
[0m23:42:24.517644 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=fa4150f9-f6a8-4c9e-acd9-d82fe636a083) - Closing
[0m23:42:24.593440 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:42:24.593440 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`customeraddress_snapshot`

  
[0m23:42:24.911588 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:42:24.914948 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=5e9a0b87-d624-4a90-835f-fc343ae30cb5) - Closing
[0m23:42:25.011886 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:42:25.011886 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

    
DESCRIBE TABLE `customeraddress_snapshot__dbt_tmp`

  
[0m23:42:25.155965 [debug] [Thread-1 (]: SQL status: OK in 0.140 seconds
[0m23:42:25.156413 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=7f06ddf8-d256-4857-a42a-c8ab38ed2442) - Closing
[0m23:42:25.228234 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:42:25.230244 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */
select * from (
        
    
    with snapshot_query as (

        with source_data as (
    select
        CustomerId,
        AddressId,
        AddressType
    from `hive_metastore`.`saleslt`.`customeraddress`
)
select *
from source_data

    ),

    snapshotted_data as (

        select *, 
    
        CustomerId||'-'||AddressId as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`customeraddress_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        CustomerId||'-'||AddressId as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(CustomerId||'-'||AddressId as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        CustomerId||'-'||AddressId as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        CustomerId||'-'||AddressId as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`CustomerId` != source_data.`CustomerId`
        or
        (
            ((snapshotted_data.`CustomerId` is null) and not (source_data.`CustomerId` is null))
            or
            ((not snapshotted_data.`CustomerId` is null) and (source_data.`CustomerId` is null))
        ) or snapshotted_data.`AddressId` != source_data.`AddressId`
        or
        (
            ((snapshotted_data.`AddressId` is null) and not (source_data.`AddressId` is null))
            or
            ((not snapshotted_data.`AddressId` is null) and (source_data.`AddressId` is null))
        ) or snapshotted_data.`AddressType` != source_data.`AddressType`
        or
        (
            ((snapshotted_data.`AddressType` is null) and not (source_data.`AddressType` is null))
            or
            ((not snapshotted_data.`AddressType` is null) and (source_data.`AddressType` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`CustomerId` != source_data.`CustomerId`
        or
        (
            ((snapshotted_data.`CustomerId` is null) and not (source_data.`CustomerId` is null))
            or
            ((not snapshotted_data.`CustomerId` is null) and (source_data.`CustomerId` is null))
        ) or snapshotted_data.`AddressId` != source_data.`AddressId`
        or
        (
            ((snapshotted_data.`AddressId` is null) and not (source_data.`AddressId` is null))
            or
            ((not snapshotted_data.`AddressId` is null) and (source_data.`AddressId` is null))
        ) or snapshotted_data.`AddressType` != source_data.`AddressType`
        or
        (
            ((snapshotted_data.`AddressType` is null) and not (source_data.`AddressType` is null))
            or
            ((not snapshotted_data.`AddressType` is null) and (source_data.`AddressType` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

    ) as __dbt_sbq
    where false
    limit 0

[0m23:42:25.537623 [debug] [Thread-1 (]: SQL status: OK in 0.310 seconds
[0m23:42:25.543620 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=9c2cca19-b891-44b0-9bd5-2eac2ac9f68c) - Closing
[0m23:42:25.623488 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:42:25.626739 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:42:25.758710 [debug] [Thread-1 (]: SQL status: OK in 0.130 seconds
[0m23:42:25.763392 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=91fc8555-43c3-45d1-84c5-5ae063ce5b13) - Closing
[0m23:42:25.837324 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:42:25.848698 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:42:25.848698 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

      merge into `hive_metastore`.`snapshots`.`customeraddress_snapshot` as DBT_INTERNAL_DEST
    
      using `customeraddress_snapshot__dbt_tmp` as DBT_INTERNAL_SOURCE
    
    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id
    when matched
     
       and DBT_INTERNAL_DEST.dbt_valid_to is null
     
     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')
        then update
        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to

    when not matched
     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'
        then insert *
    ;

  
[0m23:42:29.543318 [debug] [Thread-1 (]: SQL status: OK in 3.690 seconds
[0m23:42:29.547392 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=06b94093-c130-40f9-a429-eeea6dbe15dc) - Closing
[0m23:42:29.638270 [debug] [Thread-1 (]: Applying DROP to: `customeraddress_snapshot__dbt_tmp`
[0m23:42:29.641266 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:42:29.643775 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */
DROP VIEW IF EXISTS `customeraddress_snapshot__dbt_tmp`
[0m23:42:29.783130 [debug] [Thread-1 (]: SQL status: OK in 0.130 seconds
[0m23:42:29.784867 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=a365cc23-6ad6-4485-a3a1-1cd569cc1ad4) - Closing
[0m23:42:29.864952 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '68da9ca7-96e6-415f-804e-0786f6d6ea17', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002451FAB0040>]}
[0m23:42:29.868288 [info ] [Thread-1 (]: 3 of 7 OK snapshotted snapshots.customeraddress_snapshot ....................... [[32mOK[0m in 8.99s]
[0m23:42:29.870343 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m23:42:29.872339 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.product_snapshot
[0m23:42:29.874967 [info ] [Thread-1 (]: 4 of 7 START snapshot snapshots.product_snapshot ............................... [RUN]
[0m23:42:29.877750 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.customeraddress_snapshot, now snapshot.medalion_dbt_spark.product_snapshot)
[0m23:42:29.879361 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, name=snapshot.medalion_dbt_spark.product_snapshot, idle-time=0.01544046401977539s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m23:42:29.882473 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.product_snapshot
[0m23:42:29.893206 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.product_snapshot
[0m23:42:29.903578 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:42:29.905586 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

      describe extended `hive_metastore`.`snapshots`.`product_snapshot`
  
[0m23:42:30.521001 [debug] [Thread-1 (]: SQL status: OK in 0.610 seconds
[0m23:42:30.526596 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=a76e3212-bf52-43a9-b126-fe5da06fec15) - Closing
[0m23:42:30.617718 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:42:30.617718 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */
select * from (
        



with product_snapshot as (
    SELECT
        ProductID,
        Name,
        ProductNumber,
        Color,
        StandardCost,
        ListPrice,
        Size,
        Weight,
        ProductCategoryID,
        ProductModelID,
        SellStartDate,
        SellEndDate,
        DiscontinuedDate,
        ThumbNailPhoto,
        ThumbnailPhotoFileName
    FROM `hive_metastore`.`saleslt`.`product`
)

select * from product_snapshot

    ) as __dbt_sbq
    where false
    limit 0

    
[0m23:42:31.011199 [debug] [Thread-1 (]: SQL status: OK in 0.390 seconds
[0m23:42:31.063109 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=ea5d415f-1ae8-4ddf-9aeb-7f52bbb5a79c) - Closing
[0m23:42:31.138822 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:42:31.143296 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`product_snapshot`

  
[0m23:42:31.443318 [debug] [Thread-1 (]: SQL status: OK in 0.300 seconds
[0m23:42:31.447939 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=d29e8819-99f8-4ba3-b2f7-c0ff887b0180) - Closing
[0m23:42:31.533477 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:42:31.535515 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`product_snapshot`

  
[0m23:42:31.853353 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:42:31.853353 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=24072b7a-2963-40c1-97ea-1719959c8b31) - Closing
[0m23:42:31.935184 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:42:31.937195 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

        
  
    create or replace temporary view `product_snapshot__dbt_tmp` as
      
    
    with snapshot_query as (

        with product_snapshot as (
    SELECT
        ProductID,
        Name,
        ProductNumber,
        Color,
        StandardCost,
        ListPrice,
        Size,
        Weight,
        ProductCategoryID,
        ProductModelID,
        SellStartDate,
        SellEndDate,
        DiscontinuedDate,
        ThumbNailPhoto,
        ThumbnailPhotoFileName
    FROM `hive_metastore`.`saleslt`.`product`
)

select * from product_snapshot

    ),

    snapshotted_data as (

        select *, 
    
        ProductID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`product_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        ProductID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(ProductID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        ProductID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        ProductID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`ProductID` != source_data.`ProductID`
        or
        (
            ((snapshotted_data.`ProductID` is null) and not (source_data.`ProductID` is null))
            or
            ((not snapshotted_data.`ProductID` is null) and (source_data.`ProductID` is null))
        ) or snapshotted_data.`Name` != source_data.`Name`
        or
        (
            ((snapshotted_data.`Name` is null) and not (source_data.`Name` is null))
            or
            ((not snapshotted_data.`Name` is null) and (source_data.`Name` is null))
        ) or snapshotted_data.`ProductNumber` != source_data.`ProductNumber`
        or
        (
            ((snapshotted_data.`ProductNumber` is null) and not (source_data.`ProductNumber` is null))
            or
            ((not snapshotted_data.`ProductNumber` is null) and (source_data.`ProductNumber` is null))
        ) or snapshotted_data.`Color` != source_data.`Color`
        or
        (
            ((snapshotted_data.`Color` is null) and not (source_data.`Color` is null))
            or
            ((not snapshotted_data.`Color` is null) and (source_data.`Color` is null))
        ) or snapshotted_data.`StandardCost` != source_data.`StandardCost`
        or
        (
            ((snapshotted_data.`StandardCost` is null) and not (source_data.`StandardCost` is null))
            or
            ((not snapshotted_data.`StandardCost` is null) and (source_data.`StandardCost` is null))
        ) or snapshotted_data.`ListPrice` != source_data.`ListPrice`
        or
        (
            ((snapshotted_data.`ListPrice` is null) and not (source_data.`ListPrice` is null))
            or
            ((not snapshotted_data.`ListPrice` is null) and (source_data.`ListPrice` is null))
        ) or snapshotted_data.`Size` != source_data.`Size`
        or
        (
            ((snapshotted_data.`Size` is null) and not (source_data.`Size` is null))
            or
            ((not snapshotted_data.`Size` is null) and (source_data.`Size` is null))
        ) or snapshotted_data.`Weight` != source_data.`Weight`
        or
        (
            ((snapshotted_data.`Weight` is null) and not (source_data.`Weight` is null))
            or
            ((not snapshotted_data.`Weight` is null) and (source_data.`Weight` is null))
        ) or snapshotted_data.`ProductCategoryID` != source_data.`ProductCategoryID`
        or
        (
            ((snapshotted_data.`ProductCategoryID` is null) and not (source_data.`ProductCategoryID` is null))
            or
            ((not snapshotted_data.`ProductCategoryID` is null) and (source_data.`ProductCategoryID` is null))
        ) or snapshotted_data.`ProductModelID` != source_data.`ProductModelID`
        or
        (
            ((snapshotted_data.`ProductModelID` is null) and not (source_data.`ProductModelID` is null))
            or
            ((not snapshotted_data.`ProductModelID` is null) and (source_data.`ProductModelID` is null))
        ) or snapshotted_data.`SellStartDate` != source_data.`SellStartDate`
        or
        (
            ((snapshotted_data.`SellStartDate` is null) and not (source_data.`SellStartDate` is null))
            or
            ((not snapshotted_data.`SellStartDate` is null) and (source_data.`SellStartDate` is null))
        ) or snapshotted_data.`SellEndDate` != source_data.`SellEndDate`
        or
        (
            ((snapshotted_data.`SellEndDate` is null) and not (source_data.`SellEndDate` is null))
            or
            ((not snapshotted_data.`SellEndDate` is null) and (source_data.`SellEndDate` is null))
        ) or snapshotted_data.`DiscontinuedDate` != source_data.`DiscontinuedDate`
        or
        (
            ((snapshotted_data.`DiscontinuedDate` is null) and not (source_data.`DiscontinuedDate` is null))
            or
            ((not snapshotted_data.`DiscontinuedDate` is null) and (source_data.`DiscontinuedDate` is null))
        ) or snapshotted_data.`ThumbNailPhoto` != source_data.`ThumbNailPhoto`
        or
        (
            ((snapshotted_data.`ThumbNailPhoto` is null) and not (source_data.`ThumbNailPhoto` is null))
            or
            ((not snapshotted_data.`ThumbNailPhoto` is null) and (source_data.`ThumbNailPhoto` is null))
        ) or snapshotted_data.`ThumbnailPhotoFileName` != source_data.`ThumbnailPhotoFileName`
        or
        (
            ((snapshotted_data.`ThumbnailPhotoFileName` is null) and not (source_data.`ThumbnailPhotoFileName` is null))
            or
            ((not snapshotted_data.`ThumbnailPhotoFileName` is null) and (source_data.`ThumbnailPhotoFileName` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`ProductID` != source_data.`ProductID`
        or
        (
            ((snapshotted_data.`ProductID` is null) and not (source_data.`ProductID` is null))
            or
            ((not snapshotted_data.`ProductID` is null) and (source_data.`ProductID` is null))
        ) or snapshotted_data.`Name` != source_data.`Name`
        or
        (
            ((snapshotted_data.`Name` is null) and not (source_data.`Name` is null))
            or
            ((not snapshotted_data.`Name` is null) and (source_data.`Name` is null))
        ) or snapshotted_data.`ProductNumber` != source_data.`ProductNumber`
        or
        (
            ((snapshotted_data.`ProductNumber` is null) and not (source_data.`ProductNumber` is null))
            or
            ((not snapshotted_data.`ProductNumber` is null) and (source_data.`ProductNumber` is null))
        ) or snapshotted_data.`Color` != source_data.`Color`
        or
        (
            ((snapshotted_data.`Color` is null) and not (source_data.`Color` is null))
            or
            ((not snapshotted_data.`Color` is null) and (source_data.`Color` is null))
        ) or snapshotted_data.`StandardCost` != source_data.`StandardCost`
        or
        (
            ((snapshotted_data.`StandardCost` is null) and not (source_data.`StandardCost` is null))
            or
            ((not snapshotted_data.`StandardCost` is null) and (source_data.`StandardCost` is null))
        ) or snapshotted_data.`ListPrice` != source_data.`ListPrice`
        or
        (
            ((snapshotted_data.`ListPrice` is null) and not (source_data.`ListPrice` is null))
            or
            ((not snapshotted_data.`ListPrice` is null) and (source_data.`ListPrice` is null))
        ) or snapshotted_data.`Size` != source_data.`Size`
        or
        (
            ((snapshotted_data.`Size` is null) and not (source_data.`Size` is null))
            or
            ((not snapshotted_data.`Size` is null) and (source_data.`Size` is null))
        ) or snapshotted_data.`Weight` != source_data.`Weight`
        or
        (
            ((snapshotted_data.`Weight` is null) and not (source_data.`Weight` is null))
            or
            ((not snapshotted_data.`Weight` is null) and (source_data.`Weight` is null))
        ) or snapshotted_data.`ProductCategoryID` != source_data.`ProductCategoryID`
        or
        (
            ((snapshotted_data.`ProductCategoryID` is null) and not (source_data.`ProductCategoryID` is null))
            or
            ((not snapshotted_data.`ProductCategoryID` is null) and (source_data.`ProductCategoryID` is null))
        ) or snapshotted_data.`ProductModelID` != source_data.`ProductModelID`
        or
        (
            ((snapshotted_data.`ProductModelID` is null) and not (source_data.`ProductModelID` is null))
            or
            ((not snapshotted_data.`ProductModelID` is null) and (source_data.`ProductModelID` is null))
        ) or snapshotted_data.`SellStartDate` != source_data.`SellStartDate`
        or
        (
            ((snapshotted_data.`SellStartDate` is null) and not (source_data.`SellStartDate` is null))
            or
            ((not snapshotted_data.`SellStartDate` is null) and (source_data.`SellStartDate` is null))
        ) or snapshotted_data.`SellEndDate` != source_data.`SellEndDate`
        or
        (
            ((snapshotted_data.`SellEndDate` is null) and not (source_data.`SellEndDate` is null))
            or
            ((not snapshotted_data.`SellEndDate` is null) and (source_data.`SellEndDate` is null))
        ) or snapshotted_data.`DiscontinuedDate` != source_data.`DiscontinuedDate`
        or
        (
            ((snapshotted_data.`DiscontinuedDate` is null) and not (source_data.`DiscontinuedDate` is null))
            or
            ((not snapshotted_data.`DiscontinuedDate` is null) and (source_data.`DiscontinuedDate` is null))
        ) or snapshotted_data.`ThumbNailPhoto` != source_data.`ThumbNailPhoto`
        or
        (
            ((snapshotted_data.`ThumbNailPhoto` is null) and not (source_data.`ThumbNailPhoto` is null))
            or
            ((not snapshotted_data.`ThumbNailPhoto` is null) and (source_data.`ThumbNailPhoto` is null))
        ) or snapshotted_data.`ThumbnailPhotoFileName` != source_data.`ThumbnailPhotoFileName`
        or
        (
            ((snapshotted_data.`ThumbnailPhotoFileName` is null) and not (source_data.`ThumbnailPhotoFileName` is null))
            or
            ((not snapshotted_data.`ThumbnailPhotoFileName` is null) and (source_data.`ThumbnailPhotoFileName` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

  
    
[0m23:42:32.269970 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:42:32.269970 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=1c18c801-4497-41d2-8e3e-e9662a28da45) - Closing
[0m23:42:32.339949 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:42:32.339949 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

    
DESCRIBE TABLE `product_snapshot__dbt_tmp`

  
[0m23:42:32.493433 [debug] [Thread-1 (]: SQL status: OK in 0.150 seconds
[0m23:42:32.500187 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=39e14fc7-e94d-488e-944d-984317805a08) - Closing
[0m23:42:32.572170 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:42:32.573183 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`product_snapshot`

  
[0m23:42:32.910250 [debug] [Thread-1 (]: SQL status: OK in 0.340 seconds
[0m23:42:32.918853 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=84bad204-c428-4b2a-9c2e-b3cc1f29670a) - Closing
[0m23:42:33.007785 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:42:33.007785 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

    
DESCRIBE TABLE `product_snapshot__dbt_tmp`

  
[0m23:42:33.166477 [debug] [Thread-1 (]: SQL status: OK in 0.160 seconds
[0m23:42:33.169477 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=d0998c71-f19a-4e36-b605-185ac2f83ee8) - Closing
[0m23:42:33.245383 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:42:33.246393 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`product_snapshot`

  
[0m23:42:33.563253 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:42:33.563253 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=c800aea6-7069-4ff9-8628-f62caf6c83ed) - Closing
[0m23:42:33.645312 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:42:33.646872 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

    
DESCRIBE TABLE `product_snapshot__dbt_tmp`

  
[0m23:42:33.791525 [debug] [Thread-1 (]: SQL status: OK in 0.140 seconds
[0m23:42:33.793513 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=7cbeefab-4e4b-42f5-a2d7-d6b68048fc4c) - Closing
[0m23:42:33.862411 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:42:33.863411 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */
select * from (
        
    
    with snapshot_query as (

        with product_snapshot as (
    SELECT
        ProductID,
        Name,
        ProductNumber,
        Color,
        StandardCost,
        ListPrice,
        Size,
        Weight,
        ProductCategoryID,
        ProductModelID,
        SellStartDate,
        SellEndDate,
        DiscontinuedDate,
        ThumbNailPhoto,
        ThumbnailPhotoFileName
    FROM `hive_metastore`.`saleslt`.`product`
)

select * from product_snapshot

    ),

    snapshotted_data as (

        select *, 
    
        ProductID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`product_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        ProductID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(ProductID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        ProductID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        ProductID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`ProductID` != source_data.`ProductID`
        or
        (
            ((snapshotted_data.`ProductID` is null) and not (source_data.`ProductID` is null))
            or
            ((not snapshotted_data.`ProductID` is null) and (source_data.`ProductID` is null))
        ) or snapshotted_data.`Name` != source_data.`Name`
        or
        (
            ((snapshotted_data.`Name` is null) and not (source_data.`Name` is null))
            or
            ((not snapshotted_data.`Name` is null) and (source_data.`Name` is null))
        ) or snapshotted_data.`ProductNumber` != source_data.`ProductNumber`
        or
        (
            ((snapshotted_data.`ProductNumber` is null) and not (source_data.`ProductNumber` is null))
            or
            ((not snapshotted_data.`ProductNumber` is null) and (source_data.`ProductNumber` is null))
        ) or snapshotted_data.`Color` != source_data.`Color`
        or
        (
            ((snapshotted_data.`Color` is null) and not (source_data.`Color` is null))
            or
            ((not snapshotted_data.`Color` is null) and (source_data.`Color` is null))
        ) or snapshotted_data.`StandardCost` != source_data.`StandardCost`
        or
        (
            ((snapshotted_data.`StandardCost` is null) and not (source_data.`StandardCost` is null))
            or
            ((not snapshotted_data.`StandardCost` is null) and (source_data.`StandardCost` is null))
        ) or snapshotted_data.`ListPrice` != source_data.`ListPrice`
        or
        (
            ((snapshotted_data.`ListPrice` is null) and not (source_data.`ListPrice` is null))
            or
            ((not snapshotted_data.`ListPrice` is null) and (source_data.`ListPrice` is null))
        ) or snapshotted_data.`Size` != source_data.`Size`
        or
        (
            ((snapshotted_data.`Size` is null) and not (source_data.`Size` is null))
            or
            ((not snapshotted_data.`Size` is null) and (source_data.`Size` is null))
        ) or snapshotted_data.`Weight` != source_data.`Weight`
        or
        (
            ((snapshotted_data.`Weight` is null) and not (source_data.`Weight` is null))
            or
            ((not snapshotted_data.`Weight` is null) and (source_data.`Weight` is null))
        ) or snapshotted_data.`ProductCategoryID` != source_data.`ProductCategoryID`
        or
        (
            ((snapshotted_data.`ProductCategoryID` is null) and not (source_data.`ProductCategoryID` is null))
            or
            ((not snapshotted_data.`ProductCategoryID` is null) and (source_data.`ProductCategoryID` is null))
        ) or snapshotted_data.`ProductModelID` != source_data.`ProductModelID`
        or
        (
            ((snapshotted_data.`ProductModelID` is null) and not (source_data.`ProductModelID` is null))
            or
            ((not snapshotted_data.`ProductModelID` is null) and (source_data.`ProductModelID` is null))
        ) or snapshotted_data.`SellStartDate` != source_data.`SellStartDate`
        or
        (
            ((snapshotted_data.`SellStartDate` is null) and not (source_data.`SellStartDate` is null))
            or
            ((not snapshotted_data.`SellStartDate` is null) and (source_data.`SellStartDate` is null))
        ) or snapshotted_data.`SellEndDate` != source_data.`SellEndDate`
        or
        (
            ((snapshotted_data.`SellEndDate` is null) and not (source_data.`SellEndDate` is null))
            or
            ((not snapshotted_data.`SellEndDate` is null) and (source_data.`SellEndDate` is null))
        ) or snapshotted_data.`DiscontinuedDate` != source_data.`DiscontinuedDate`
        or
        (
            ((snapshotted_data.`DiscontinuedDate` is null) and not (source_data.`DiscontinuedDate` is null))
            or
            ((not snapshotted_data.`DiscontinuedDate` is null) and (source_data.`DiscontinuedDate` is null))
        ) or snapshotted_data.`ThumbNailPhoto` != source_data.`ThumbNailPhoto`
        or
        (
            ((snapshotted_data.`ThumbNailPhoto` is null) and not (source_data.`ThumbNailPhoto` is null))
            or
            ((not snapshotted_data.`ThumbNailPhoto` is null) and (source_data.`ThumbNailPhoto` is null))
        ) or snapshotted_data.`ThumbnailPhotoFileName` != source_data.`ThumbnailPhotoFileName`
        or
        (
            ((snapshotted_data.`ThumbnailPhotoFileName` is null) and not (source_data.`ThumbnailPhotoFileName` is null))
            or
            ((not snapshotted_data.`ThumbnailPhotoFileName` is null) and (source_data.`ThumbnailPhotoFileName` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`ProductID` != source_data.`ProductID`
        or
        (
            ((snapshotted_data.`ProductID` is null) and not (source_data.`ProductID` is null))
            or
            ((not snapshotted_data.`ProductID` is null) and (source_data.`ProductID` is null))
        ) or snapshotted_data.`Name` != source_data.`Name`
        or
        (
            ((snapshotted_data.`Name` is null) and not (source_data.`Name` is null))
            or
            ((not snapshotted_data.`Name` is null) and (source_data.`Name` is null))
        ) or snapshotted_data.`ProductNumber` != source_data.`ProductNumber`
        or
        (
            ((snapshotted_data.`ProductNumber` is null) and not (source_data.`ProductNumber` is null))
            or
            ((not snapshotted_data.`ProductNumber` is null) and (source_data.`ProductNumber` is null))
        ) or snapshotted_data.`Color` != source_data.`Color`
        or
        (
            ((snapshotted_data.`Color` is null) and not (source_data.`Color` is null))
            or
            ((not snapshotted_data.`Color` is null) and (source_data.`Color` is null))
        ) or snapshotted_data.`StandardCost` != source_data.`StandardCost`
        or
        (
            ((snapshotted_data.`StandardCost` is null) and not (source_data.`StandardCost` is null))
            or
            ((not snapshotted_data.`StandardCost` is null) and (source_data.`StandardCost` is null))
        ) or snapshotted_data.`ListPrice` != source_data.`ListPrice`
        or
        (
            ((snapshotted_data.`ListPrice` is null) and not (source_data.`ListPrice` is null))
            or
            ((not snapshotted_data.`ListPrice` is null) and (source_data.`ListPrice` is null))
        ) or snapshotted_data.`Size` != source_data.`Size`
        or
        (
            ((snapshotted_data.`Size` is null) and not (source_data.`Size` is null))
            or
            ((not snapshotted_data.`Size` is null) and (source_data.`Size` is null))
        ) or snapshotted_data.`Weight` != source_data.`Weight`
        or
        (
            ((snapshotted_data.`Weight` is null) and not (source_data.`Weight` is null))
            or
            ((not snapshotted_data.`Weight` is null) and (source_data.`Weight` is null))
        ) or snapshotted_data.`ProductCategoryID` != source_data.`ProductCategoryID`
        or
        (
            ((snapshotted_data.`ProductCategoryID` is null) and not (source_data.`ProductCategoryID` is null))
            or
            ((not snapshotted_data.`ProductCategoryID` is null) and (source_data.`ProductCategoryID` is null))
        ) or snapshotted_data.`ProductModelID` != source_data.`ProductModelID`
        or
        (
            ((snapshotted_data.`ProductModelID` is null) and not (source_data.`ProductModelID` is null))
            or
            ((not snapshotted_data.`ProductModelID` is null) and (source_data.`ProductModelID` is null))
        ) or snapshotted_data.`SellStartDate` != source_data.`SellStartDate`
        or
        (
            ((snapshotted_data.`SellStartDate` is null) and not (source_data.`SellStartDate` is null))
            or
            ((not snapshotted_data.`SellStartDate` is null) and (source_data.`SellStartDate` is null))
        ) or snapshotted_data.`SellEndDate` != source_data.`SellEndDate`
        or
        (
            ((snapshotted_data.`SellEndDate` is null) and not (source_data.`SellEndDate` is null))
            or
            ((not snapshotted_data.`SellEndDate` is null) and (source_data.`SellEndDate` is null))
        ) or snapshotted_data.`DiscontinuedDate` != source_data.`DiscontinuedDate`
        or
        (
            ((snapshotted_data.`DiscontinuedDate` is null) and not (source_data.`DiscontinuedDate` is null))
            or
            ((not snapshotted_data.`DiscontinuedDate` is null) and (source_data.`DiscontinuedDate` is null))
        ) or snapshotted_data.`ThumbNailPhoto` != source_data.`ThumbNailPhoto`
        or
        (
            ((snapshotted_data.`ThumbNailPhoto` is null) and not (source_data.`ThumbNailPhoto` is null))
            or
            ((not snapshotted_data.`ThumbNailPhoto` is null) and (source_data.`ThumbNailPhoto` is null))
        ) or snapshotted_data.`ThumbnailPhotoFileName` != source_data.`ThumbnailPhotoFileName`
        or
        (
            ((snapshotted_data.`ThumbnailPhotoFileName` is null) and not (source_data.`ThumbnailPhotoFileName` is null))
            or
            ((not snapshotted_data.`ThumbnailPhotoFileName` is null) and (source_data.`ThumbnailPhotoFileName` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

    ) as __dbt_sbq
    where false
    limit 0

[0m23:42:34.224457 [debug] [Thread-1 (]: SQL status: OK in 0.360 seconds
[0m23:42:34.224457 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=ce59f3a8-6f5a-42f5-853b-4667768ea115) - Closing
[0m23:42:34.307523 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:42:34.307523 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:42:34.421611 [debug] [Thread-1 (]: SQL status: OK in 0.110 seconds
[0m23:42:34.422515 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=4321f5b1-09a9-4a68-a2ad-14d32fe84f2d) - Closing
[0m23:42:34.495414 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:42:34.497413 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:42:34.498413 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

      merge into `hive_metastore`.`snapshots`.`product_snapshot` as DBT_INTERNAL_DEST
    
      using `product_snapshot__dbt_tmp` as DBT_INTERNAL_SOURCE
    
    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id
    when matched
     
       and DBT_INTERNAL_DEST.dbt_valid_to is null
     
     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')
        then update
        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to

    when not matched
     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'
        then insert *
    ;

  
[0m23:42:39.107501 [debug] [Thread-1 (]: SQL status: OK in 4.610 seconds
[0m23:42:39.113353 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=10b4f7d2-3d50-4f56-bd4c-76f5ffdb8045) - Closing
[0m23:42:39.192576 [debug] [Thread-1 (]: Applying DROP to: `product_snapshot__dbt_tmp`
[0m23:42:39.193581 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:42:39.193581 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */
DROP VIEW IF EXISTS `product_snapshot__dbt_tmp`
[0m23:42:39.435498 [debug] [Thread-1 (]: SQL status: OK in 0.240 seconds
[0m23:42:39.443277 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=d0ea60db-12b1-47c5-9966-5ee32aec1089) - Closing
[0m23:42:39.509871 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '68da9ca7-96e6-415f-804e-0786f6d6ea17', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002451FD94220>]}
[0m23:42:39.509871 [info ] [Thread-1 (]: 4 of 7 OK snapshotted snapshots.product_snapshot ............................... [[32mOK[0m in 9.63s]
[0m23:42:39.513414 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.product_snapshot
[0m23:42:39.513414 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.productmodel_snapshot
[0m23:42:39.513414 [info ] [Thread-1 (]: 5 of 7 START snapshot snapshots.productmodel_snapshot .......................... [RUN]
[0m23:42:39.513414 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.product_snapshot, now snapshot.medalion_dbt_spark.productmodel_snapshot)
[0m23:42:39.513414 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, name=snapshot.medalion_dbt_spark.productmodel_snapshot, idle-time=0.003542184829711914s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.product_snapshot
[0m23:42:39.518164 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.productmodel_snapshot
[0m23:42:39.523415 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.productmodel_snapshot
[0m23:42:39.531121 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:42:39.532187 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

      describe extended `hive_metastore`.`snapshots`.`productmodel_snapshot`
  
[0m23:42:40.543360 [debug] [Thread-1 (]: SQL status: OK in 1.010 seconds
[0m23:42:40.549592 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=d1c5c8fa-ba1b-47a6-b72d-e89096ea18cf) - Closing
[0m23:42:40.623373 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:42:40.623373 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */
select * from (
        



with product_snapshot as (
    SELECT
        ProductModelID,
        Name,
        CatalogDescription
    FROM `hive_metastore`.`saleslt`.`productmodel`
)

select * from product_snapshot

    ) as __dbt_sbq
    where false
    limit 0

    
[0m23:42:40.903397 [debug] [Thread-1 (]: SQL status: OK in 0.280 seconds
[0m23:42:40.907292 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=2b248218-07ac-4a91-b0a1-51ed77cbb64e) - Closing
[0m23:42:40.998062 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:42:41.003660 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`productmodel_snapshot`

  
[0m23:42:41.325371 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:42:41.334483 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=5f3269b8-a817-4258-a75b-43a2b8f77598) - Closing
[0m23:42:41.415785 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:42:41.418084 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`productmodel_snapshot`

  
[0m23:42:41.758435 [debug] [Thread-1 (]: SQL status: OK in 0.340 seconds
[0m23:42:41.763532 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=edb74452-cf3c-49fa-b264-2ef065fca020) - Closing
[0m23:42:41.850301 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:42:41.851307 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

        
  
    create or replace temporary view `productmodel_snapshot__dbt_tmp` as
      
    
    with snapshot_query as (

        with product_snapshot as (
    SELECT
        ProductModelID,
        Name,
        CatalogDescription
    FROM `hive_metastore`.`saleslt`.`productmodel`
)

select * from product_snapshot

    ),

    snapshotted_data as (

        select *, 
    
        ProductModelID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`productmodel_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        ProductModelID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(ProductModelID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        ProductModelID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        ProductModelID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`ProductModelID` != source_data.`ProductModelID`
        or
        (
            ((snapshotted_data.`ProductModelID` is null) and not (source_data.`ProductModelID` is null))
            or
            ((not snapshotted_data.`ProductModelID` is null) and (source_data.`ProductModelID` is null))
        ) or snapshotted_data.`Name` != source_data.`Name`
        or
        (
            ((snapshotted_data.`Name` is null) and not (source_data.`Name` is null))
            or
            ((not snapshotted_data.`Name` is null) and (source_data.`Name` is null))
        ) or snapshotted_data.`CatalogDescription` != source_data.`CatalogDescription`
        or
        (
            ((snapshotted_data.`CatalogDescription` is null) and not (source_data.`CatalogDescription` is null))
            or
            ((not snapshotted_data.`CatalogDescription` is null) and (source_data.`CatalogDescription` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`ProductModelID` != source_data.`ProductModelID`
        or
        (
            ((snapshotted_data.`ProductModelID` is null) and not (source_data.`ProductModelID` is null))
            or
            ((not snapshotted_data.`ProductModelID` is null) and (source_data.`ProductModelID` is null))
        ) or snapshotted_data.`Name` != source_data.`Name`
        or
        (
            ((snapshotted_data.`Name` is null) and not (source_data.`Name` is null))
            or
            ((not snapshotted_data.`Name` is null) and (source_data.`Name` is null))
        ) or snapshotted_data.`CatalogDescription` != source_data.`CatalogDescription`
        or
        (
            ((snapshotted_data.`CatalogDescription` is null) and not (source_data.`CatalogDescription` is null))
            or
            ((not snapshotted_data.`CatalogDescription` is null) and (source_data.`CatalogDescription` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

  
    
[0m23:42:42.136916 [debug] [Thread-1 (]: SQL status: OK in 0.280 seconds
[0m23:42:42.137931 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=975801a9-6ef9-4c22-b956-41db481ccc12) - Closing
[0m23:42:42.228400 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:42:42.229400 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

    
DESCRIBE TABLE `productmodel_snapshot__dbt_tmp`

  
[0m23:42:42.356205 [debug] [Thread-1 (]: SQL status: OK in 0.130 seconds
[0m23:42:42.359684 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=54ac850e-675f-4f23-9c44-cf234b9ac461) - Closing
[0m23:42:42.430008 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:42:42.431001 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`productmodel_snapshot`

  
[0m23:42:42.750982 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:42:42.761094 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=47817a9e-4f90-4586-bcaf-4059cf2fbed7) - Closing
[0m23:42:42.845231 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:42:42.846213 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

    
DESCRIBE TABLE `productmodel_snapshot__dbt_tmp`

  
[0m23:42:42.980726 [debug] [Thread-1 (]: SQL status: OK in 0.130 seconds
[0m23:42:42.983124 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=6aa2855e-defa-4800-b661-72c17a7999b6) - Closing
[0m23:42:43.059795 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:42:43.060787 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`productmodel_snapshot`

  
[0m23:42:43.383305 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:42:43.385327 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=2030396c-fb78-4502-b6f0-fb8d5cc3e634) - Closing
[0m23:42:43.472032 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:42:43.473539 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

    
DESCRIBE TABLE `productmodel_snapshot__dbt_tmp`

  
[0m23:42:43.613224 [debug] [Thread-1 (]: SQL status: OK in 0.140 seconds
[0m23:42:43.615240 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=fcce0467-bb4d-47fc-af95-a8e153f370de) - Closing
[0m23:42:43.693219 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:42:43.693635 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */
select * from (
        
    
    with snapshot_query as (

        with product_snapshot as (
    SELECT
        ProductModelID,
        Name,
        CatalogDescription
    FROM `hive_metastore`.`saleslt`.`productmodel`
)

select * from product_snapshot

    ),

    snapshotted_data as (

        select *, 
    
        ProductModelID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`productmodel_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        ProductModelID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(ProductModelID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        ProductModelID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        ProductModelID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`ProductModelID` != source_data.`ProductModelID`
        or
        (
            ((snapshotted_data.`ProductModelID` is null) and not (source_data.`ProductModelID` is null))
            or
            ((not snapshotted_data.`ProductModelID` is null) and (source_data.`ProductModelID` is null))
        ) or snapshotted_data.`Name` != source_data.`Name`
        or
        (
            ((snapshotted_data.`Name` is null) and not (source_data.`Name` is null))
            or
            ((not snapshotted_data.`Name` is null) and (source_data.`Name` is null))
        ) or snapshotted_data.`CatalogDescription` != source_data.`CatalogDescription`
        or
        (
            ((snapshotted_data.`CatalogDescription` is null) and not (source_data.`CatalogDescription` is null))
            or
            ((not snapshotted_data.`CatalogDescription` is null) and (source_data.`CatalogDescription` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`ProductModelID` != source_data.`ProductModelID`
        or
        (
            ((snapshotted_data.`ProductModelID` is null) and not (source_data.`ProductModelID` is null))
            or
            ((not snapshotted_data.`ProductModelID` is null) and (source_data.`ProductModelID` is null))
        ) or snapshotted_data.`Name` != source_data.`Name`
        or
        (
            ((snapshotted_data.`Name` is null) and not (source_data.`Name` is null))
            or
            ((not snapshotted_data.`Name` is null) and (source_data.`Name` is null))
        ) or snapshotted_data.`CatalogDescription` != source_data.`CatalogDescription`
        or
        (
            ((snapshotted_data.`CatalogDescription` is null) and not (source_data.`CatalogDescription` is null))
            or
            ((not snapshotted_data.`CatalogDescription` is null) and (source_data.`CatalogDescription` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

    ) as __dbt_sbq
    where false
    limit 0

[0m23:42:43.977834 [debug] [Thread-1 (]: SQL status: OK in 0.280 seconds
[0m23:42:43.983789 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=70f4de36-5c55-411e-9605-6be90b1580e3) - Closing
[0m23:42:44.067667 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:42:44.067667 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:42:44.178558 [debug] [Thread-1 (]: SQL status: OK in 0.110 seconds
[0m23:42:44.180562 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=cc752875-eac8-4e06-b298-e32a2585b979) - Closing
[0m23:42:44.253352 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:42:44.256209 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:42:44.256209 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

      merge into `hive_metastore`.`snapshots`.`productmodel_snapshot` as DBT_INTERNAL_DEST
    
      using `productmodel_snapshot__dbt_tmp` as DBT_INTERNAL_SOURCE
    
    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id
    when matched
     
       and DBT_INTERNAL_DEST.dbt_valid_to is null
     
     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')
        then update
        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to

    when not matched
     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'
        then insert *
    ;

  
[0m23:42:48.133576 [debug] [Thread-1 (]: SQL status: OK in 3.880 seconds
[0m23:42:48.135424 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=027fce9b-b953-48e3-8773-b6d0e76f7a1e) - Closing
[0m23:42:48.213379 [debug] [Thread-1 (]: Applying DROP to: `productmodel_snapshot__dbt_tmp`
[0m23:42:48.213379 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:42:48.213379 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */
DROP VIEW IF EXISTS `productmodel_snapshot__dbt_tmp`
[0m23:42:48.333278 [debug] [Thread-1 (]: SQL status: OK in 0.120 seconds
[0m23:42:48.333278 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=8f2f94ba-c2fb-4e3f-9aba-02693e1b475d) - Closing
[0m23:42:48.404712 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '68da9ca7-96e6-415f-804e-0786f6d6ea17', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002451FD47940>]}
[0m23:42:48.413354 [info ] [Thread-1 (]: 5 of 7 OK snapshotted snapshots.productmodel_snapshot .......................... [[32mOK[0m in 8.89s]
[0m23:42:48.413354 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.productmodel_snapshot
[0m23:42:48.413354 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m23:42:48.419922 [info ] [Thread-1 (]: 6 of 7 START snapshot snapshots.salesorderdetail_snapshot ...................... [RUN]
[0m23:42:48.423337 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.productmodel_snapshot, now snapshot.medalion_dbt_spark.salesorderdetail_snapshot)
[0m23:42:48.426378 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, name=snapshot.medalion_dbt_spark.salesorderdetail_snapshot, idle-time=0.01862502098083496s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.productmodel_snapshot
[0m23:42:48.428385 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m23:42:48.436479 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m23:42:48.453568 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:42:48.455590 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

      describe extended `hive_metastore`.`snapshots`.`salesorderdetail_snapshot`
  
[0m23:42:48.959541 [debug] [Thread-1 (]: SQL status: OK in 0.500 seconds
[0m23:42:48.963431 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=9105ce02-fd58-426f-9ff2-cadd7e26540c) - Closing
[0m23:42:49.035590 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:42:49.037013 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */
select * from (
        



with salesorderdetail_snapshot as (
    SELECT
        SalesOrderID,
        SalesOrderDetailID,
        OrderQty,
        ProductID,
        UnitPrice,
        UnitPriceDiscount,
        LineTotal
    FROM `hive_metastore`.`saleslt`.`salesorderdetail`
)

select * from salesorderdetail_snapshot

    ) as __dbt_sbq
    where false
    limit 0

    
[0m23:42:49.294643 [debug] [Thread-1 (]: SQL status: OK in 0.260 seconds
[0m23:42:49.294643 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=9a1e66fa-dd7f-401a-b324-0c3281829144) - Closing
[0m23:42:49.373576 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:42:49.373576 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`salesorderdetail_snapshot`

  
[0m23:42:49.689582 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:42:49.691616 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=7029c24a-7fec-45c9-bcf6-b4425164e4c3) - Closing
[0m23:42:49.777365 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:42:49.779413 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`salesorderdetail_snapshot`

  
[0m23:42:50.100166 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:42:50.100166 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=176cec69-c4a3-4405-96ff-0039fabd0bb2) - Closing
[0m23:42:50.173503 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:42:50.173503 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

        
  
    create or replace temporary view `salesorderdetail_snapshot__dbt_tmp` as
      
    
    with snapshot_query as (

        with salesorderdetail_snapshot as (
    SELECT
        SalesOrderID,
        SalesOrderDetailID,
        OrderQty,
        ProductID,
        UnitPrice,
        UnitPriceDiscount,
        LineTotal
    FROM `hive_metastore`.`saleslt`.`salesorderdetail`
)

select * from salesorderdetail_snapshot

    ),

    snapshotted_data as (

        select *, 
    
        SalesOrderDetailID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`salesorderdetail_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        SalesOrderDetailID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(SalesOrderDetailID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        SalesOrderDetailID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        SalesOrderDetailID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`SalesOrderID` != source_data.`SalesOrderID`
        or
        (
            ((snapshotted_data.`SalesOrderID` is null) and not (source_data.`SalesOrderID` is null))
            or
            ((not snapshotted_data.`SalesOrderID` is null) and (source_data.`SalesOrderID` is null))
        ) or snapshotted_data.`SalesOrderDetailID` != source_data.`SalesOrderDetailID`
        or
        (
            ((snapshotted_data.`SalesOrderDetailID` is null) and not (source_data.`SalesOrderDetailID` is null))
            or
            ((not snapshotted_data.`SalesOrderDetailID` is null) and (source_data.`SalesOrderDetailID` is null))
        ) or snapshotted_data.`OrderQty` != source_data.`OrderQty`
        or
        (
            ((snapshotted_data.`OrderQty` is null) and not (source_data.`OrderQty` is null))
            or
            ((not snapshotted_data.`OrderQty` is null) and (source_data.`OrderQty` is null))
        ) or snapshotted_data.`ProductID` != source_data.`ProductID`
        or
        (
            ((snapshotted_data.`ProductID` is null) and not (source_data.`ProductID` is null))
            or
            ((not snapshotted_data.`ProductID` is null) and (source_data.`ProductID` is null))
        ) or snapshotted_data.`UnitPrice` != source_data.`UnitPrice`
        or
        (
            ((snapshotted_data.`UnitPrice` is null) and not (source_data.`UnitPrice` is null))
            or
            ((not snapshotted_data.`UnitPrice` is null) and (source_data.`UnitPrice` is null))
        ) or snapshotted_data.`UnitPriceDiscount` != source_data.`UnitPriceDiscount`
        or
        (
            ((snapshotted_data.`UnitPriceDiscount` is null) and not (source_data.`UnitPriceDiscount` is null))
            or
            ((not snapshotted_data.`UnitPriceDiscount` is null) and (source_data.`UnitPriceDiscount` is null))
        ) or snapshotted_data.`LineTotal` != source_data.`LineTotal`
        or
        (
            ((snapshotted_data.`LineTotal` is null) and not (source_data.`LineTotal` is null))
            or
            ((not snapshotted_data.`LineTotal` is null) and (source_data.`LineTotal` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`SalesOrderID` != source_data.`SalesOrderID`
        or
        (
            ((snapshotted_data.`SalesOrderID` is null) and not (source_data.`SalesOrderID` is null))
            or
            ((not snapshotted_data.`SalesOrderID` is null) and (source_data.`SalesOrderID` is null))
        ) or snapshotted_data.`SalesOrderDetailID` != source_data.`SalesOrderDetailID`
        or
        (
            ((snapshotted_data.`SalesOrderDetailID` is null) and not (source_data.`SalesOrderDetailID` is null))
            or
            ((not snapshotted_data.`SalesOrderDetailID` is null) and (source_data.`SalesOrderDetailID` is null))
        ) or snapshotted_data.`OrderQty` != source_data.`OrderQty`
        or
        (
            ((snapshotted_data.`OrderQty` is null) and not (source_data.`OrderQty` is null))
            or
            ((not snapshotted_data.`OrderQty` is null) and (source_data.`OrderQty` is null))
        ) or snapshotted_data.`ProductID` != source_data.`ProductID`
        or
        (
            ((snapshotted_data.`ProductID` is null) and not (source_data.`ProductID` is null))
            or
            ((not snapshotted_data.`ProductID` is null) and (source_data.`ProductID` is null))
        ) or snapshotted_data.`UnitPrice` != source_data.`UnitPrice`
        or
        (
            ((snapshotted_data.`UnitPrice` is null) and not (source_data.`UnitPrice` is null))
            or
            ((not snapshotted_data.`UnitPrice` is null) and (source_data.`UnitPrice` is null))
        ) or snapshotted_data.`UnitPriceDiscount` != source_data.`UnitPriceDiscount`
        or
        (
            ((snapshotted_data.`UnitPriceDiscount` is null) and not (source_data.`UnitPriceDiscount` is null))
            or
            ((not snapshotted_data.`UnitPriceDiscount` is null) and (source_data.`UnitPriceDiscount` is null))
        ) or snapshotted_data.`LineTotal` != source_data.`LineTotal`
        or
        (
            ((snapshotted_data.`LineTotal` is null) and not (source_data.`LineTotal` is null))
            or
            ((not snapshotted_data.`LineTotal` is null) and (source_data.`LineTotal` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

  
    
[0m23:42:50.503678 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:42:50.503678 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=70691072-01a6-4b0d-ab35-dbe01d0e849e) - Closing
[0m23:42:50.583502 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:42:50.584819 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

    
DESCRIBE TABLE `salesorderdetail_snapshot__dbt_tmp`

  
[0m23:42:50.718533 [debug] [Thread-1 (]: SQL status: OK in 0.130 seconds
[0m23:42:50.723646 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=8b739a4d-91a0-4f7d-8ec2-df9ac3acb0ad) - Closing
[0m23:42:50.793574 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:42:50.793574 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`salesorderdetail_snapshot`

  
[0m23:42:51.108688 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:42:51.113336 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=197f7460-072a-4637-b93b-af26830b48e9) - Closing
[0m23:42:51.185282 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:42:51.186270 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

    
DESCRIBE TABLE `salesorderdetail_snapshot__dbt_tmp`

  
[0m23:42:51.324696 [debug] [Thread-1 (]: SQL status: OK in 0.140 seconds
[0m23:42:51.326699 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=86a3c8ba-b0f1-4400-a4e5-08654d636092) - Closing
[0m23:42:51.398438 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:42:51.398438 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`salesorderdetail_snapshot`

  
[0m23:42:51.715517 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:42:51.723434 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=ff6a0b39-5ad8-438b-abc9-9a72c97114b7) - Closing
[0m23:42:51.807749 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:42:51.815146 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

    
DESCRIBE TABLE `salesorderdetail_snapshot__dbt_tmp`

  
[0m23:42:51.968026 [debug] [Thread-1 (]: SQL status: OK in 0.150 seconds
[0m23:42:51.975283 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=f6d6682d-01c8-421b-845b-c81c6d4bcdc5) - Closing
[0m23:42:52.048743 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:42:52.051272 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */
select * from (
        
    
    with snapshot_query as (

        with salesorderdetail_snapshot as (
    SELECT
        SalesOrderID,
        SalesOrderDetailID,
        OrderQty,
        ProductID,
        UnitPrice,
        UnitPriceDiscount,
        LineTotal
    FROM `hive_metastore`.`saleslt`.`salesorderdetail`
)

select * from salesorderdetail_snapshot

    ),

    snapshotted_data as (

        select *, 
    
        SalesOrderDetailID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`salesorderdetail_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        SalesOrderDetailID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(SalesOrderDetailID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        SalesOrderDetailID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        SalesOrderDetailID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`SalesOrderID` != source_data.`SalesOrderID`
        or
        (
            ((snapshotted_data.`SalesOrderID` is null) and not (source_data.`SalesOrderID` is null))
            or
            ((not snapshotted_data.`SalesOrderID` is null) and (source_data.`SalesOrderID` is null))
        ) or snapshotted_data.`SalesOrderDetailID` != source_data.`SalesOrderDetailID`
        or
        (
            ((snapshotted_data.`SalesOrderDetailID` is null) and not (source_data.`SalesOrderDetailID` is null))
            or
            ((not snapshotted_data.`SalesOrderDetailID` is null) and (source_data.`SalesOrderDetailID` is null))
        ) or snapshotted_data.`OrderQty` != source_data.`OrderQty`
        or
        (
            ((snapshotted_data.`OrderQty` is null) and not (source_data.`OrderQty` is null))
            or
            ((not snapshotted_data.`OrderQty` is null) and (source_data.`OrderQty` is null))
        ) or snapshotted_data.`ProductID` != source_data.`ProductID`
        or
        (
            ((snapshotted_data.`ProductID` is null) and not (source_data.`ProductID` is null))
            or
            ((not snapshotted_data.`ProductID` is null) and (source_data.`ProductID` is null))
        ) or snapshotted_data.`UnitPrice` != source_data.`UnitPrice`
        or
        (
            ((snapshotted_data.`UnitPrice` is null) and not (source_data.`UnitPrice` is null))
            or
            ((not snapshotted_data.`UnitPrice` is null) and (source_data.`UnitPrice` is null))
        ) or snapshotted_data.`UnitPriceDiscount` != source_data.`UnitPriceDiscount`
        or
        (
            ((snapshotted_data.`UnitPriceDiscount` is null) and not (source_data.`UnitPriceDiscount` is null))
            or
            ((not snapshotted_data.`UnitPriceDiscount` is null) and (source_data.`UnitPriceDiscount` is null))
        ) or snapshotted_data.`LineTotal` != source_data.`LineTotal`
        or
        (
            ((snapshotted_data.`LineTotal` is null) and not (source_data.`LineTotal` is null))
            or
            ((not snapshotted_data.`LineTotal` is null) and (source_data.`LineTotal` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`SalesOrderID` != source_data.`SalesOrderID`
        or
        (
            ((snapshotted_data.`SalesOrderID` is null) and not (source_data.`SalesOrderID` is null))
            or
            ((not snapshotted_data.`SalesOrderID` is null) and (source_data.`SalesOrderID` is null))
        ) or snapshotted_data.`SalesOrderDetailID` != source_data.`SalesOrderDetailID`
        or
        (
            ((snapshotted_data.`SalesOrderDetailID` is null) and not (source_data.`SalesOrderDetailID` is null))
            or
            ((not snapshotted_data.`SalesOrderDetailID` is null) and (source_data.`SalesOrderDetailID` is null))
        ) or snapshotted_data.`OrderQty` != source_data.`OrderQty`
        or
        (
            ((snapshotted_data.`OrderQty` is null) and not (source_data.`OrderQty` is null))
            or
            ((not snapshotted_data.`OrderQty` is null) and (source_data.`OrderQty` is null))
        ) or snapshotted_data.`ProductID` != source_data.`ProductID`
        or
        (
            ((snapshotted_data.`ProductID` is null) and not (source_data.`ProductID` is null))
            or
            ((not snapshotted_data.`ProductID` is null) and (source_data.`ProductID` is null))
        ) or snapshotted_data.`UnitPrice` != source_data.`UnitPrice`
        or
        (
            ((snapshotted_data.`UnitPrice` is null) and not (source_data.`UnitPrice` is null))
            or
            ((not snapshotted_data.`UnitPrice` is null) and (source_data.`UnitPrice` is null))
        ) or snapshotted_data.`UnitPriceDiscount` != source_data.`UnitPriceDiscount`
        or
        (
            ((snapshotted_data.`UnitPriceDiscount` is null) and not (source_data.`UnitPriceDiscount` is null))
            or
            ((not snapshotted_data.`UnitPriceDiscount` is null) and (source_data.`UnitPriceDiscount` is null))
        ) or snapshotted_data.`LineTotal` != source_data.`LineTotal`
        or
        (
            ((snapshotted_data.`LineTotal` is null) and not (source_data.`LineTotal` is null))
            or
            ((not snapshotted_data.`LineTotal` is null) and (source_data.`LineTotal` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

    ) as __dbt_sbq
    where false
    limit 0

[0m23:42:52.327738 [debug] [Thread-1 (]: SQL status: OK in 0.270 seconds
[0m23:42:52.327738 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=6a985429-554e-49f2-b198-b9a775848d45) - Closing
[0m23:42:52.403543 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:42:52.403543 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:42:52.513352 [debug] [Thread-1 (]: SQL status: OK in 0.110 seconds
[0m23:42:52.513352 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=5b47fc93-ffe0-4543-a9b5-321d54e37283) - Closing
[0m23:42:52.583329 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:42:52.583329 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:42:52.583329 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

      merge into `hive_metastore`.`snapshots`.`salesorderdetail_snapshot` as DBT_INTERNAL_DEST
    
      using `salesorderdetail_snapshot__dbt_tmp` as DBT_INTERNAL_SOURCE
    
    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id
    when matched
     
       and DBT_INTERNAL_DEST.dbt_valid_to is null
     
     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')
        then update
        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to

    when not matched
     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'
        then insert *
    ;

  
[0m23:42:56.853643 [debug] [Thread-1 (]: SQL status: OK in 4.270 seconds
[0m23:42:56.853643 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=d97312fd-f9a0-484e-a233-d4a2e9c7b08c) - Closing
[0m23:42:56.955632 [debug] [Thread-1 (]: Applying DROP to: `salesorderdetail_snapshot__dbt_tmp`
[0m23:42:56.957650 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:42:56.957650 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */
DROP VIEW IF EXISTS `salesorderdetail_snapshot__dbt_tmp`
[0m23:42:57.099164 [debug] [Thread-1 (]: SQL status: OK in 0.140 seconds
[0m23:42:57.103715 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=998d6fdd-983e-4317-8362-7adafff64104) - Closing
[0m23:42:57.183495 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '68da9ca7-96e6-415f-804e-0786f6d6ea17', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002451FE87FA0>]}
[0m23:42:57.186988 [info ] [Thread-1 (]: 6 of 7 OK snapshotted snapshots.salesorderdetail_snapshot ...................... [[32mOK[0m in 8.76s]
[0m23:42:57.186988 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m23:42:57.186988 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.salesorderheader_snapshot
[0m23:42:57.190330 [info ] [Thread-1 (]: 7 of 7 START snapshot snapshots.salesorderheader_snapshot ...................... [RUN]
[0m23:42:57.190330 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.salesorderdetail_snapshot, now snapshot.medalion_dbt_spark.salesorderheader_snapshot)
[0m23:42:57.192244 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, name=snapshot.medalion_dbt_spark.salesorderheader_snapshot, idle-time=0.008749008178710938s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m23:42:57.193751 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.salesorderheader_snapshot
[0m23:42:57.195592 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.salesorderheader_snapshot
[0m23:42:57.205078 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:42:57.205078 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

      describe extended `hive_metastore`.`snapshots`.`salesorderheader_snapshot`
  
[0m23:42:57.744160 [debug] [Thread-1 (]: SQL status: OK in 0.540 seconds
[0m23:42:57.744160 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=47cdc778-faf8-4515-9310-e777c2d7961b) - Closing
[0m23:42:57.837249 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:42:57.837249 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */
select * from (
        



with salesorderheader_snapshot as (
    SELECT
        SalesOrderID,
        RevisionNumber,
        OrderDate,
        DueDate,
        ShipDate,
        Status,
        OnlineOrderFlag,
        SalesOrderNumber,
        PurchaseOrderNumber,
        AccountNumber,
        CustomerID,
        ShipToAddressID,
        BillToAddressID,
        ShipMethod,
        CreditCardApprovalCode,
        SubTotal,
        TaxAmt,
        Freight,
        TotalDue,
        Comment
    FROM `hive_metastore`.`saleslt`.`salesorderheader`
)

select * from salesorderheader_snapshot

    ) as __dbt_sbq
    where false
    limit 0

    
[0m23:42:58.113712 [debug] [Thread-1 (]: SQL status: OK in 0.280 seconds
[0m23:42:58.118522 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=e717b652-7a08-4dfb-ac39-080a7a0f54ad) - Closing
[0m23:42:58.208160 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:42:58.211307 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`salesorderheader_snapshot`

  
[0m23:42:58.535554 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:42:58.537642 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=d9f90577-09b5-482c-b7d3-fa98d6f8986c) - Closing
[0m23:42:58.627946 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:42:58.635524 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`salesorderheader_snapshot`

  
[0m23:42:58.957646 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:42:58.965842 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=87dd6df7-422b-4170-9dfa-bf5a4333a4ab) - Closing
[0m23:42:59.065247 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:42:59.067341 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

        
  
    create or replace temporary view `salesorderheader_snapshot__dbt_tmp` as
      
    
    with snapshot_query as (

        with salesorderheader_snapshot as (
    SELECT
        SalesOrderID,
        RevisionNumber,
        OrderDate,
        DueDate,
        ShipDate,
        Status,
        OnlineOrderFlag,
        SalesOrderNumber,
        PurchaseOrderNumber,
        AccountNumber,
        CustomerID,
        ShipToAddressID,
        BillToAddressID,
        ShipMethod,
        CreditCardApprovalCode,
        SubTotal,
        TaxAmt,
        Freight,
        TotalDue,
        Comment
    FROM `hive_metastore`.`saleslt`.`salesorderheader`
)

select * from salesorderheader_snapshot

    ),

    snapshotted_data as (

        select *, 
    
        SalesOrderID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`salesorderheader_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        SalesOrderID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(SalesOrderID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        SalesOrderID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        SalesOrderID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`SalesOrderID` != source_data.`SalesOrderID`
        or
        (
            ((snapshotted_data.`SalesOrderID` is null) and not (source_data.`SalesOrderID` is null))
            or
            ((not snapshotted_data.`SalesOrderID` is null) and (source_data.`SalesOrderID` is null))
        ) or snapshotted_data.`RevisionNumber` != source_data.`RevisionNumber`
        or
        (
            ((snapshotted_data.`RevisionNumber` is null) and not (source_data.`RevisionNumber` is null))
            or
            ((not snapshotted_data.`RevisionNumber` is null) and (source_data.`RevisionNumber` is null))
        ) or snapshotted_data.`OrderDate` != source_data.`OrderDate`
        or
        (
            ((snapshotted_data.`OrderDate` is null) and not (source_data.`OrderDate` is null))
            or
            ((not snapshotted_data.`OrderDate` is null) and (source_data.`OrderDate` is null))
        ) or snapshotted_data.`DueDate` != source_data.`DueDate`
        or
        (
            ((snapshotted_data.`DueDate` is null) and not (source_data.`DueDate` is null))
            or
            ((not snapshotted_data.`DueDate` is null) and (source_data.`DueDate` is null))
        ) or snapshotted_data.`ShipDate` != source_data.`ShipDate`
        or
        (
            ((snapshotted_data.`ShipDate` is null) and not (source_data.`ShipDate` is null))
            or
            ((not snapshotted_data.`ShipDate` is null) and (source_data.`ShipDate` is null))
        ) or snapshotted_data.`Status` != source_data.`Status`
        or
        (
            ((snapshotted_data.`Status` is null) and not (source_data.`Status` is null))
            or
            ((not snapshotted_data.`Status` is null) and (source_data.`Status` is null))
        ) or snapshotted_data.`OnlineOrderFlag` != source_data.`OnlineOrderFlag`
        or
        (
            ((snapshotted_data.`OnlineOrderFlag` is null) and not (source_data.`OnlineOrderFlag` is null))
            or
            ((not snapshotted_data.`OnlineOrderFlag` is null) and (source_data.`OnlineOrderFlag` is null))
        ) or snapshotted_data.`SalesOrderNumber` != source_data.`SalesOrderNumber`
        or
        (
            ((snapshotted_data.`SalesOrderNumber` is null) and not (source_data.`SalesOrderNumber` is null))
            or
            ((not snapshotted_data.`SalesOrderNumber` is null) and (source_data.`SalesOrderNumber` is null))
        ) or snapshotted_data.`PurchaseOrderNumber` != source_data.`PurchaseOrderNumber`
        or
        (
            ((snapshotted_data.`PurchaseOrderNumber` is null) and not (source_data.`PurchaseOrderNumber` is null))
            or
            ((not snapshotted_data.`PurchaseOrderNumber` is null) and (source_data.`PurchaseOrderNumber` is null))
        ) or snapshotted_data.`AccountNumber` != source_data.`AccountNumber`
        or
        (
            ((snapshotted_data.`AccountNumber` is null) and not (source_data.`AccountNumber` is null))
            or
            ((not snapshotted_data.`AccountNumber` is null) and (source_data.`AccountNumber` is null))
        ) or snapshotted_data.`CustomerID` != source_data.`CustomerID`
        or
        (
            ((snapshotted_data.`CustomerID` is null) and not (source_data.`CustomerID` is null))
            or
            ((not snapshotted_data.`CustomerID` is null) and (source_data.`CustomerID` is null))
        ) or snapshotted_data.`ShipToAddressID` != source_data.`ShipToAddressID`
        or
        (
            ((snapshotted_data.`ShipToAddressID` is null) and not (source_data.`ShipToAddressID` is null))
            or
            ((not snapshotted_data.`ShipToAddressID` is null) and (source_data.`ShipToAddressID` is null))
        ) or snapshotted_data.`BillToAddressID` != source_data.`BillToAddressID`
        or
        (
            ((snapshotted_data.`BillToAddressID` is null) and not (source_data.`BillToAddressID` is null))
            or
            ((not snapshotted_data.`BillToAddressID` is null) and (source_data.`BillToAddressID` is null))
        ) or snapshotted_data.`ShipMethod` != source_data.`ShipMethod`
        or
        (
            ((snapshotted_data.`ShipMethod` is null) and not (source_data.`ShipMethod` is null))
            or
            ((not snapshotted_data.`ShipMethod` is null) and (source_data.`ShipMethod` is null))
        ) or snapshotted_data.`CreditCardApprovalCode` != source_data.`CreditCardApprovalCode`
        or
        (
            ((snapshotted_data.`CreditCardApprovalCode` is null) and not (source_data.`CreditCardApprovalCode` is null))
            or
            ((not snapshotted_data.`CreditCardApprovalCode` is null) and (source_data.`CreditCardApprovalCode` is null))
        ) or snapshotted_data.`SubTotal` != source_data.`SubTotal`
        or
        (
            ((snapshotted_data.`SubTotal` is null) and not (source_data.`SubTotal` is null))
            or
            ((not snapshotted_data.`SubTotal` is null) and (source_data.`SubTotal` is null))
        ) or snapshotted_data.`TaxAmt` != source_data.`TaxAmt`
        or
        (
            ((snapshotted_data.`TaxAmt` is null) and not (source_data.`TaxAmt` is null))
            or
            ((not snapshotted_data.`TaxAmt` is null) and (source_data.`TaxAmt` is null))
        ) or snapshotted_data.`Freight` != source_data.`Freight`
        or
        (
            ((snapshotted_data.`Freight` is null) and not (source_data.`Freight` is null))
            or
            ((not snapshotted_data.`Freight` is null) and (source_data.`Freight` is null))
        ) or snapshotted_data.`TotalDue` != source_data.`TotalDue`
        or
        (
            ((snapshotted_data.`TotalDue` is null) and not (source_data.`TotalDue` is null))
            or
            ((not snapshotted_data.`TotalDue` is null) and (source_data.`TotalDue` is null))
        ) or snapshotted_data.`Comment` != source_data.`Comment`
        or
        (
            ((snapshotted_data.`Comment` is null) and not (source_data.`Comment` is null))
            or
            ((not snapshotted_data.`Comment` is null) and (source_data.`Comment` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`SalesOrderID` != source_data.`SalesOrderID`
        or
        (
            ((snapshotted_data.`SalesOrderID` is null) and not (source_data.`SalesOrderID` is null))
            or
            ((not snapshotted_data.`SalesOrderID` is null) and (source_data.`SalesOrderID` is null))
        ) or snapshotted_data.`RevisionNumber` != source_data.`RevisionNumber`
        or
        (
            ((snapshotted_data.`RevisionNumber` is null) and not (source_data.`RevisionNumber` is null))
            or
            ((not snapshotted_data.`RevisionNumber` is null) and (source_data.`RevisionNumber` is null))
        ) or snapshotted_data.`OrderDate` != source_data.`OrderDate`
        or
        (
            ((snapshotted_data.`OrderDate` is null) and not (source_data.`OrderDate` is null))
            or
            ((not snapshotted_data.`OrderDate` is null) and (source_data.`OrderDate` is null))
        ) or snapshotted_data.`DueDate` != source_data.`DueDate`
        or
        (
            ((snapshotted_data.`DueDate` is null) and not (source_data.`DueDate` is null))
            or
            ((not snapshotted_data.`DueDate` is null) and (source_data.`DueDate` is null))
        ) or snapshotted_data.`ShipDate` != source_data.`ShipDate`
        or
        (
            ((snapshotted_data.`ShipDate` is null) and not (source_data.`ShipDate` is null))
            or
            ((not snapshotted_data.`ShipDate` is null) and (source_data.`ShipDate` is null))
        ) or snapshotted_data.`Status` != source_data.`Status`
        or
        (
            ((snapshotted_data.`Status` is null) and not (source_data.`Status` is null))
            or
            ((not snapshotted_data.`Status` is null) and (source_data.`Status` is null))
        ) or snapshotted_data.`OnlineOrderFlag` != source_data.`OnlineOrderFlag`
        or
        (
            ((snapshotted_data.`OnlineOrderFlag` is null) and not (source_data.`OnlineOrderFlag` is null))
            or
            ((not snapshotted_data.`OnlineOrderFlag` is null) and (source_data.`OnlineOrderFlag` is null))
        ) or snapshotted_data.`SalesOrderNumber` != source_data.`SalesOrderNumber`
        or
        (
            ((snapshotted_data.`SalesOrderNumber` is null) and not (source_data.`SalesOrderNumber` is null))
            or
            ((not snapshotted_data.`SalesOrderNumber` is null) and (source_data.`SalesOrderNumber` is null))
        ) or snapshotted_data.`PurchaseOrderNumber` != source_data.`PurchaseOrderNumber`
        or
        (
            ((snapshotted_data.`PurchaseOrderNumber` is null) and not (source_data.`PurchaseOrderNumber` is null))
            or
            ((not snapshotted_data.`PurchaseOrderNumber` is null) and (source_data.`PurchaseOrderNumber` is null))
        ) or snapshotted_data.`AccountNumber` != source_data.`AccountNumber`
        or
        (
            ((snapshotted_data.`AccountNumber` is null) and not (source_data.`AccountNumber` is null))
            or
            ((not snapshotted_data.`AccountNumber` is null) and (source_data.`AccountNumber` is null))
        ) or snapshotted_data.`CustomerID` != source_data.`CustomerID`
        or
        (
            ((snapshotted_data.`CustomerID` is null) and not (source_data.`CustomerID` is null))
            or
            ((not snapshotted_data.`CustomerID` is null) and (source_data.`CustomerID` is null))
        ) or snapshotted_data.`ShipToAddressID` != source_data.`ShipToAddressID`
        or
        (
            ((snapshotted_data.`ShipToAddressID` is null) and not (source_data.`ShipToAddressID` is null))
            or
            ((not snapshotted_data.`ShipToAddressID` is null) and (source_data.`ShipToAddressID` is null))
        ) or snapshotted_data.`BillToAddressID` != source_data.`BillToAddressID`
        or
        (
            ((snapshotted_data.`BillToAddressID` is null) and not (source_data.`BillToAddressID` is null))
            or
            ((not snapshotted_data.`BillToAddressID` is null) and (source_data.`BillToAddressID` is null))
        ) or snapshotted_data.`ShipMethod` != source_data.`ShipMethod`
        or
        (
            ((snapshotted_data.`ShipMethod` is null) and not (source_data.`ShipMethod` is null))
            or
            ((not snapshotted_data.`ShipMethod` is null) and (source_data.`ShipMethod` is null))
        ) or snapshotted_data.`CreditCardApprovalCode` != source_data.`CreditCardApprovalCode`
        or
        (
            ((snapshotted_data.`CreditCardApprovalCode` is null) and not (source_data.`CreditCardApprovalCode` is null))
            or
            ((not snapshotted_data.`CreditCardApprovalCode` is null) and (source_data.`CreditCardApprovalCode` is null))
        ) or snapshotted_data.`SubTotal` != source_data.`SubTotal`
        or
        (
            ((snapshotted_data.`SubTotal` is null) and not (source_data.`SubTotal` is null))
            or
            ((not snapshotted_data.`SubTotal` is null) and (source_data.`SubTotal` is null))
        ) or snapshotted_data.`TaxAmt` != source_data.`TaxAmt`
        or
        (
            ((snapshotted_data.`TaxAmt` is null) and not (source_data.`TaxAmt` is null))
            or
            ((not snapshotted_data.`TaxAmt` is null) and (source_data.`TaxAmt` is null))
        ) or snapshotted_data.`Freight` != source_data.`Freight`
        or
        (
            ((snapshotted_data.`Freight` is null) and not (source_data.`Freight` is null))
            or
            ((not snapshotted_data.`Freight` is null) and (source_data.`Freight` is null))
        ) or snapshotted_data.`TotalDue` != source_data.`TotalDue`
        or
        (
            ((snapshotted_data.`TotalDue` is null) and not (source_data.`TotalDue` is null))
            or
            ((not snapshotted_data.`TotalDue` is null) and (source_data.`TotalDue` is null))
        ) or snapshotted_data.`Comment` != source_data.`Comment`
        or
        (
            ((snapshotted_data.`Comment` is null) and not (source_data.`Comment` is null))
            or
            ((not snapshotted_data.`Comment` is null) and (source_data.`Comment` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

  
    
[0m23:42:59.403744 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:42:59.404941 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=17345a4c-a94f-4195-b95e-185f6d4271ed) - Closing
[0m23:42:59.476011 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:42:59.476011 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

    
DESCRIBE TABLE `salesorderheader_snapshot__dbt_tmp`

  
[0m23:42:59.627784 [debug] [Thread-1 (]: SQL status: OK in 0.140 seconds
[0m23:42:59.635476 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=4455025e-7422-45a9-b74a-2242d840fe24) - Closing
[0m23:42:59.713515 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:42:59.722356 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`salesorderheader_snapshot`

  
[0m23:43:00.033657 [debug] [Thread-1 (]: SQL status: OK in 0.310 seconds
[0m23:43:00.033657 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=8584643a-d34c-4304-9813-40cd49dfefa1) - Closing
[0m23:43:00.117753 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:43:00.125937 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

    
DESCRIBE TABLE `salesorderheader_snapshot__dbt_tmp`

  
[0m23:43:00.273482 [debug] [Thread-1 (]: SQL status: OK in 0.150 seconds
[0m23:43:00.277422 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=273cce90-ea45-4ecf-b44d-673b462c72dd) - Closing
[0m23:43:00.367866 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:43:00.367866 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`salesorderheader_snapshot`

  
[0m23:43:00.688681 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:43:00.690697 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=1c723aff-85cb-4c15-b1db-c82b45d70b28) - Closing
[0m23:43:00.763645 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:43:00.763645 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

    
DESCRIBE TABLE `salesorderheader_snapshot__dbt_tmp`

  
[0m23:43:00.893774 [debug] [Thread-1 (]: SQL status: OK in 0.130 seconds
[0m23:43:00.893774 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=b354fe97-88f9-4031-91cd-79bb66ea5f8e) - Closing
[0m23:43:00.968414 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:43:00.973449 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */
select * from (
        
    
    with snapshot_query as (

        with salesorderheader_snapshot as (
    SELECT
        SalesOrderID,
        RevisionNumber,
        OrderDate,
        DueDate,
        ShipDate,
        Status,
        OnlineOrderFlag,
        SalesOrderNumber,
        PurchaseOrderNumber,
        AccountNumber,
        CustomerID,
        ShipToAddressID,
        BillToAddressID,
        ShipMethod,
        CreditCardApprovalCode,
        SubTotal,
        TaxAmt,
        Freight,
        TotalDue,
        Comment
    FROM `hive_metastore`.`saleslt`.`salesorderheader`
)

select * from salesorderheader_snapshot

    ),

    snapshotted_data as (

        select *, 
    
        SalesOrderID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`salesorderheader_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        SalesOrderID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(SalesOrderID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        SalesOrderID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        SalesOrderID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`SalesOrderID` != source_data.`SalesOrderID`
        or
        (
            ((snapshotted_data.`SalesOrderID` is null) and not (source_data.`SalesOrderID` is null))
            or
            ((not snapshotted_data.`SalesOrderID` is null) and (source_data.`SalesOrderID` is null))
        ) or snapshotted_data.`RevisionNumber` != source_data.`RevisionNumber`
        or
        (
            ((snapshotted_data.`RevisionNumber` is null) and not (source_data.`RevisionNumber` is null))
            or
            ((not snapshotted_data.`RevisionNumber` is null) and (source_data.`RevisionNumber` is null))
        ) or snapshotted_data.`OrderDate` != source_data.`OrderDate`
        or
        (
            ((snapshotted_data.`OrderDate` is null) and not (source_data.`OrderDate` is null))
            or
            ((not snapshotted_data.`OrderDate` is null) and (source_data.`OrderDate` is null))
        ) or snapshotted_data.`DueDate` != source_data.`DueDate`
        or
        (
            ((snapshotted_data.`DueDate` is null) and not (source_data.`DueDate` is null))
            or
            ((not snapshotted_data.`DueDate` is null) and (source_data.`DueDate` is null))
        ) or snapshotted_data.`ShipDate` != source_data.`ShipDate`
        or
        (
            ((snapshotted_data.`ShipDate` is null) and not (source_data.`ShipDate` is null))
            or
            ((not snapshotted_data.`ShipDate` is null) and (source_data.`ShipDate` is null))
        ) or snapshotted_data.`Status` != source_data.`Status`
        or
        (
            ((snapshotted_data.`Status` is null) and not (source_data.`Status` is null))
            or
            ((not snapshotted_data.`Status` is null) and (source_data.`Status` is null))
        ) or snapshotted_data.`OnlineOrderFlag` != source_data.`OnlineOrderFlag`
        or
        (
            ((snapshotted_data.`OnlineOrderFlag` is null) and not (source_data.`OnlineOrderFlag` is null))
            or
            ((not snapshotted_data.`OnlineOrderFlag` is null) and (source_data.`OnlineOrderFlag` is null))
        ) or snapshotted_data.`SalesOrderNumber` != source_data.`SalesOrderNumber`
        or
        (
            ((snapshotted_data.`SalesOrderNumber` is null) and not (source_data.`SalesOrderNumber` is null))
            or
            ((not snapshotted_data.`SalesOrderNumber` is null) and (source_data.`SalesOrderNumber` is null))
        ) or snapshotted_data.`PurchaseOrderNumber` != source_data.`PurchaseOrderNumber`
        or
        (
            ((snapshotted_data.`PurchaseOrderNumber` is null) and not (source_data.`PurchaseOrderNumber` is null))
            or
            ((not snapshotted_data.`PurchaseOrderNumber` is null) and (source_data.`PurchaseOrderNumber` is null))
        ) or snapshotted_data.`AccountNumber` != source_data.`AccountNumber`
        or
        (
            ((snapshotted_data.`AccountNumber` is null) and not (source_data.`AccountNumber` is null))
            or
            ((not snapshotted_data.`AccountNumber` is null) and (source_data.`AccountNumber` is null))
        ) or snapshotted_data.`CustomerID` != source_data.`CustomerID`
        or
        (
            ((snapshotted_data.`CustomerID` is null) and not (source_data.`CustomerID` is null))
            or
            ((not snapshotted_data.`CustomerID` is null) and (source_data.`CustomerID` is null))
        ) or snapshotted_data.`ShipToAddressID` != source_data.`ShipToAddressID`
        or
        (
            ((snapshotted_data.`ShipToAddressID` is null) and not (source_data.`ShipToAddressID` is null))
            or
            ((not snapshotted_data.`ShipToAddressID` is null) and (source_data.`ShipToAddressID` is null))
        ) or snapshotted_data.`BillToAddressID` != source_data.`BillToAddressID`
        or
        (
            ((snapshotted_data.`BillToAddressID` is null) and not (source_data.`BillToAddressID` is null))
            or
            ((not snapshotted_data.`BillToAddressID` is null) and (source_data.`BillToAddressID` is null))
        ) or snapshotted_data.`ShipMethod` != source_data.`ShipMethod`
        or
        (
            ((snapshotted_data.`ShipMethod` is null) and not (source_data.`ShipMethod` is null))
            or
            ((not snapshotted_data.`ShipMethod` is null) and (source_data.`ShipMethod` is null))
        ) or snapshotted_data.`CreditCardApprovalCode` != source_data.`CreditCardApprovalCode`
        or
        (
            ((snapshotted_data.`CreditCardApprovalCode` is null) and not (source_data.`CreditCardApprovalCode` is null))
            or
            ((not snapshotted_data.`CreditCardApprovalCode` is null) and (source_data.`CreditCardApprovalCode` is null))
        ) or snapshotted_data.`SubTotal` != source_data.`SubTotal`
        or
        (
            ((snapshotted_data.`SubTotal` is null) and not (source_data.`SubTotal` is null))
            or
            ((not snapshotted_data.`SubTotal` is null) and (source_data.`SubTotal` is null))
        ) or snapshotted_data.`TaxAmt` != source_data.`TaxAmt`
        or
        (
            ((snapshotted_data.`TaxAmt` is null) and not (source_data.`TaxAmt` is null))
            or
            ((not snapshotted_data.`TaxAmt` is null) and (source_data.`TaxAmt` is null))
        ) or snapshotted_data.`Freight` != source_data.`Freight`
        or
        (
            ((snapshotted_data.`Freight` is null) and not (source_data.`Freight` is null))
            or
            ((not snapshotted_data.`Freight` is null) and (source_data.`Freight` is null))
        ) or snapshotted_data.`TotalDue` != source_data.`TotalDue`
        or
        (
            ((snapshotted_data.`TotalDue` is null) and not (source_data.`TotalDue` is null))
            or
            ((not snapshotted_data.`TotalDue` is null) and (source_data.`TotalDue` is null))
        ) or snapshotted_data.`Comment` != source_data.`Comment`
        or
        (
            ((snapshotted_data.`Comment` is null) and not (source_data.`Comment` is null))
            or
            ((not snapshotted_data.`Comment` is null) and (source_data.`Comment` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`SalesOrderID` != source_data.`SalesOrderID`
        or
        (
            ((snapshotted_data.`SalesOrderID` is null) and not (source_data.`SalesOrderID` is null))
            or
            ((not snapshotted_data.`SalesOrderID` is null) and (source_data.`SalesOrderID` is null))
        ) or snapshotted_data.`RevisionNumber` != source_data.`RevisionNumber`
        or
        (
            ((snapshotted_data.`RevisionNumber` is null) and not (source_data.`RevisionNumber` is null))
            or
            ((not snapshotted_data.`RevisionNumber` is null) and (source_data.`RevisionNumber` is null))
        ) or snapshotted_data.`OrderDate` != source_data.`OrderDate`
        or
        (
            ((snapshotted_data.`OrderDate` is null) and not (source_data.`OrderDate` is null))
            or
            ((not snapshotted_data.`OrderDate` is null) and (source_data.`OrderDate` is null))
        ) or snapshotted_data.`DueDate` != source_data.`DueDate`
        or
        (
            ((snapshotted_data.`DueDate` is null) and not (source_data.`DueDate` is null))
            or
            ((not snapshotted_data.`DueDate` is null) and (source_data.`DueDate` is null))
        ) or snapshotted_data.`ShipDate` != source_data.`ShipDate`
        or
        (
            ((snapshotted_data.`ShipDate` is null) and not (source_data.`ShipDate` is null))
            or
            ((not snapshotted_data.`ShipDate` is null) and (source_data.`ShipDate` is null))
        ) or snapshotted_data.`Status` != source_data.`Status`
        or
        (
            ((snapshotted_data.`Status` is null) and not (source_data.`Status` is null))
            or
            ((not snapshotted_data.`Status` is null) and (source_data.`Status` is null))
        ) or snapshotted_data.`OnlineOrderFlag` != source_data.`OnlineOrderFlag`
        or
        (
            ((snapshotted_data.`OnlineOrderFlag` is null) and not (source_data.`OnlineOrderFlag` is null))
            or
            ((not snapshotted_data.`OnlineOrderFlag` is null) and (source_data.`OnlineOrderFlag` is null))
        ) or snapshotted_data.`SalesOrderNumber` != source_data.`SalesOrderNumber`
        or
        (
            ((snapshotted_data.`SalesOrderNumber` is null) and not (source_data.`SalesOrderNumber` is null))
            or
            ((not snapshotted_data.`SalesOrderNumber` is null) and (source_data.`SalesOrderNumber` is null))
        ) or snapshotted_data.`PurchaseOrderNumber` != source_data.`PurchaseOrderNumber`
        or
        (
            ((snapshotted_data.`PurchaseOrderNumber` is null) and not (source_data.`PurchaseOrderNumber` is null))
            or
            ((not snapshotted_data.`PurchaseOrderNumber` is null) and (source_data.`PurchaseOrderNumber` is null))
        ) or snapshotted_data.`AccountNumber` != source_data.`AccountNumber`
        or
        (
            ((snapshotted_data.`AccountNumber` is null) and not (source_data.`AccountNumber` is null))
            or
            ((not snapshotted_data.`AccountNumber` is null) and (source_data.`AccountNumber` is null))
        ) or snapshotted_data.`CustomerID` != source_data.`CustomerID`
        or
        (
            ((snapshotted_data.`CustomerID` is null) and not (source_data.`CustomerID` is null))
            or
            ((not snapshotted_data.`CustomerID` is null) and (source_data.`CustomerID` is null))
        ) or snapshotted_data.`ShipToAddressID` != source_data.`ShipToAddressID`
        or
        (
            ((snapshotted_data.`ShipToAddressID` is null) and not (source_data.`ShipToAddressID` is null))
            or
            ((not snapshotted_data.`ShipToAddressID` is null) and (source_data.`ShipToAddressID` is null))
        ) or snapshotted_data.`BillToAddressID` != source_data.`BillToAddressID`
        or
        (
            ((snapshotted_data.`BillToAddressID` is null) and not (source_data.`BillToAddressID` is null))
            or
            ((not snapshotted_data.`BillToAddressID` is null) and (source_data.`BillToAddressID` is null))
        ) or snapshotted_data.`ShipMethod` != source_data.`ShipMethod`
        or
        (
            ((snapshotted_data.`ShipMethod` is null) and not (source_data.`ShipMethod` is null))
            or
            ((not snapshotted_data.`ShipMethod` is null) and (source_data.`ShipMethod` is null))
        ) or snapshotted_data.`CreditCardApprovalCode` != source_data.`CreditCardApprovalCode`
        or
        (
            ((snapshotted_data.`CreditCardApprovalCode` is null) and not (source_data.`CreditCardApprovalCode` is null))
            or
            ((not snapshotted_data.`CreditCardApprovalCode` is null) and (source_data.`CreditCardApprovalCode` is null))
        ) or snapshotted_data.`SubTotal` != source_data.`SubTotal`
        or
        (
            ((snapshotted_data.`SubTotal` is null) and not (source_data.`SubTotal` is null))
            or
            ((not snapshotted_data.`SubTotal` is null) and (source_data.`SubTotal` is null))
        ) or snapshotted_data.`TaxAmt` != source_data.`TaxAmt`
        or
        (
            ((snapshotted_data.`TaxAmt` is null) and not (source_data.`TaxAmt` is null))
            or
            ((not snapshotted_data.`TaxAmt` is null) and (source_data.`TaxAmt` is null))
        ) or snapshotted_data.`Freight` != source_data.`Freight`
        or
        (
            ((snapshotted_data.`Freight` is null) and not (source_data.`Freight` is null))
            or
            ((not snapshotted_data.`Freight` is null) and (source_data.`Freight` is null))
        ) or snapshotted_data.`TotalDue` != source_data.`TotalDue`
        or
        (
            ((snapshotted_data.`TotalDue` is null) and not (source_data.`TotalDue` is null))
            or
            ((not snapshotted_data.`TotalDue` is null) and (source_data.`TotalDue` is null))
        ) or snapshotted_data.`Comment` != source_data.`Comment`
        or
        (
            ((snapshotted_data.`Comment` is null) and not (source_data.`Comment` is null))
            or
            ((not snapshotted_data.`Comment` is null) and (source_data.`Comment` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

    ) as __dbt_sbq
    where false
    limit 0

[0m23:43:01.305901 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:43:01.305901 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=d7bb46c3-7cad-42c2-b3b5-cbdc55bf0d1d) - Closing
[0m23:43:01.383408 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:43:01.383408 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:43:01.499151 [debug] [Thread-1 (]: SQL status: OK in 0.120 seconds
[0m23:43:01.499151 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=aee54f12-c985-4a44-b42d-d68acda2a805) - Closing
[0m23:43:01.563532 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:43:01.568699 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:43:01.568699 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

      merge into `hive_metastore`.`snapshots`.`salesorderheader_snapshot` as DBT_INTERNAL_DEST
    
      using `salesorderheader_snapshot__dbt_tmp` as DBT_INTERNAL_SOURCE
    
    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id
    when matched
     
       and DBT_INTERNAL_DEST.dbt_valid_to is null
     
     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')
        then update
        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to

    when not matched
     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'
        then insert *
    ;

  
[0m23:43:06.314487 [debug] [Thread-1 (]: SQL status: OK in 4.740 seconds
[0m23:43:06.314487 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=9610f4b6-062f-4c69-9b1d-5f2aa5539960) - Closing
[0m23:43:06.386522 [debug] [Thread-1 (]: Applying DROP to: `salesorderheader_snapshot__dbt_tmp`
[0m23:43:06.386522 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:43:06.393585 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */
DROP VIEW IF EXISTS `salesorderheader_snapshot__dbt_tmp`
[0m23:43:06.503264 [debug] [Thread-1 (]: SQL status: OK in 0.110 seconds
[0m23:43:06.503264 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=e45560f2-32e3-4ef1-8091-405647d0a422, command-id=7c5d6995-a4d2-47e7-8453-29d87c947395) - Closing
[0m23:43:06.583413 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '68da9ca7-96e6-415f-804e-0786f6d6ea17', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002451FC71CF0>]}
[0m23:43:06.587602 [info ] [Thread-1 (]: 7 of 7 OK snapshotted snapshots.salesorderheader_snapshot ...................... [[32mOK[0m in 9.39s]
[0m23:43:06.587602 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.salesorderheader_snapshot
[0m23:43:06.597329 [debug] [MainThread]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=master, idle-time=64.74561738967896s, language=None, compute-name=) - Recreating due to idleness
[0m23:43:06.598138 [debug] [MainThread]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=master, idle-time=0s, language=None, compute-name=) - Reset connection handle
[0m23:43:06.598138 [debug] [MainThread]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=master, idle-time=0s, language=None, compute-name=) - Reusing connection previously named master
[0m23:43:06.598138 [debug] [MainThread]: Connection 'master' was properly closed.
[0m23:43:06.598138 [debug] [MainThread]: Connection 'list_hive_metastore' was properly closed.
[0m23:43:06.598138 [debug] [MainThread]: On list_hive_metastore: Close
[0m23:43:06.598138 [debug] [MainThread]: Databricks adapter: Connection(session-id=339dfdc4-e170-44c8-bc92-a153ab9ffeee) - Closing
[0m23:43:06.680581 [debug] [MainThread]: Connection 'list_hive_metastore_snapshots' was properly closed.
[0m23:43:06.680581 [debug] [MainThread]: On list_hive_metastore_snapshots: Close
[0m23:43:06.685508 [debug] [MainThread]: Databricks adapter: Connection(session-id=4d37932c-f200-48fa-a156-e27a38360603) - Closing
[0m23:43:06.767712 [debug] [MainThread]: Connection 'snapshot.medalion_dbt_spark.salesorderheader_snapshot' was properly closed.
[0m23:43:06.773352 [debug] [MainThread]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: Close
[0m23:43:06.777599 [debug] [MainThread]: Databricks adapter: Connection(session-id=e45560f2-32e3-4ef1-8091-405647d0a422) - Closing
[0m23:43:06.877576 [info ] [MainThread]: 
[0m23:43:06.885557 [info ] [MainThread]: Finished running 7 snapshots in 0 hours 1 minutes and 8.87 seconds (68.87s).
[0m23:43:06.887569 [debug] [MainThread]: Command end result
[0m23:43:07.033512 [debug] [MainThread]: Wrote artifact WritableManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\manifest.json
[0m23:43:07.033512 [debug] [MainThread]: Wrote artifact SemanticManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\semantic_manifest.json
[0m23:43:07.043593 [debug] [MainThread]: Wrote artifact RunExecutionResult to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\run_results.json
[0m23:43:07.043593 [info ] [MainThread]: 
[0m23:43:07.043593 [info ] [MainThread]: [32mCompleted successfully[0m
[0m23:43:07.043593 [info ] [MainThread]: 
[0m23:43:07.043593 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m23:43:07.043593 [debug] [MainThread]: Command `dbt snapshot` succeeded at 23:43:07.043593 after 72.40 seconds
[0m23:43:07.043593 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000245026465C0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000024506B8EF50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000024502023FA0>]}
[0m23:43:07.043593 [debug] [MainThread]: Flushing usage events
[0m23:43:08.623653 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m23:46:25.103217 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001F4B55F65F0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001F4B37EEBF0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001F4B37EEA10>]}


============================== 23:46:25.113246 | 293dbbac-b276-49c5-8595-c452e7009c54 ==============================
[0m23:46:25.113246 [info ] [MainThread]: Running with dbt=1.10.1
[0m23:46:25.113246 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'version_check': 'True', 'debug': 'False', 'log_path': 'D:\\Academic-Project\\Portofolio Data Engineer\\medalion_dbt_spark\\logs', 'profiles_dir': 'C:\\Users\\M S I\\.dbt', 'fail_fast': 'False', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'log_format': 'default', 'introspect': 'True', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'target_path': 'None', 'invocation_command': 'dbt snapshot', 'send_anonymous_usage_stats': 'True'}
[0m23:46:26.119859 [debug] [MainThread]: Spark adapter: Setting pyhive.hive logging to ERROR
[0m23:46:26.119859 [debug] [MainThread]: Spark adapter: Setting thrift.transport logging to ERROR
[0m23:46:26.119859 [debug] [MainThread]: Spark adapter: Setting thrift.protocol logging to ERROR
[0m23:46:27.578409 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '293dbbac-b276-49c5-8595-c452e7009c54', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001F4D03921A0>]}
[0m23:46:27.648464 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '293dbbac-b276-49c5-8595-c452e7009c54', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001F4B60729B0>]}
[0m23:46:27.648464 [info ] [MainThread]: Registered adapter: databricks=1.10.3
[0m23:46:28.023591 [debug] [MainThread]: checksum: 2c026f85d539c10c69b093157526ce33d0bf5533489eafb07fe5172434ec7740, vars: {}, profile: , target: , version: 1.10.1
[0m23:46:28.393761 [debug] [MainThread]: Partial parsing enabled: 4 files deleted, 1 files added, 0 files changed.
[0m23:46:28.393761 [debug] [MainThread]: Partial parsing: added file: medalion_dbt_spark://models\staging\bronze.yml
[0m23:46:28.403491 [debug] [MainThread]: Partial parsing: deleted file: medalion_dbt_spark://models\example\my_second_dbt_model.sql
[0m23:46:28.403491 [debug] [MainThread]: Partial parsing: deleted file: medalion_dbt_spark://models\example\my_first_dbt_model.sql
[0m23:46:28.793370 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 1 unused configuration paths:
- models.medalion_dbt_spark.example
[0m23:46:28.805718 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '293dbbac-b276-49c5-8595-c452e7009c54', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001F4D1C4E1A0>]}
[0m23:46:28.887623 [debug] [MainThread]: Wrote artifact WritableManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\manifest.json
[0m23:46:28.893390 [debug] [MainThread]: Wrote artifact SemanticManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\semantic_manifest.json
[0m23:46:28.930856 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '293dbbac-b276-49c5-8595-c452e7009c54', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001F4D1C3F3A0>]}
[0m23:46:28.932860 [info ] [MainThread]: Found 7 snapshots, 9 sources, 671 macros
[0m23:46:28.933370 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '293dbbac-b276-49c5-8595-c452e7009c54', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001F4D1C4CF40>]}
[0m23:46:28.933370 [info ] [MainThread]: 
[0m23:46:28.933370 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m23:46:28.933370 [info ] [MainThread]: 
[0m23:46:28.933370 [debug] [MainThread]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=master, idle-time=0s, language=None, compute-name=) - Creating connection
[0m23:46:28.933370 [debug] [MainThread]: Acquiring new databricks connection 'master'
[0m23:46:28.943535 [debug] [ThreadPool]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=list_hive_metastore, idle-time=0s, language=None, compute-name=) - Creating connection
[0m23:46:28.943535 [debug] [ThreadPool]: Acquiring new databricks connection 'list_hive_metastore'
[0m23:46:28.943535 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore"
[0m23:46:28.943535 [debug] [ThreadPool]: On list_hive_metastore: GetSchemas(database=hive_metastore, schema=None)
[0m23:46:28.943535 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m23:46:29.303532 [debug] [ThreadPool]: Databricks adapter: Connection(session-id=fb0968ee-774b-4056-a06d-3ab2e77d04be) - Created
[0m23:46:29.913582 [debug] [ThreadPool]: SQL status: OK in 0.970 seconds
[0m23:46:29.917111 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=fb0968ee-774b-4056-a06d-3ab2e77d04be, command-id=72e3e6e7-7322-49b3-a83d-aeef26d8cf08) - Closing
[0m23:46:30.008136 [debug] [ThreadPool]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=list_hive_metastore_snapshots, idle-time=0s, language=None, compute-name=) - Creating connection
[0m23:46:30.013513 [debug] [ThreadPool]: Acquiring new databricks connection 'list_hive_metastore_snapshots'
[0m23:46:30.013513 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_snapshots"
[0m23:46:30.018354 [debug] [ThreadPool]: On list_hive_metastore_snapshots: GetTables(database=hive_metastore, schema=snapshots)
[0m23:46:30.019081 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m23:46:30.325739 [debug] [ThreadPool]: Databricks adapter: Connection(session-id=0b7c6548-8fd3-4955-8e2b-821c99c6ec1a) - Created
[0m23:46:30.497901 [debug] [ThreadPool]: SQL status: OK in 0.480 seconds
[0m23:46:30.497901 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=0b7c6548-8fd3-4955-8e2b-821c99c6ec1a, command-id=63cd1400-420b-46f5-bfbd-28b7f3d89e64) - Closing
[0m23:46:30.612518 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_snapshots"
[0m23:46:30.613582 [debug] [ThreadPool]: On list_hive_metastore_snapshots: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "list_hive_metastore_snapshots"} */

    
SELECT current_catalog()

  
[0m23:46:30.846326 [debug] [ThreadPool]: SQL status: OK in 0.230 seconds
[0m23:46:30.863633 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=0b7c6548-8fd3-4955-8e2b-821c99c6ec1a, command-id=460dc675-b220-4f78-93d8-fa4695972f38) - Closing
[0m23:46:30.943815 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_snapshots"
[0m23:46:30.946538 [debug] [ThreadPool]: On list_hive_metastore_snapshots: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "list_hive_metastore_snapshots"} */

    
SHOW VIEWS IN `hive_metastore`.`snapshots`

  
[0m23:46:31.223442 [debug] [ThreadPool]: SQL status: OK in 0.280 seconds
[0m23:46:31.223442 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=0b7c6548-8fd3-4955-8e2b-821c99c6ec1a, command-id=5031049d-be65-42a6-993f-eee41034cc8a) - Closing
[0m23:46:31.303810 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '293dbbac-b276-49c5-8595-c452e7009c54', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001F4B4063730>]}
[0m23:46:31.303810 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.address_snapshot
[0m23:46:31.313523 [info ] [Thread-1 (]: 1 of 7 START snapshot snapshots.address_snapshot ............................... [RUN]
[0m23:46:31.313523 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=snapshot.medalion_dbt_spark.address_snapshot, idle-time=0s, language=None, compute-name=) - Creating connection
[0m23:46:31.315258 [debug] [Thread-1 (]: Acquiring new databricks connection 'snapshot.medalion_dbt_spark.address_snapshot'
[0m23:46:31.316264 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.address_snapshot
[0m23:46:31.326710 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.address_snapshot
[0m23:46:31.370467 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:46:31.371454 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

      describe extended `hive_metastore`.`snapshots`.`address_snapshot`
  
[0m23:46:31.371454 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m23:46:31.677890 [debug] [Thread-1 (]: Databricks adapter: Connection(session-id=660f7728-b53b-4865-9597-8ecff263d840) - Created
[0m23:46:32.307812 [debug] [Thread-1 (]: SQL status: OK in 0.940 seconds
[0m23:46:32.317707 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=06653620-21b7-45a1-92e6-cf0b3d7fca57) - Closing
[0m23:46:32.443415 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:46:32.453365 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */
select * from (
        



with source_data as (
    select
        AddressID,
        AddressLine1,
        AddressLine2,
        City,
        StateProvince,
        CountryRegion,
        PostalCode
    from `hive_metastore`.`saleslt`.`address`
)
select *
from source_data

    ) as __dbt_sbq
    where false
    limit 0

    
[0m23:46:32.756470 [debug] [Thread-1 (]: SQL status: OK in 0.300 seconds
[0m23:46:32.766510 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=a3606602-c6df-4004-9113-7707c6d7a872) - Closing
[0m23:46:32.848676 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:46:32.850683 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`address_snapshot`

  
[0m23:46:33.164925 [debug] [Thread-1 (]: SQL status: OK in 0.310 seconds
[0m23:46:33.164925 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=4343fb27-8b7c-49e6-8e93-a862d06b28c0) - Closing
[0m23:46:33.262062 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:46:33.263770 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`address_snapshot`

  
[0m23:46:33.556129 [debug] [Thread-1 (]: SQL status: OK in 0.290 seconds
[0m23:46:33.567661 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=1f13accf-aa13-4eed-b3b9-532353a5ceed) - Closing
[0m23:46:33.708132 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:46:33.708132 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

        
  
    create or replace temporary view `address_snapshot__dbt_tmp` as
      
    
    with snapshot_query as (

        with source_data as (
    select
        AddressID,
        AddressLine1,
        AddressLine2,
        City,
        StateProvince,
        CountryRegion,
        PostalCode
    from `hive_metastore`.`saleslt`.`address`
)
select *
from source_data

    ),

    snapshotted_data as (

        select *, 
    
        AddressID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`address_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        AddressID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(AddressID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        AddressID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        AddressID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`AddressID` != source_data.`AddressID`
        or
        (
            ((snapshotted_data.`AddressID` is null) and not (source_data.`AddressID` is null))
            or
            ((not snapshotted_data.`AddressID` is null) and (source_data.`AddressID` is null))
        ) or snapshotted_data.`AddressLine1` != source_data.`AddressLine1`
        or
        (
            ((snapshotted_data.`AddressLine1` is null) and not (source_data.`AddressLine1` is null))
            or
            ((not snapshotted_data.`AddressLine1` is null) and (source_data.`AddressLine1` is null))
        ) or snapshotted_data.`AddressLine2` != source_data.`AddressLine2`
        or
        (
            ((snapshotted_data.`AddressLine2` is null) and not (source_data.`AddressLine2` is null))
            or
            ((not snapshotted_data.`AddressLine2` is null) and (source_data.`AddressLine2` is null))
        ) or snapshotted_data.`City` != source_data.`City`
        or
        (
            ((snapshotted_data.`City` is null) and not (source_data.`City` is null))
            or
            ((not snapshotted_data.`City` is null) and (source_data.`City` is null))
        ) or snapshotted_data.`StateProvince` != source_data.`StateProvince`
        or
        (
            ((snapshotted_data.`StateProvince` is null) and not (source_data.`StateProvince` is null))
            or
            ((not snapshotted_data.`StateProvince` is null) and (source_data.`StateProvince` is null))
        ) or snapshotted_data.`CountryRegion` != source_data.`CountryRegion`
        or
        (
            ((snapshotted_data.`CountryRegion` is null) and not (source_data.`CountryRegion` is null))
            or
            ((not snapshotted_data.`CountryRegion` is null) and (source_data.`CountryRegion` is null))
        ) or snapshotted_data.`PostalCode` != source_data.`PostalCode`
        or
        (
            ((snapshotted_data.`PostalCode` is null) and not (source_data.`PostalCode` is null))
            or
            ((not snapshotted_data.`PostalCode` is null) and (source_data.`PostalCode` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`AddressID` != source_data.`AddressID`
        or
        (
            ((snapshotted_data.`AddressID` is null) and not (source_data.`AddressID` is null))
            or
            ((not snapshotted_data.`AddressID` is null) and (source_data.`AddressID` is null))
        ) or snapshotted_data.`AddressLine1` != source_data.`AddressLine1`
        or
        (
            ((snapshotted_data.`AddressLine1` is null) and not (source_data.`AddressLine1` is null))
            or
            ((not snapshotted_data.`AddressLine1` is null) and (source_data.`AddressLine1` is null))
        ) or snapshotted_data.`AddressLine2` != source_data.`AddressLine2`
        or
        (
            ((snapshotted_data.`AddressLine2` is null) and not (source_data.`AddressLine2` is null))
            or
            ((not snapshotted_data.`AddressLine2` is null) and (source_data.`AddressLine2` is null))
        ) or snapshotted_data.`City` != source_data.`City`
        or
        (
            ((snapshotted_data.`City` is null) and not (source_data.`City` is null))
            or
            ((not snapshotted_data.`City` is null) and (source_data.`City` is null))
        ) or snapshotted_data.`StateProvince` != source_data.`StateProvince`
        or
        (
            ((snapshotted_data.`StateProvince` is null) and not (source_data.`StateProvince` is null))
            or
            ((not snapshotted_data.`StateProvince` is null) and (source_data.`StateProvince` is null))
        ) or snapshotted_data.`CountryRegion` != source_data.`CountryRegion`
        or
        (
            ((snapshotted_data.`CountryRegion` is null) and not (source_data.`CountryRegion` is null))
            or
            ((not snapshotted_data.`CountryRegion` is null) and (source_data.`CountryRegion` is null))
        ) or snapshotted_data.`PostalCode` != source_data.`PostalCode`
        or
        (
            ((snapshotted_data.`PostalCode` is null) and not (source_data.`PostalCode` is null))
            or
            ((not snapshotted_data.`PostalCode` is null) and (source_data.`PostalCode` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

  
    
[0m23:46:34.023786 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:46:34.023786 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=286e6df1-940c-477a-9a8d-7915d6fee4b9) - Closing
[0m23:46:34.107296 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:46:34.107296 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

    
DESCRIBE TABLE `address_snapshot__dbt_tmp`

  
[0m23:46:34.271004 [debug] [Thread-1 (]: SQL status: OK in 0.160 seconds
[0m23:46:34.273514 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=e1d1cfae-3973-4a4a-a5a0-fa947bc7bc06) - Closing
[0m23:46:34.353769 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:46:34.358448 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`address_snapshot`

  
[0m23:46:34.678165 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:46:34.688126 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=d95b82cb-3b01-44f5-8384-b081f0d239b2) - Closing
[0m23:46:34.783489 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:46:34.785771 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

    
DESCRIBE TABLE `address_snapshot__dbt_tmp`

  
[0m23:46:34.927794 [debug] [Thread-1 (]: SQL status: OK in 0.140 seconds
[0m23:46:34.935530 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=9a4b8483-6489-41df-823f-72ab7fe35c08) - Closing
[0m23:46:35.017628 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:46:35.017628 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`address_snapshot`

  
[0m23:46:35.328025 [debug] [Thread-1 (]: SQL status: OK in 0.310 seconds
[0m23:46:35.335359 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=008c38a8-6f9e-4eed-9df6-9de85fadbec1) - Closing
[0m23:46:35.403758 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:46:35.403758 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

    
DESCRIBE TABLE `address_snapshot__dbt_tmp`

  
[0m23:46:35.529024 [debug] [Thread-1 (]: SQL status: OK in 0.120 seconds
[0m23:46:35.529024 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=ecb4dd54-3545-4fa0-a3ea-637f4284ab84) - Closing
[0m23:46:35.633613 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:46:35.633613 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */
select * from (
        
    
    with snapshot_query as (

        with source_data as (
    select
        AddressID,
        AddressLine1,
        AddressLine2,
        City,
        StateProvince,
        CountryRegion,
        PostalCode
    from `hive_metastore`.`saleslt`.`address`
)
select *
from source_data

    ),

    snapshotted_data as (

        select *, 
    
        AddressID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`address_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        AddressID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(AddressID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        AddressID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        AddressID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`AddressID` != source_data.`AddressID`
        or
        (
            ((snapshotted_data.`AddressID` is null) and not (source_data.`AddressID` is null))
            or
            ((not snapshotted_data.`AddressID` is null) and (source_data.`AddressID` is null))
        ) or snapshotted_data.`AddressLine1` != source_data.`AddressLine1`
        or
        (
            ((snapshotted_data.`AddressLine1` is null) and not (source_data.`AddressLine1` is null))
            or
            ((not snapshotted_data.`AddressLine1` is null) and (source_data.`AddressLine1` is null))
        ) or snapshotted_data.`AddressLine2` != source_data.`AddressLine2`
        or
        (
            ((snapshotted_data.`AddressLine2` is null) and not (source_data.`AddressLine2` is null))
            or
            ((not snapshotted_data.`AddressLine2` is null) and (source_data.`AddressLine2` is null))
        ) or snapshotted_data.`City` != source_data.`City`
        or
        (
            ((snapshotted_data.`City` is null) and not (source_data.`City` is null))
            or
            ((not snapshotted_data.`City` is null) and (source_data.`City` is null))
        ) or snapshotted_data.`StateProvince` != source_data.`StateProvince`
        or
        (
            ((snapshotted_data.`StateProvince` is null) and not (source_data.`StateProvince` is null))
            or
            ((not snapshotted_data.`StateProvince` is null) and (source_data.`StateProvince` is null))
        ) or snapshotted_data.`CountryRegion` != source_data.`CountryRegion`
        or
        (
            ((snapshotted_data.`CountryRegion` is null) and not (source_data.`CountryRegion` is null))
            or
            ((not snapshotted_data.`CountryRegion` is null) and (source_data.`CountryRegion` is null))
        ) or snapshotted_data.`PostalCode` != source_data.`PostalCode`
        or
        (
            ((snapshotted_data.`PostalCode` is null) and not (source_data.`PostalCode` is null))
            or
            ((not snapshotted_data.`PostalCode` is null) and (source_data.`PostalCode` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`AddressID` != source_data.`AddressID`
        or
        (
            ((snapshotted_data.`AddressID` is null) and not (source_data.`AddressID` is null))
            or
            ((not snapshotted_data.`AddressID` is null) and (source_data.`AddressID` is null))
        ) or snapshotted_data.`AddressLine1` != source_data.`AddressLine1`
        or
        (
            ((snapshotted_data.`AddressLine1` is null) and not (source_data.`AddressLine1` is null))
            or
            ((not snapshotted_data.`AddressLine1` is null) and (source_data.`AddressLine1` is null))
        ) or snapshotted_data.`AddressLine2` != source_data.`AddressLine2`
        or
        (
            ((snapshotted_data.`AddressLine2` is null) and not (source_data.`AddressLine2` is null))
            or
            ((not snapshotted_data.`AddressLine2` is null) and (source_data.`AddressLine2` is null))
        ) or snapshotted_data.`City` != source_data.`City`
        or
        (
            ((snapshotted_data.`City` is null) and not (source_data.`City` is null))
            or
            ((not snapshotted_data.`City` is null) and (source_data.`City` is null))
        ) or snapshotted_data.`StateProvince` != source_data.`StateProvince`
        or
        (
            ((snapshotted_data.`StateProvince` is null) and not (source_data.`StateProvince` is null))
            or
            ((not snapshotted_data.`StateProvince` is null) and (source_data.`StateProvince` is null))
        ) or snapshotted_data.`CountryRegion` != source_data.`CountryRegion`
        or
        (
            ((snapshotted_data.`CountryRegion` is null) and not (source_data.`CountryRegion` is null))
            or
            ((not snapshotted_data.`CountryRegion` is null) and (source_data.`CountryRegion` is null))
        ) or snapshotted_data.`PostalCode` != source_data.`PostalCode`
        or
        (
            ((snapshotted_data.`PostalCode` is null) and not (source_data.`PostalCode` is null))
            or
            ((not snapshotted_data.`PostalCode` is null) and (source_data.`PostalCode` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

    ) as __dbt_sbq
    where false
    limit 0

[0m23:46:35.937712 [debug] [Thread-1 (]: SQL status: OK in 0.300 seconds
[0m23:46:35.945434 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=d8fd0eb5-d4da-4d92-926b-be4f87227acf) - Closing
[0m23:46:36.023605 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:46:36.024857 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:46:36.123508 [debug] [Thread-1 (]: SQL status: OK in 0.100 seconds
[0m23:46:36.127361 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=a87438a4-2bae-4147-a901-050cf866ae84) - Closing
[0m23:46:36.200208 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:46:36.203490 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:46:36.203490 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */

      merge into `hive_metastore`.`snapshots`.`address_snapshot` as DBT_INTERNAL_DEST
    
      using `address_snapshot__dbt_tmp` as DBT_INTERNAL_SOURCE
    
    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id
    when matched
     
       and DBT_INTERNAL_DEST.dbt_valid_to is null
     
     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')
        then update
        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to

    when not matched
     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'
        then insert *
    ;

  
[0m23:46:40.384018 [debug] [Thread-1 (]: SQL status: OK in 4.180 seconds
[0m23:46:40.384018 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=a88ffa08-e186-4465-9e48-8d22ac614f80) - Closing
[0m23:46:40.496729 [debug] [Thread-1 (]: Applying DROP to: `address_snapshot__dbt_tmp`
[0m23:46:40.496729 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.address_snapshot"
[0m23:46:40.503804 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.address_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.address_snapshot"} */
DROP VIEW IF EXISTS `address_snapshot__dbt_tmp`
[0m23:46:40.633731 [debug] [Thread-1 (]: SQL status: OK in 0.130 seconds
[0m23:46:40.643672 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=2d28dc2d-3038-47a8-9dd8-a9612cc10c4d) - Closing
[0m23:46:40.725232 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '293dbbac-b276-49c5-8595-c452e7009c54', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001F4B2C3F1C0>]}
[0m23:46:40.733563 [info ] [Thread-1 (]: 1 of 7 OK snapshotted snapshots.address_snapshot ............................... [[32mOK[0m in 9.41s]
[0m23:46:40.733563 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.address_snapshot
[0m23:46:40.736181 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.customer_snapshot
[0m23:46:40.737621 [info ] [Thread-1 (]: 2 of 7 START snapshot snapshots.customer_snapshot .............................. [RUN]
[0m23:46:40.737621 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.address_snapshot, now snapshot.medalion_dbt_spark.customer_snapshot)
[0m23:46:40.737621 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=660f7728-b53b-4865-9597-8ecff263d840, name=snapshot.medalion_dbt_spark.customer_snapshot, idle-time=0.012389421463012695s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.address_snapshot
[0m23:46:40.737621 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.customer_snapshot
[0m23:46:40.743798 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.customer_snapshot
[0m23:46:40.756817 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:46:40.757375 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

      describe extended `hive_metastore`.`snapshots`.`customer_snapshot`
  
[0m23:46:41.298668 [debug] [Thread-1 (]: SQL status: OK in 0.540 seconds
[0m23:46:41.307651 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=310c74ca-4501-4150-aa83-934cbca9ef34) - Closing
[0m23:46:41.387594 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:46:41.391738 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */
select * from (
        



with source_data as (
    select
        CustomerId,
        NameStyle,
        Title,
        FirstName,
        MiddleName,
        LastName,
        Suffix,
        CompanyName,
        SalesPerson,
        EmailAddress,
        Phone,
        PasswordHash,
        PasswordSalt
    from `hive_metastore`.`saleslt`.`customer`
)
select *
from source_data

    ) as __dbt_sbq
    where false
    limit 0

    
[0m23:46:41.665562 [debug] [Thread-1 (]: SQL status: OK in 0.270 seconds
[0m23:46:41.673510 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=3414f1ab-f944-4360-9372-9f4f7623e28b) - Closing
[0m23:46:41.763498 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:46:41.765754 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`customer_snapshot`

  
[0m23:46:42.078702 [debug] [Thread-1 (]: SQL status: OK in 0.310 seconds
[0m23:46:42.087941 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=2c9b526f-e697-49a0-90a3-340b6934c709) - Closing
[0m23:46:42.190536 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:46:42.193781 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`customer_snapshot`

  
[0m23:46:42.492026 [debug] [Thread-1 (]: SQL status: OK in 0.300 seconds
[0m23:46:42.493530 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=e7c06ea8-6cf4-4e1c-a813-f54b9bddb80c) - Closing
[0m23:46:42.609351 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:46:42.609351 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

        
  
    create or replace temporary view `customer_snapshot__dbt_tmp` as
      
    
    with snapshot_query as (

        with source_data as (
    select
        CustomerId,
        NameStyle,
        Title,
        FirstName,
        MiddleName,
        LastName,
        Suffix,
        CompanyName,
        SalesPerson,
        EmailAddress,
        Phone,
        PasswordHash,
        PasswordSalt
    from `hive_metastore`.`saleslt`.`customer`
)
select *
from source_data

    ),

    snapshotted_data as (

        select *, 
    
        CustomerId as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`customer_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        CustomerId as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(CustomerId as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        CustomerId as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        CustomerId as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`CustomerId` != source_data.`CustomerId`
        or
        (
            ((snapshotted_data.`CustomerId` is null) and not (source_data.`CustomerId` is null))
            or
            ((not snapshotted_data.`CustomerId` is null) and (source_data.`CustomerId` is null))
        ) or snapshotted_data.`NameStyle` != source_data.`NameStyle`
        or
        (
            ((snapshotted_data.`NameStyle` is null) and not (source_data.`NameStyle` is null))
            or
            ((not snapshotted_data.`NameStyle` is null) and (source_data.`NameStyle` is null))
        ) or snapshotted_data.`Title` != source_data.`Title`
        or
        (
            ((snapshotted_data.`Title` is null) and not (source_data.`Title` is null))
            or
            ((not snapshotted_data.`Title` is null) and (source_data.`Title` is null))
        ) or snapshotted_data.`FirstName` != source_data.`FirstName`
        or
        (
            ((snapshotted_data.`FirstName` is null) and not (source_data.`FirstName` is null))
            or
            ((not snapshotted_data.`FirstName` is null) and (source_data.`FirstName` is null))
        ) or snapshotted_data.`MiddleName` != source_data.`MiddleName`
        or
        (
            ((snapshotted_data.`MiddleName` is null) and not (source_data.`MiddleName` is null))
            or
            ((not snapshotted_data.`MiddleName` is null) and (source_data.`MiddleName` is null))
        ) or snapshotted_data.`LastName` != source_data.`LastName`
        or
        (
            ((snapshotted_data.`LastName` is null) and not (source_data.`LastName` is null))
            or
            ((not snapshotted_data.`LastName` is null) and (source_data.`LastName` is null))
        ) or snapshotted_data.`Suffix` != source_data.`Suffix`
        or
        (
            ((snapshotted_data.`Suffix` is null) and not (source_data.`Suffix` is null))
            or
            ((not snapshotted_data.`Suffix` is null) and (source_data.`Suffix` is null))
        ) or snapshotted_data.`CompanyName` != source_data.`CompanyName`
        or
        (
            ((snapshotted_data.`CompanyName` is null) and not (source_data.`CompanyName` is null))
            or
            ((not snapshotted_data.`CompanyName` is null) and (source_data.`CompanyName` is null))
        ) or snapshotted_data.`SalesPerson` != source_data.`SalesPerson`
        or
        (
            ((snapshotted_data.`SalesPerson` is null) and not (source_data.`SalesPerson` is null))
            or
            ((not snapshotted_data.`SalesPerson` is null) and (source_data.`SalesPerson` is null))
        ) or snapshotted_data.`EmailAddress` != source_data.`EmailAddress`
        or
        (
            ((snapshotted_data.`EmailAddress` is null) and not (source_data.`EmailAddress` is null))
            or
            ((not snapshotted_data.`EmailAddress` is null) and (source_data.`EmailAddress` is null))
        ) or snapshotted_data.`Phone` != source_data.`Phone`
        or
        (
            ((snapshotted_data.`Phone` is null) and not (source_data.`Phone` is null))
            or
            ((not snapshotted_data.`Phone` is null) and (source_data.`Phone` is null))
        ) or snapshotted_data.`PasswordHash` != source_data.`PasswordHash`
        or
        (
            ((snapshotted_data.`PasswordHash` is null) and not (source_data.`PasswordHash` is null))
            or
            ((not snapshotted_data.`PasswordHash` is null) and (source_data.`PasswordHash` is null))
        ) or snapshotted_data.`PasswordSalt` != source_data.`PasswordSalt`
        or
        (
            ((snapshotted_data.`PasswordSalt` is null) and not (source_data.`PasswordSalt` is null))
            or
            ((not snapshotted_data.`PasswordSalt` is null) and (source_data.`PasswordSalt` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`CustomerId` != source_data.`CustomerId`
        or
        (
            ((snapshotted_data.`CustomerId` is null) and not (source_data.`CustomerId` is null))
            or
            ((not snapshotted_data.`CustomerId` is null) and (source_data.`CustomerId` is null))
        ) or snapshotted_data.`NameStyle` != source_data.`NameStyle`
        or
        (
            ((snapshotted_data.`NameStyle` is null) and not (source_data.`NameStyle` is null))
            or
            ((not snapshotted_data.`NameStyle` is null) and (source_data.`NameStyle` is null))
        ) or snapshotted_data.`Title` != source_data.`Title`
        or
        (
            ((snapshotted_data.`Title` is null) and not (source_data.`Title` is null))
            or
            ((not snapshotted_data.`Title` is null) and (source_data.`Title` is null))
        ) or snapshotted_data.`FirstName` != source_data.`FirstName`
        or
        (
            ((snapshotted_data.`FirstName` is null) and not (source_data.`FirstName` is null))
            or
            ((not snapshotted_data.`FirstName` is null) and (source_data.`FirstName` is null))
        ) or snapshotted_data.`MiddleName` != source_data.`MiddleName`
        or
        (
            ((snapshotted_data.`MiddleName` is null) and not (source_data.`MiddleName` is null))
            or
            ((not snapshotted_data.`MiddleName` is null) and (source_data.`MiddleName` is null))
        ) or snapshotted_data.`LastName` != source_data.`LastName`
        or
        (
            ((snapshotted_data.`LastName` is null) and not (source_data.`LastName` is null))
            or
            ((not snapshotted_data.`LastName` is null) and (source_data.`LastName` is null))
        ) or snapshotted_data.`Suffix` != source_data.`Suffix`
        or
        (
            ((snapshotted_data.`Suffix` is null) and not (source_data.`Suffix` is null))
            or
            ((not snapshotted_data.`Suffix` is null) and (source_data.`Suffix` is null))
        ) or snapshotted_data.`CompanyName` != source_data.`CompanyName`
        or
        (
            ((snapshotted_data.`CompanyName` is null) and not (source_data.`CompanyName` is null))
            or
            ((not snapshotted_data.`CompanyName` is null) and (source_data.`CompanyName` is null))
        ) or snapshotted_data.`SalesPerson` != source_data.`SalesPerson`
        or
        (
            ((snapshotted_data.`SalesPerson` is null) and not (source_data.`SalesPerson` is null))
            or
            ((not snapshotted_data.`SalesPerson` is null) and (source_data.`SalesPerson` is null))
        ) or snapshotted_data.`EmailAddress` != source_data.`EmailAddress`
        or
        (
            ((snapshotted_data.`EmailAddress` is null) and not (source_data.`EmailAddress` is null))
            or
            ((not snapshotted_data.`EmailAddress` is null) and (source_data.`EmailAddress` is null))
        ) or snapshotted_data.`Phone` != source_data.`Phone`
        or
        (
            ((snapshotted_data.`Phone` is null) and not (source_data.`Phone` is null))
            or
            ((not snapshotted_data.`Phone` is null) and (source_data.`Phone` is null))
        ) or snapshotted_data.`PasswordHash` != source_data.`PasswordHash`
        or
        (
            ((snapshotted_data.`PasswordHash` is null) and not (source_data.`PasswordHash` is null))
            or
            ((not snapshotted_data.`PasswordHash` is null) and (source_data.`PasswordHash` is null))
        ) or snapshotted_data.`PasswordSalt` != source_data.`PasswordSalt`
        or
        (
            ((snapshotted_data.`PasswordSalt` is null) and not (source_data.`PasswordSalt` is null))
            or
            ((not snapshotted_data.`PasswordSalt` is null) and (source_data.`PasswordSalt` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

  
    
[0m23:46:42.963605 [debug] [Thread-1 (]: SQL status: OK in 0.350 seconds
[0m23:46:42.968706 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=1b0b0b21-b9ae-45dd-87c0-29cf5deb8360) - Closing
[0m23:46:43.067905 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:46:43.067905 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

    
DESCRIBE TABLE `customer_snapshot__dbt_tmp`

  
[0m23:46:43.223804 [debug] [Thread-1 (]: SQL status: OK in 0.160 seconds
[0m23:46:43.233391 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=33a787df-5da7-42fd-8d2e-0d62ef91791d) - Closing
[0m23:46:43.303801 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:46:43.303801 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`customer_snapshot`

  
[0m23:46:43.653832 [debug] [Thread-1 (]: SQL status: OK in 0.350 seconds
[0m23:46:43.653832 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=2f66bbcd-d8a2-4ab2-b942-0dfd10727047) - Closing
[0m23:46:43.743570 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:46:43.747612 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

    
DESCRIBE TABLE `customer_snapshot__dbt_tmp`

  
[0m23:46:43.893424 [debug] [Thread-1 (]: SQL status: OK in 0.140 seconds
[0m23:46:43.903589 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=c6689221-a2da-4d44-b190-1883a28ba536) - Closing
[0m23:46:43.993600 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:46:43.998336 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`customer_snapshot`

  
[0m23:46:44.348808 [debug] [Thread-1 (]: SQL status: OK in 0.350 seconds
[0m23:46:44.353507 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=8b56e700-743f-4a36-a199-baf4955e0e3e) - Closing
[0m23:46:44.423943 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:46:44.423943 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

    
DESCRIBE TABLE `customer_snapshot__dbt_tmp`

  
[0m23:46:44.565062 [debug] [Thread-1 (]: SQL status: OK in 0.140 seconds
[0m23:46:44.567137 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=d361b32e-eb30-4296-b87c-d98377f36459) - Closing
[0m23:46:44.648058 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:46:44.653691 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */
select * from (
        
    
    with snapshot_query as (

        with source_data as (
    select
        CustomerId,
        NameStyle,
        Title,
        FirstName,
        MiddleName,
        LastName,
        Suffix,
        CompanyName,
        SalesPerson,
        EmailAddress,
        Phone,
        PasswordHash,
        PasswordSalt
    from `hive_metastore`.`saleslt`.`customer`
)
select *
from source_data

    ),

    snapshotted_data as (

        select *, 
    
        CustomerId as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`customer_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        CustomerId as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(CustomerId as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        CustomerId as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        CustomerId as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`CustomerId` != source_data.`CustomerId`
        or
        (
            ((snapshotted_data.`CustomerId` is null) and not (source_data.`CustomerId` is null))
            or
            ((not snapshotted_data.`CustomerId` is null) and (source_data.`CustomerId` is null))
        ) or snapshotted_data.`NameStyle` != source_data.`NameStyle`
        or
        (
            ((snapshotted_data.`NameStyle` is null) and not (source_data.`NameStyle` is null))
            or
            ((not snapshotted_data.`NameStyle` is null) and (source_data.`NameStyle` is null))
        ) or snapshotted_data.`Title` != source_data.`Title`
        or
        (
            ((snapshotted_data.`Title` is null) and not (source_data.`Title` is null))
            or
            ((not snapshotted_data.`Title` is null) and (source_data.`Title` is null))
        ) or snapshotted_data.`FirstName` != source_data.`FirstName`
        or
        (
            ((snapshotted_data.`FirstName` is null) and not (source_data.`FirstName` is null))
            or
            ((not snapshotted_data.`FirstName` is null) and (source_data.`FirstName` is null))
        ) or snapshotted_data.`MiddleName` != source_data.`MiddleName`
        or
        (
            ((snapshotted_data.`MiddleName` is null) and not (source_data.`MiddleName` is null))
            or
            ((not snapshotted_data.`MiddleName` is null) and (source_data.`MiddleName` is null))
        ) or snapshotted_data.`LastName` != source_data.`LastName`
        or
        (
            ((snapshotted_data.`LastName` is null) and not (source_data.`LastName` is null))
            or
            ((not snapshotted_data.`LastName` is null) and (source_data.`LastName` is null))
        ) or snapshotted_data.`Suffix` != source_data.`Suffix`
        or
        (
            ((snapshotted_data.`Suffix` is null) and not (source_data.`Suffix` is null))
            or
            ((not snapshotted_data.`Suffix` is null) and (source_data.`Suffix` is null))
        ) or snapshotted_data.`CompanyName` != source_data.`CompanyName`
        or
        (
            ((snapshotted_data.`CompanyName` is null) and not (source_data.`CompanyName` is null))
            or
            ((not snapshotted_data.`CompanyName` is null) and (source_data.`CompanyName` is null))
        ) or snapshotted_data.`SalesPerson` != source_data.`SalesPerson`
        or
        (
            ((snapshotted_data.`SalesPerson` is null) and not (source_data.`SalesPerson` is null))
            or
            ((not snapshotted_data.`SalesPerson` is null) and (source_data.`SalesPerson` is null))
        ) or snapshotted_data.`EmailAddress` != source_data.`EmailAddress`
        or
        (
            ((snapshotted_data.`EmailAddress` is null) and not (source_data.`EmailAddress` is null))
            or
            ((not snapshotted_data.`EmailAddress` is null) and (source_data.`EmailAddress` is null))
        ) or snapshotted_data.`Phone` != source_data.`Phone`
        or
        (
            ((snapshotted_data.`Phone` is null) and not (source_data.`Phone` is null))
            or
            ((not snapshotted_data.`Phone` is null) and (source_data.`Phone` is null))
        ) or snapshotted_data.`PasswordHash` != source_data.`PasswordHash`
        or
        (
            ((snapshotted_data.`PasswordHash` is null) and not (source_data.`PasswordHash` is null))
            or
            ((not snapshotted_data.`PasswordHash` is null) and (source_data.`PasswordHash` is null))
        ) or snapshotted_data.`PasswordSalt` != source_data.`PasswordSalt`
        or
        (
            ((snapshotted_data.`PasswordSalt` is null) and not (source_data.`PasswordSalt` is null))
            or
            ((not snapshotted_data.`PasswordSalt` is null) and (source_data.`PasswordSalt` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`CustomerId` != source_data.`CustomerId`
        or
        (
            ((snapshotted_data.`CustomerId` is null) and not (source_data.`CustomerId` is null))
            or
            ((not snapshotted_data.`CustomerId` is null) and (source_data.`CustomerId` is null))
        ) or snapshotted_data.`NameStyle` != source_data.`NameStyle`
        or
        (
            ((snapshotted_data.`NameStyle` is null) and not (source_data.`NameStyle` is null))
            or
            ((not snapshotted_data.`NameStyle` is null) and (source_data.`NameStyle` is null))
        ) or snapshotted_data.`Title` != source_data.`Title`
        or
        (
            ((snapshotted_data.`Title` is null) and not (source_data.`Title` is null))
            or
            ((not snapshotted_data.`Title` is null) and (source_data.`Title` is null))
        ) or snapshotted_data.`FirstName` != source_data.`FirstName`
        or
        (
            ((snapshotted_data.`FirstName` is null) and not (source_data.`FirstName` is null))
            or
            ((not snapshotted_data.`FirstName` is null) and (source_data.`FirstName` is null))
        ) or snapshotted_data.`MiddleName` != source_data.`MiddleName`
        or
        (
            ((snapshotted_data.`MiddleName` is null) and not (source_data.`MiddleName` is null))
            or
            ((not snapshotted_data.`MiddleName` is null) and (source_data.`MiddleName` is null))
        ) or snapshotted_data.`LastName` != source_data.`LastName`
        or
        (
            ((snapshotted_data.`LastName` is null) and not (source_data.`LastName` is null))
            or
            ((not snapshotted_data.`LastName` is null) and (source_data.`LastName` is null))
        ) or snapshotted_data.`Suffix` != source_data.`Suffix`
        or
        (
            ((snapshotted_data.`Suffix` is null) and not (source_data.`Suffix` is null))
            or
            ((not snapshotted_data.`Suffix` is null) and (source_data.`Suffix` is null))
        ) or snapshotted_data.`CompanyName` != source_data.`CompanyName`
        or
        (
            ((snapshotted_data.`CompanyName` is null) and not (source_data.`CompanyName` is null))
            or
            ((not snapshotted_data.`CompanyName` is null) and (source_data.`CompanyName` is null))
        ) or snapshotted_data.`SalesPerson` != source_data.`SalesPerson`
        or
        (
            ((snapshotted_data.`SalesPerson` is null) and not (source_data.`SalesPerson` is null))
            or
            ((not snapshotted_data.`SalesPerson` is null) and (source_data.`SalesPerson` is null))
        ) or snapshotted_data.`EmailAddress` != source_data.`EmailAddress`
        or
        (
            ((snapshotted_data.`EmailAddress` is null) and not (source_data.`EmailAddress` is null))
            or
            ((not snapshotted_data.`EmailAddress` is null) and (source_data.`EmailAddress` is null))
        ) or snapshotted_data.`Phone` != source_data.`Phone`
        or
        (
            ((snapshotted_data.`Phone` is null) and not (source_data.`Phone` is null))
            or
            ((not snapshotted_data.`Phone` is null) and (source_data.`Phone` is null))
        ) or snapshotted_data.`PasswordHash` != source_data.`PasswordHash`
        or
        (
            ((snapshotted_data.`PasswordHash` is null) and not (source_data.`PasswordHash` is null))
            or
            ((not snapshotted_data.`PasswordHash` is null) and (source_data.`PasswordHash` is null))
        ) or snapshotted_data.`PasswordSalt` != source_data.`PasswordSalt`
        or
        (
            ((snapshotted_data.`PasswordSalt` is null) and not (source_data.`PasswordSalt` is null))
            or
            ((not snapshotted_data.`PasswordSalt` is null) and (source_data.`PasswordSalt` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

    ) as __dbt_sbq
    where false
    limit 0

[0m23:46:44.987675 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:46:44.991481 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=e029967c-0d99-4b33-86f2-50e805bb2126) - Closing
[0m23:46:45.068103 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:46:45.068103 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:46:45.190198 [debug] [Thread-1 (]: SQL status: OK in 0.120 seconds
[0m23:46:45.193740 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=23f20759-b477-4e85-b63a-4900032ef677) - Closing
[0m23:46:45.269847 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:46:45.279792 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:46:45.281808 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */

      merge into `hive_metastore`.`snapshots`.`customer_snapshot` as DBT_INTERNAL_DEST
    
      using `customer_snapshot__dbt_tmp` as DBT_INTERNAL_SOURCE
    
    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id
    when matched
     
       and DBT_INTERNAL_DEST.dbt_valid_to is null
     
     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')
        then update
        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to

    when not matched
     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'
        then insert *
    ;

  
[0m23:46:50.063569 [debug] [Thread-1 (]: SQL status: OK in 4.780 seconds
[0m23:46:50.067667 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=3fa8efea-e2a6-47e8-88b1-a22eb9c381f5) - Closing
[0m23:46:50.163479 [debug] [Thread-1 (]: Applying DROP to: `customer_snapshot__dbt_tmp`
[0m23:46:50.168153 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customer_snapshot"
[0m23:46:50.169166 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customer_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customer_snapshot"} */
DROP VIEW IF EXISTS `customer_snapshot__dbt_tmp`
[0m23:46:50.300135 [debug] [Thread-1 (]: SQL status: OK in 0.130 seconds
[0m23:46:50.307664 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=ee904353-eb00-4f6f-ab00-3f0fc76e9c85) - Closing
[0m23:46:50.400204 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '293dbbac-b276-49c5-8595-c452e7009c54', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001F4B8E26FB0>]}
[0m23:46:50.403747 [info ] [Thread-1 (]: 2 of 7 OK snapshotted snapshots.customer_snapshot .............................. [[32mOK[0m in 9.66s]
[0m23:46:50.406161 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.customer_snapshot
[0m23:46:50.407358 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m23:46:50.407358 [info ] [Thread-1 (]: 3 of 7 START snapshot snapshots.customeraddress_snapshot ....................... [RUN]
[0m23:46:50.407358 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.customer_snapshot, now snapshot.medalion_dbt_spark.customeraddress_snapshot)
[0m23:46:50.407358 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=660f7728-b53b-4865-9597-8ecff263d840, name=snapshot.medalion_dbt_spark.customeraddress_snapshot, idle-time=0.009167671203613281s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.customer_snapshot
[0m23:46:50.407358 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m23:46:50.418216 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m23:46:50.425205 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:46:50.426290 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

      describe extended `hive_metastore`.`snapshots`.`customeraddress_snapshot`
  
[0m23:46:51.025608 [debug] [Thread-1 (]: SQL status: OK in 0.600 seconds
[0m23:46:51.025608 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=ed8e31de-8105-4130-93c8-2c5b0040d97b) - Closing
[0m23:46:51.096386 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:46:51.096386 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */
select * from (
        



with source_data as (
    select
        CustomerId,
        AddressId,
        AddressType
    from `hive_metastore`.`saleslt`.`customeraddress`
)
select *
from source_data

    ) as __dbt_sbq
    where false
    limit 0

    
[0m23:46:51.335761 [debug] [Thread-1 (]: SQL status: OK in 0.240 seconds
[0m23:46:51.343529 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=39a59d0d-e76d-4119-93c3-49920376b15f) - Closing
[0m23:46:51.433433 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:46:51.433433 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`customeraddress_snapshot`

  
[0m23:46:51.768073 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:46:51.777549 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=e88aeff7-aaba-44a2-a500-f7af3132d889) - Closing
[0m23:46:51.893403 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:46:51.895428 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`customeraddress_snapshot`

  
[0m23:46:52.223738 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:46:52.223738 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=a9c51046-ed27-47cf-9d63-070939d83760) - Closing
[0m23:46:52.315253 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:46:52.316851 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

        
  
    create or replace temporary view `customeraddress_snapshot__dbt_tmp` as
      
    
    with snapshot_query as (

        with source_data as (
    select
        CustomerId,
        AddressId,
        AddressType
    from `hive_metastore`.`saleslt`.`customeraddress`
)
select *
from source_data

    ),

    snapshotted_data as (

        select *, 
    
        CustomerId||'-'||AddressId as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`customeraddress_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        CustomerId||'-'||AddressId as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(CustomerId||'-'||AddressId as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        CustomerId||'-'||AddressId as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        CustomerId||'-'||AddressId as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`CustomerId` != source_data.`CustomerId`
        or
        (
            ((snapshotted_data.`CustomerId` is null) and not (source_data.`CustomerId` is null))
            or
            ((not snapshotted_data.`CustomerId` is null) and (source_data.`CustomerId` is null))
        ) or snapshotted_data.`AddressId` != source_data.`AddressId`
        or
        (
            ((snapshotted_data.`AddressId` is null) and not (source_data.`AddressId` is null))
            or
            ((not snapshotted_data.`AddressId` is null) and (source_data.`AddressId` is null))
        ) or snapshotted_data.`AddressType` != source_data.`AddressType`
        or
        (
            ((snapshotted_data.`AddressType` is null) and not (source_data.`AddressType` is null))
            or
            ((not snapshotted_data.`AddressType` is null) and (source_data.`AddressType` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`CustomerId` != source_data.`CustomerId`
        or
        (
            ((snapshotted_data.`CustomerId` is null) and not (source_data.`CustomerId` is null))
            or
            ((not snapshotted_data.`CustomerId` is null) and (source_data.`CustomerId` is null))
        ) or snapshotted_data.`AddressId` != source_data.`AddressId`
        or
        (
            ((snapshotted_data.`AddressId` is null) and not (source_data.`AddressId` is null))
            or
            ((not snapshotted_data.`AddressId` is null) and (source_data.`AddressId` is null))
        ) or snapshotted_data.`AddressType` != source_data.`AddressType`
        or
        (
            ((snapshotted_data.`AddressType` is null) and not (source_data.`AddressType` is null))
            or
            ((not snapshotted_data.`AddressType` is null) and (source_data.`AddressType` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

  
    
[0m23:46:52.587673 [debug] [Thread-1 (]: SQL status: OK in 0.270 seconds
[0m23:46:52.593764 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=aba585cc-01bb-488a-b451-852fe9019571) - Closing
[0m23:46:52.691310 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:46:52.693838 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

    
DESCRIBE TABLE `customeraddress_snapshot__dbt_tmp`

  
[0m23:46:52.837544 [debug] [Thread-1 (]: SQL status: OK in 0.140 seconds
[0m23:46:52.837544 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=c04f80ea-86b5-43ec-8b33-b6c4f09523a9) - Closing
[0m23:46:52.918377 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:46:52.924716 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`customeraddress_snapshot`

  
[0m23:46:53.239556 [debug] [Thread-1 (]: SQL status: OK in 0.310 seconds
[0m23:46:53.243642 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=19d91b13-6e82-416d-8033-ee89cc79303b) - Closing
[0m23:46:53.313660 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:46:53.313660 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

    
DESCRIBE TABLE `customeraddress_snapshot__dbt_tmp`

  
[0m23:46:53.435792 [debug] [Thread-1 (]: SQL status: OK in 0.120 seconds
[0m23:46:53.435792 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=fa391ba5-557f-4e74-9e26-cd78074eb4f9) - Closing
[0m23:46:53.518593 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:46:53.522553 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`customeraddress_snapshot`

  
[0m23:46:53.834009 [debug] [Thread-1 (]: SQL status: OK in 0.310 seconds
[0m23:46:53.843804 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=6ff726f8-73a5-4d0a-abb3-8205dd61e3e6) - Closing
[0m23:46:53.927026 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:46:53.927564 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

    
DESCRIBE TABLE `customeraddress_snapshot__dbt_tmp`

  
[0m23:46:54.053662 [debug] [Thread-1 (]: SQL status: OK in 0.130 seconds
[0m23:46:54.053662 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=3d935ea4-734e-4839-9078-78da269ad020) - Closing
[0m23:46:54.133589 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:46:54.133589 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */
select * from (
        
    
    with snapshot_query as (

        with source_data as (
    select
        CustomerId,
        AddressId,
        AddressType
    from `hive_metastore`.`saleslt`.`customeraddress`
)
select *
from source_data

    ),

    snapshotted_data as (

        select *, 
    
        CustomerId||'-'||AddressId as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`customeraddress_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        CustomerId||'-'||AddressId as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(CustomerId||'-'||AddressId as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        CustomerId||'-'||AddressId as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        CustomerId||'-'||AddressId as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`CustomerId` != source_data.`CustomerId`
        or
        (
            ((snapshotted_data.`CustomerId` is null) and not (source_data.`CustomerId` is null))
            or
            ((not snapshotted_data.`CustomerId` is null) and (source_data.`CustomerId` is null))
        ) or snapshotted_data.`AddressId` != source_data.`AddressId`
        or
        (
            ((snapshotted_data.`AddressId` is null) and not (source_data.`AddressId` is null))
            or
            ((not snapshotted_data.`AddressId` is null) and (source_data.`AddressId` is null))
        ) or snapshotted_data.`AddressType` != source_data.`AddressType`
        or
        (
            ((snapshotted_data.`AddressType` is null) and not (source_data.`AddressType` is null))
            or
            ((not snapshotted_data.`AddressType` is null) and (source_data.`AddressType` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`CustomerId` != source_data.`CustomerId`
        or
        (
            ((snapshotted_data.`CustomerId` is null) and not (source_data.`CustomerId` is null))
            or
            ((not snapshotted_data.`CustomerId` is null) and (source_data.`CustomerId` is null))
        ) or snapshotted_data.`AddressId` != source_data.`AddressId`
        or
        (
            ((snapshotted_data.`AddressId` is null) and not (source_data.`AddressId` is null))
            or
            ((not snapshotted_data.`AddressId` is null) and (source_data.`AddressId` is null))
        ) or snapshotted_data.`AddressType` != source_data.`AddressType`
        or
        (
            ((snapshotted_data.`AddressType` is null) and not (source_data.`AddressType` is null))
            or
            ((not snapshotted_data.`AddressType` is null) and (source_data.`AddressType` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

    ) as __dbt_sbq
    where false
    limit 0

[0m23:46:54.414050 [debug] [Thread-1 (]: SQL status: OK in 0.280 seconds
[0m23:46:54.414050 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=ab713e50-7153-43a4-b2de-ab04650fed24) - Closing
[0m23:46:54.481784 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:46:54.483786 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:46:54.613710 [debug] [Thread-1 (]: SQL status: OK in 0.130 seconds
[0m23:46:54.615807 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=e7f0b2e3-7825-4c4d-9fe3-9561d497ee01) - Closing
[0m23:46:54.690799 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:46:54.697641 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:46:54.701213 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */

      merge into `hive_metastore`.`snapshots`.`customeraddress_snapshot` as DBT_INTERNAL_DEST
    
      using `customeraddress_snapshot__dbt_tmp` as DBT_INTERNAL_SOURCE
    
    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id
    when matched
     
       and DBT_INTERNAL_DEST.dbt_valid_to is null
     
     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')
        then update
        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to

    when not matched
     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'
        then insert *
    ;

  
[0m23:46:58.763773 [debug] [Thread-1 (]: SQL status: OK in 4.060 seconds
[0m23:46:58.763773 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=c733e06d-2120-4965-a902-3c1624975809) - Closing
[0m23:46:58.927295 [debug] [Thread-1 (]: Applying DROP to: `customeraddress_snapshot__dbt_tmp`
[0m23:46:58.930647 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.customeraddress_snapshot"
[0m23:46:58.930647 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.customeraddress_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.customeraddress_snapshot"} */
DROP VIEW IF EXISTS `customeraddress_snapshot__dbt_tmp`
[0m23:46:59.089630 [debug] [Thread-1 (]: SQL status: OK in 0.160 seconds
[0m23:46:59.092638 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=18075835-3d74-4fc0-8b44-49fb04f339bd) - Closing
[0m23:46:59.164188 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '293dbbac-b276-49c5-8595-c452e7009c54', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001F4B8E26FB0>]}
[0m23:46:59.173373 [info ] [Thread-1 (]: 3 of 7 OK snapshotted snapshots.customeraddress_snapshot ....................... [[32mOK[0m in 8.76s]
[0m23:46:59.173373 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m23:46:59.173373 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.product_snapshot
[0m23:46:59.176841 [info ] [Thread-1 (]: 4 of 7 START snapshot snapshots.product_snapshot ............................... [RUN]
[0m23:46:59.177190 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.customeraddress_snapshot, now snapshot.medalion_dbt_spark.product_snapshot)
[0m23:46:59.178028 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=660f7728-b53b-4865-9597-8ecff263d840, name=snapshot.medalion_dbt_spark.product_snapshot, idle-time=0.013840436935424805s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m23:46:59.178028 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.product_snapshot
[0m23:46:59.184693 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.product_snapshot
[0m23:46:59.191581 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:46:59.194105 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

      describe extended `hive_metastore`.`snapshots`.`product_snapshot`
  
[0m23:46:59.853701 [debug] [Thread-1 (]: SQL status: OK in 0.660 seconds
[0m23:46:59.853701 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=3d22bd1b-da59-442f-92e5-b890b21e3059) - Closing
[0m23:46:59.924774 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:46:59.924774 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */
select * from (
        



with product_snapshot as (
    SELECT
        ProductID,
        Name,
        ProductNumber,
        Color,
        StandardCost,
        ListPrice,
        Size,
        Weight,
        ProductCategoryID,
        ProductModelID,
        SellStartDate,
        SellEndDate,
        DiscontinuedDate,
        ThumbNailPhoto,
        ThumbnailPhotoFileName
    FROM `hive_metastore`.`saleslt`.`product`
)

select * from product_snapshot

    ) as __dbt_sbq
    where false
    limit 0

    
[0m23:47:00.223333 [debug] [Thread-1 (]: SQL status: OK in 0.300 seconds
[0m23:47:00.228379 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=a3e7b84c-bcea-471d-bff2-62fe50b6f1b8) - Closing
[0m23:47:00.329293 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:47:00.333431 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`product_snapshot`

  
[0m23:47:00.685578 [debug] [Thread-1 (]: SQL status: OK in 0.350 seconds
[0m23:47:00.693802 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=15c43c3f-bfd0-4860-ab6a-04b183ceb744) - Closing
[0m23:47:00.796933 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:47:00.798978 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`product_snapshot`

  
[0m23:47:01.118992 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:47:01.118992 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=a0e4ccf7-5757-43bf-9f3f-bfb72117bb18) - Closing
[0m23:47:01.208777 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:47:01.208777 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

        
  
    create or replace temporary view `product_snapshot__dbt_tmp` as
      
    
    with snapshot_query as (

        with product_snapshot as (
    SELECT
        ProductID,
        Name,
        ProductNumber,
        Color,
        StandardCost,
        ListPrice,
        Size,
        Weight,
        ProductCategoryID,
        ProductModelID,
        SellStartDate,
        SellEndDate,
        DiscontinuedDate,
        ThumbNailPhoto,
        ThumbnailPhotoFileName
    FROM `hive_metastore`.`saleslt`.`product`
)

select * from product_snapshot

    ),

    snapshotted_data as (

        select *, 
    
        ProductID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`product_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        ProductID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(ProductID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        ProductID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        ProductID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`ProductID` != source_data.`ProductID`
        or
        (
            ((snapshotted_data.`ProductID` is null) and not (source_data.`ProductID` is null))
            or
            ((not snapshotted_data.`ProductID` is null) and (source_data.`ProductID` is null))
        ) or snapshotted_data.`Name` != source_data.`Name`
        or
        (
            ((snapshotted_data.`Name` is null) and not (source_data.`Name` is null))
            or
            ((not snapshotted_data.`Name` is null) and (source_data.`Name` is null))
        ) or snapshotted_data.`ProductNumber` != source_data.`ProductNumber`
        or
        (
            ((snapshotted_data.`ProductNumber` is null) and not (source_data.`ProductNumber` is null))
            or
            ((not snapshotted_data.`ProductNumber` is null) and (source_data.`ProductNumber` is null))
        ) or snapshotted_data.`Color` != source_data.`Color`
        or
        (
            ((snapshotted_data.`Color` is null) and not (source_data.`Color` is null))
            or
            ((not snapshotted_data.`Color` is null) and (source_data.`Color` is null))
        ) or snapshotted_data.`StandardCost` != source_data.`StandardCost`
        or
        (
            ((snapshotted_data.`StandardCost` is null) and not (source_data.`StandardCost` is null))
            or
            ((not snapshotted_data.`StandardCost` is null) and (source_data.`StandardCost` is null))
        ) or snapshotted_data.`ListPrice` != source_data.`ListPrice`
        or
        (
            ((snapshotted_data.`ListPrice` is null) and not (source_data.`ListPrice` is null))
            or
            ((not snapshotted_data.`ListPrice` is null) and (source_data.`ListPrice` is null))
        ) or snapshotted_data.`Size` != source_data.`Size`
        or
        (
            ((snapshotted_data.`Size` is null) and not (source_data.`Size` is null))
            or
            ((not snapshotted_data.`Size` is null) and (source_data.`Size` is null))
        ) or snapshotted_data.`Weight` != source_data.`Weight`
        or
        (
            ((snapshotted_data.`Weight` is null) and not (source_data.`Weight` is null))
            or
            ((not snapshotted_data.`Weight` is null) and (source_data.`Weight` is null))
        ) or snapshotted_data.`ProductCategoryID` != source_data.`ProductCategoryID`
        or
        (
            ((snapshotted_data.`ProductCategoryID` is null) and not (source_data.`ProductCategoryID` is null))
            or
            ((not snapshotted_data.`ProductCategoryID` is null) and (source_data.`ProductCategoryID` is null))
        ) or snapshotted_data.`ProductModelID` != source_data.`ProductModelID`
        or
        (
            ((snapshotted_data.`ProductModelID` is null) and not (source_data.`ProductModelID` is null))
            or
            ((not snapshotted_data.`ProductModelID` is null) and (source_data.`ProductModelID` is null))
        ) or snapshotted_data.`SellStartDate` != source_data.`SellStartDate`
        or
        (
            ((snapshotted_data.`SellStartDate` is null) and not (source_data.`SellStartDate` is null))
            or
            ((not snapshotted_data.`SellStartDate` is null) and (source_data.`SellStartDate` is null))
        ) or snapshotted_data.`SellEndDate` != source_data.`SellEndDate`
        or
        (
            ((snapshotted_data.`SellEndDate` is null) and not (source_data.`SellEndDate` is null))
            or
            ((not snapshotted_data.`SellEndDate` is null) and (source_data.`SellEndDate` is null))
        ) or snapshotted_data.`DiscontinuedDate` != source_data.`DiscontinuedDate`
        or
        (
            ((snapshotted_data.`DiscontinuedDate` is null) and not (source_data.`DiscontinuedDate` is null))
            or
            ((not snapshotted_data.`DiscontinuedDate` is null) and (source_data.`DiscontinuedDate` is null))
        ) or snapshotted_data.`ThumbNailPhoto` != source_data.`ThumbNailPhoto`
        or
        (
            ((snapshotted_data.`ThumbNailPhoto` is null) and not (source_data.`ThumbNailPhoto` is null))
            or
            ((not snapshotted_data.`ThumbNailPhoto` is null) and (source_data.`ThumbNailPhoto` is null))
        ) or snapshotted_data.`ThumbnailPhotoFileName` != source_data.`ThumbnailPhotoFileName`
        or
        (
            ((snapshotted_data.`ThumbnailPhotoFileName` is null) and not (source_data.`ThumbnailPhotoFileName` is null))
            or
            ((not snapshotted_data.`ThumbnailPhotoFileName` is null) and (source_data.`ThumbnailPhotoFileName` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`ProductID` != source_data.`ProductID`
        or
        (
            ((snapshotted_data.`ProductID` is null) and not (source_data.`ProductID` is null))
            or
            ((not snapshotted_data.`ProductID` is null) and (source_data.`ProductID` is null))
        ) or snapshotted_data.`Name` != source_data.`Name`
        or
        (
            ((snapshotted_data.`Name` is null) and not (source_data.`Name` is null))
            or
            ((not snapshotted_data.`Name` is null) and (source_data.`Name` is null))
        ) or snapshotted_data.`ProductNumber` != source_data.`ProductNumber`
        or
        (
            ((snapshotted_data.`ProductNumber` is null) and not (source_data.`ProductNumber` is null))
            or
            ((not snapshotted_data.`ProductNumber` is null) and (source_data.`ProductNumber` is null))
        ) or snapshotted_data.`Color` != source_data.`Color`
        or
        (
            ((snapshotted_data.`Color` is null) and not (source_data.`Color` is null))
            or
            ((not snapshotted_data.`Color` is null) and (source_data.`Color` is null))
        ) or snapshotted_data.`StandardCost` != source_data.`StandardCost`
        or
        (
            ((snapshotted_data.`StandardCost` is null) and not (source_data.`StandardCost` is null))
            or
            ((not snapshotted_data.`StandardCost` is null) and (source_data.`StandardCost` is null))
        ) or snapshotted_data.`ListPrice` != source_data.`ListPrice`
        or
        (
            ((snapshotted_data.`ListPrice` is null) and not (source_data.`ListPrice` is null))
            or
            ((not snapshotted_data.`ListPrice` is null) and (source_data.`ListPrice` is null))
        ) or snapshotted_data.`Size` != source_data.`Size`
        or
        (
            ((snapshotted_data.`Size` is null) and not (source_data.`Size` is null))
            or
            ((not snapshotted_data.`Size` is null) and (source_data.`Size` is null))
        ) or snapshotted_data.`Weight` != source_data.`Weight`
        or
        (
            ((snapshotted_data.`Weight` is null) and not (source_data.`Weight` is null))
            or
            ((not snapshotted_data.`Weight` is null) and (source_data.`Weight` is null))
        ) or snapshotted_data.`ProductCategoryID` != source_data.`ProductCategoryID`
        or
        (
            ((snapshotted_data.`ProductCategoryID` is null) and not (source_data.`ProductCategoryID` is null))
            or
            ((not snapshotted_data.`ProductCategoryID` is null) and (source_data.`ProductCategoryID` is null))
        ) or snapshotted_data.`ProductModelID` != source_data.`ProductModelID`
        or
        (
            ((snapshotted_data.`ProductModelID` is null) and not (source_data.`ProductModelID` is null))
            or
            ((not snapshotted_data.`ProductModelID` is null) and (source_data.`ProductModelID` is null))
        ) or snapshotted_data.`SellStartDate` != source_data.`SellStartDate`
        or
        (
            ((snapshotted_data.`SellStartDate` is null) and not (source_data.`SellStartDate` is null))
            or
            ((not snapshotted_data.`SellStartDate` is null) and (source_data.`SellStartDate` is null))
        ) or snapshotted_data.`SellEndDate` != source_data.`SellEndDate`
        or
        (
            ((snapshotted_data.`SellEndDate` is null) and not (source_data.`SellEndDate` is null))
            or
            ((not snapshotted_data.`SellEndDate` is null) and (source_data.`SellEndDate` is null))
        ) or snapshotted_data.`DiscontinuedDate` != source_data.`DiscontinuedDate`
        or
        (
            ((snapshotted_data.`DiscontinuedDate` is null) and not (source_data.`DiscontinuedDate` is null))
            or
            ((not snapshotted_data.`DiscontinuedDate` is null) and (source_data.`DiscontinuedDate` is null))
        ) or snapshotted_data.`ThumbNailPhoto` != source_data.`ThumbNailPhoto`
        or
        (
            ((snapshotted_data.`ThumbNailPhoto` is null) and not (source_data.`ThumbNailPhoto` is null))
            or
            ((not snapshotted_data.`ThumbNailPhoto` is null) and (source_data.`ThumbNailPhoto` is null))
        ) or snapshotted_data.`ThumbnailPhotoFileName` != source_data.`ThumbnailPhotoFileName`
        or
        (
            ((snapshotted_data.`ThumbnailPhotoFileName` is null) and not (source_data.`ThumbnailPhotoFileName` is null))
            or
            ((not snapshotted_data.`ThumbnailPhotoFileName` is null) and (source_data.`ThumbnailPhotoFileName` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

  
    
[0m23:47:01.593504 [debug] [Thread-1 (]: SQL status: OK in 0.380 seconds
[0m23:47:01.597758 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=ee5c6fe7-8004-4bd4-877d-821c67e47b73) - Closing
[0m23:47:01.693452 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:47:01.695461 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

    
DESCRIBE TABLE `product_snapshot__dbt_tmp`

  
[0m23:47:01.841259 [debug] [Thread-1 (]: SQL status: OK in 0.150 seconds
[0m23:47:01.843766 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=4ca59e41-f4ce-4e0e-8995-a85cbb99c6f7) - Closing
[0m23:47:01.941914 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:47:01.943417 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`product_snapshot`

  
[0m23:47:02.277771 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:47:02.283404 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=7e5319e9-a1be-42d7-9519-9416a48975a6) - Closing
[0m23:47:02.367882 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:47:02.367882 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

    
DESCRIBE TABLE `product_snapshot__dbt_tmp`

  
[0m23:47:02.556803 [debug] [Thread-1 (]: SQL status: OK in 0.190 seconds
[0m23:47:02.559820 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=2482ccbd-af35-440b-9a13-5e9cf75746f1) - Closing
[0m23:47:02.638283 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:47:02.640287 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`product_snapshot`

  
[0m23:47:02.967865 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:47:02.975397 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=d7bd349f-00d5-4fcf-9efb-366320eb2bb3) - Closing
[0m23:47:03.062621 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:47:03.065199 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

    
DESCRIBE TABLE `product_snapshot__dbt_tmp`

  
[0m23:47:03.297810 [debug] [Thread-1 (]: SQL status: OK in 0.230 seconds
[0m23:47:03.305834 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=ff4f8255-2d78-47e4-8481-47a9412a89b4) - Closing
[0m23:47:03.383569 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:47:03.389687 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */
select * from (
        
    
    with snapshot_query as (

        with product_snapshot as (
    SELECT
        ProductID,
        Name,
        ProductNumber,
        Color,
        StandardCost,
        ListPrice,
        Size,
        Weight,
        ProductCategoryID,
        ProductModelID,
        SellStartDate,
        SellEndDate,
        DiscontinuedDate,
        ThumbNailPhoto,
        ThumbnailPhotoFileName
    FROM `hive_metastore`.`saleslt`.`product`
)

select * from product_snapshot

    ),

    snapshotted_data as (

        select *, 
    
        ProductID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`product_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        ProductID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(ProductID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        ProductID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        ProductID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`ProductID` != source_data.`ProductID`
        or
        (
            ((snapshotted_data.`ProductID` is null) and not (source_data.`ProductID` is null))
            or
            ((not snapshotted_data.`ProductID` is null) and (source_data.`ProductID` is null))
        ) or snapshotted_data.`Name` != source_data.`Name`
        or
        (
            ((snapshotted_data.`Name` is null) and not (source_data.`Name` is null))
            or
            ((not snapshotted_data.`Name` is null) and (source_data.`Name` is null))
        ) or snapshotted_data.`ProductNumber` != source_data.`ProductNumber`
        or
        (
            ((snapshotted_data.`ProductNumber` is null) and not (source_data.`ProductNumber` is null))
            or
            ((not snapshotted_data.`ProductNumber` is null) and (source_data.`ProductNumber` is null))
        ) or snapshotted_data.`Color` != source_data.`Color`
        or
        (
            ((snapshotted_data.`Color` is null) and not (source_data.`Color` is null))
            or
            ((not snapshotted_data.`Color` is null) and (source_data.`Color` is null))
        ) or snapshotted_data.`StandardCost` != source_data.`StandardCost`
        or
        (
            ((snapshotted_data.`StandardCost` is null) and not (source_data.`StandardCost` is null))
            or
            ((not snapshotted_data.`StandardCost` is null) and (source_data.`StandardCost` is null))
        ) or snapshotted_data.`ListPrice` != source_data.`ListPrice`
        or
        (
            ((snapshotted_data.`ListPrice` is null) and not (source_data.`ListPrice` is null))
            or
            ((not snapshotted_data.`ListPrice` is null) and (source_data.`ListPrice` is null))
        ) or snapshotted_data.`Size` != source_data.`Size`
        or
        (
            ((snapshotted_data.`Size` is null) and not (source_data.`Size` is null))
            or
            ((not snapshotted_data.`Size` is null) and (source_data.`Size` is null))
        ) or snapshotted_data.`Weight` != source_data.`Weight`
        or
        (
            ((snapshotted_data.`Weight` is null) and not (source_data.`Weight` is null))
            or
            ((not snapshotted_data.`Weight` is null) and (source_data.`Weight` is null))
        ) or snapshotted_data.`ProductCategoryID` != source_data.`ProductCategoryID`
        or
        (
            ((snapshotted_data.`ProductCategoryID` is null) and not (source_data.`ProductCategoryID` is null))
            or
            ((not snapshotted_data.`ProductCategoryID` is null) and (source_data.`ProductCategoryID` is null))
        ) or snapshotted_data.`ProductModelID` != source_data.`ProductModelID`
        or
        (
            ((snapshotted_data.`ProductModelID` is null) and not (source_data.`ProductModelID` is null))
            or
            ((not snapshotted_data.`ProductModelID` is null) and (source_data.`ProductModelID` is null))
        ) or snapshotted_data.`SellStartDate` != source_data.`SellStartDate`
        or
        (
            ((snapshotted_data.`SellStartDate` is null) and not (source_data.`SellStartDate` is null))
            or
            ((not snapshotted_data.`SellStartDate` is null) and (source_data.`SellStartDate` is null))
        ) or snapshotted_data.`SellEndDate` != source_data.`SellEndDate`
        or
        (
            ((snapshotted_data.`SellEndDate` is null) and not (source_data.`SellEndDate` is null))
            or
            ((not snapshotted_data.`SellEndDate` is null) and (source_data.`SellEndDate` is null))
        ) or snapshotted_data.`DiscontinuedDate` != source_data.`DiscontinuedDate`
        or
        (
            ((snapshotted_data.`DiscontinuedDate` is null) and not (source_data.`DiscontinuedDate` is null))
            or
            ((not snapshotted_data.`DiscontinuedDate` is null) and (source_data.`DiscontinuedDate` is null))
        ) or snapshotted_data.`ThumbNailPhoto` != source_data.`ThumbNailPhoto`
        or
        (
            ((snapshotted_data.`ThumbNailPhoto` is null) and not (source_data.`ThumbNailPhoto` is null))
            or
            ((not snapshotted_data.`ThumbNailPhoto` is null) and (source_data.`ThumbNailPhoto` is null))
        ) or snapshotted_data.`ThumbnailPhotoFileName` != source_data.`ThumbnailPhotoFileName`
        or
        (
            ((snapshotted_data.`ThumbnailPhotoFileName` is null) and not (source_data.`ThumbnailPhotoFileName` is null))
            or
            ((not snapshotted_data.`ThumbnailPhotoFileName` is null) and (source_data.`ThumbnailPhotoFileName` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`ProductID` != source_data.`ProductID`
        or
        (
            ((snapshotted_data.`ProductID` is null) and not (source_data.`ProductID` is null))
            or
            ((not snapshotted_data.`ProductID` is null) and (source_data.`ProductID` is null))
        ) or snapshotted_data.`Name` != source_data.`Name`
        or
        (
            ((snapshotted_data.`Name` is null) and not (source_data.`Name` is null))
            or
            ((not snapshotted_data.`Name` is null) and (source_data.`Name` is null))
        ) or snapshotted_data.`ProductNumber` != source_data.`ProductNumber`
        or
        (
            ((snapshotted_data.`ProductNumber` is null) and not (source_data.`ProductNumber` is null))
            or
            ((not snapshotted_data.`ProductNumber` is null) and (source_data.`ProductNumber` is null))
        ) or snapshotted_data.`Color` != source_data.`Color`
        or
        (
            ((snapshotted_data.`Color` is null) and not (source_data.`Color` is null))
            or
            ((not snapshotted_data.`Color` is null) and (source_data.`Color` is null))
        ) or snapshotted_data.`StandardCost` != source_data.`StandardCost`
        or
        (
            ((snapshotted_data.`StandardCost` is null) and not (source_data.`StandardCost` is null))
            or
            ((not snapshotted_data.`StandardCost` is null) and (source_data.`StandardCost` is null))
        ) or snapshotted_data.`ListPrice` != source_data.`ListPrice`
        or
        (
            ((snapshotted_data.`ListPrice` is null) and not (source_data.`ListPrice` is null))
            or
            ((not snapshotted_data.`ListPrice` is null) and (source_data.`ListPrice` is null))
        ) or snapshotted_data.`Size` != source_data.`Size`
        or
        (
            ((snapshotted_data.`Size` is null) and not (source_data.`Size` is null))
            or
            ((not snapshotted_data.`Size` is null) and (source_data.`Size` is null))
        ) or snapshotted_data.`Weight` != source_data.`Weight`
        or
        (
            ((snapshotted_data.`Weight` is null) and not (source_data.`Weight` is null))
            or
            ((not snapshotted_data.`Weight` is null) and (source_data.`Weight` is null))
        ) or snapshotted_data.`ProductCategoryID` != source_data.`ProductCategoryID`
        or
        (
            ((snapshotted_data.`ProductCategoryID` is null) and not (source_data.`ProductCategoryID` is null))
            or
            ((not snapshotted_data.`ProductCategoryID` is null) and (source_data.`ProductCategoryID` is null))
        ) or snapshotted_data.`ProductModelID` != source_data.`ProductModelID`
        or
        (
            ((snapshotted_data.`ProductModelID` is null) and not (source_data.`ProductModelID` is null))
            or
            ((not snapshotted_data.`ProductModelID` is null) and (source_data.`ProductModelID` is null))
        ) or snapshotted_data.`SellStartDate` != source_data.`SellStartDate`
        or
        (
            ((snapshotted_data.`SellStartDate` is null) and not (source_data.`SellStartDate` is null))
            or
            ((not snapshotted_data.`SellStartDate` is null) and (source_data.`SellStartDate` is null))
        ) or snapshotted_data.`SellEndDate` != source_data.`SellEndDate`
        or
        (
            ((snapshotted_data.`SellEndDate` is null) and not (source_data.`SellEndDate` is null))
            or
            ((not snapshotted_data.`SellEndDate` is null) and (source_data.`SellEndDate` is null))
        ) or snapshotted_data.`DiscontinuedDate` != source_data.`DiscontinuedDate`
        or
        (
            ((snapshotted_data.`DiscontinuedDate` is null) and not (source_data.`DiscontinuedDate` is null))
            or
            ((not snapshotted_data.`DiscontinuedDate` is null) and (source_data.`DiscontinuedDate` is null))
        ) or snapshotted_data.`ThumbNailPhoto` != source_data.`ThumbNailPhoto`
        or
        (
            ((snapshotted_data.`ThumbNailPhoto` is null) and not (source_data.`ThumbNailPhoto` is null))
            or
            ((not snapshotted_data.`ThumbNailPhoto` is null) and (source_data.`ThumbNailPhoto` is null))
        ) or snapshotted_data.`ThumbnailPhotoFileName` != source_data.`ThumbnailPhotoFileName`
        or
        (
            ((snapshotted_data.`ThumbnailPhotoFileName` is null) and not (source_data.`ThumbnailPhotoFileName` is null))
            or
            ((not snapshotted_data.`ThumbnailPhotoFileName` is null) and (source_data.`ThumbnailPhotoFileName` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

    ) as __dbt_sbq
    where false
    limit 0

[0m23:47:03.717672 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:47:03.723822 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=b8bf0ed4-035d-4e01-b681-52ede77971a6) - Closing
[0m23:47:03.793797 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:47:03.798694 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:47:03.947029 [debug] [Thread-1 (]: SQL status: OK in 0.150 seconds
[0m23:47:03.947029 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=a3cab971-d32b-498f-b7cc-854dbec02002) - Closing
[0m23:47:04.023563 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:47:04.025754 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:47:04.027764 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */

      merge into `hive_metastore`.`snapshots`.`product_snapshot` as DBT_INTERNAL_DEST
    
      using `product_snapshot__dbt_tmp` as DBT_INTERNAL_SOURCE
    
    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id
    when matched
     
       and DBT_INTERNAL_DEST.dbt_valid_to is null
     
     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')
        then update
        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to

    when not matched
     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'
        then insert *
    ;

  
[0m23:47:08.325595 [debug] [Thread-1 (]: SQL status: OK in 4.300 seconds
[0m23:47:08.329652 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=03a87b96-77d0-4c1e-a92d-6aef3a641a31) - Closing
[0m23:47:08.407532 [debug] [Thread-1 (]: Applying DROP to: `product_snapshot__dbt_tmp`
[0m23:47:08.409537 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.product_snapshot"
[0m23:47:08.409537 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.product_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.product_snapshot"} */
DROP VIEW IF EXISTS `product_snapshot__dbt_tmp`
[0m23:47:08.528080 [debug] [Thread-1 (]: SQL status: OK in 0.120 seconds
[0m23:47:08.535885 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=de2a87e4-44f6-4aef-9e2a-8552f9ae13ac) - Closing
[0m23:47:08.613653 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '293dbbac-b276-49c5-8595-c452e7009c54', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001F4B8E26FB0>]}
[0m23:47:08.613653 [info ] [Thread-1 (]: 4 of 7 OK snapshotted snapshots.product_snapshot ............................... [[32mOK[0m in 9.44s]
[0m23:47:08.623630 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.product_snapshot
[0m23:47:08.623630 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.productmodel_snapshot
[0m23:47:08.623630 [info ] [Thread-1 (]: 5 of 7 START snapshot snapshots.productmodel_snapshot .......................... [RUN]
[0m23:47:08.623630 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.product_snapshot, now snapshot.medalion_dbt_spark.productmodel_snapshot)
[0m23:47:08.628659 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=660f7728-b53b-4865-9597-8ecff263d840, name=snapshot.medalion_dbt_spark.productmodel_snapshot, idle-time=0.015005826950073242s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.product_snapshot
[0m23:47:08.629671 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.productmodel_snapshot
[0m23:47:08.633416 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.productmodel_snapshot
[0m23:47:08.756989 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:47:08.756989 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

      describe extended `hive_metastore`.`snapshots`.`productmodel_snapshot`
  
[0m23:47:09.297857 [debug] [Thread-1 (]: SQL status: OK in 0.540 seconds
[0m23:47:09.303852 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=ae70864e-2fd1-4c03-ad9c-eefaff4ee2a4) - Closing
[0m23:47:09.388687 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:47:09.391826 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */
select * from (
        



with product_snapshot as (
    SELECT
        ProductModelID,
        Name,
        CatalogDescription
    FROM `hive_metastore`.`saleslt`.`productmodel`
)

select * from product_snapshot

    ) as __dbt_sbq
    where false
    limit 0

    
[0m23:47:09.660908 [debug] [Thread-1 (]: SQL status: OK in 0.270 seconds
[0m23:47:09.663486 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=29748066-a96c-47d8-ba5b-9e570681ba4b) - Closing
[0m23:47:09.753541 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:47:09.756275 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`productmodel_snapshot`

  
[0m23:47:10.103520 [debug] [Thread-1 (]: SQL status: OK in 0.350 seconds
[0m23:47:10.107373 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=a54df648-e676-4fc4-9991-39367b4bec2c) - Closing
[0m23:47:10.209371 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:47:10.212374 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`productmodel_snapshot`

  
[0m23:47:10.568818 [debug] [Thread-1 (]: SQL status: OK in 0.350 seconds
[0m23:47:10.575660 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=077424ab-5d66-46b7-b229-57110b0df0d9) - Closing
[0m23:47:10.643874 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:47:10.653820 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

        
  
    create or replace temporary view `productmodel_snapshot__dbt_tmp` as
      
    
    with snapshot_query as (

        with product_snapshot as (
    SELECT
        ProductModelID,
        Name,
        CatalogDescription
    FROM `hive_metastore`.`saleslt`.`productmodel`
)

select * from product_snapshot

    ),

    snapshotted_data as (

        select *, 
    
        ProductModelID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`productmodel_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        ProductModelID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(ProductModelID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        ProductModelID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        ProductModelID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`ProductModelID` != source_data.`ProductModelID`
        or
        (
            ((snapshotted_data.`ProductModelID` is null) and not (source_data.`ProductModelID` is null))
            or
            ((not snapshotted_data.`ProductModelID` is null) and (source_data.`ProductModelID` is null))
        ) or snapshotted_data.`Name` != source_data.`Name`
        or
        (
            ((snapshotted_data.`Name` is null) and not (source_data.`Name` is null))
            or
            ((not snapshotted_data.`Name` is null) and (source_data.`Name` is null))
        ) or snapshotted_data.`CatalogDescription` != source_data.`CatalogDescription`
        or
        (
            ((snapshotted_data.`CatalogDescription` is null) and not (source_data.`CatalogDescription` is null))
            or
            ((not snapshotted_data.`CatalogDescription` is null) and (source_data.`CatalogDescription` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`ProductModelID` != source_data.`ProductModelID`
        or
        (
            ((snapshotted_data.`ProductModelID` is null) and not (source_data.`ProductModelID` is null))
            or
            ((not snapshotted_data.`ProductModelID` is null) and (source_data.`ProductModelID` is null))
        ) or snapshotted_data.`Name` != source_data.`Name`
        or
        (
            ((snapshotted_data.`Name` is null) and not (source_data.`Name` is null))
            or
            ((not snapshotted_data.`Name` is null) and (source_data.`Name` is null))
        ) or snapshotted_data.`CatalogDescription` != source_data.`CatalogDescription`
        or
        (
            ((snapshotted_data.`CatalogDescription` is null) and not (source_data.`CatalogDescription` is null))
            or
            ((not snapshotted_data.`CatalogDescription` is null) and (source_data.`CatalogDescription` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

  
    
[0m23:47:10.993459 [debug] [Thread-1 (]: SQL status: OK in 0.340 seconds
[0m23:47:10.993459 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=04b597b5-c3d2-49d7-8a56-503c0999e6aa) - Closing
[0m23:47:11.073598 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:47:11.073598 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

    
DESCRIBE TABLE `productmodel_snapshot__dbt_tmp`

  
[0m23:47:11.203591 [debug] [Thread-1 (]: SQL status: OK in 0.130 seconds
[0m23:47:11.203591 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=9e287882-529d-447c-b746-6b02640ab3d5) - Closing
[0m23:47:11.283479 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:47:11.288633 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`productmodel_snapshot`

  
[0m23:47:11.623593 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:47:11.633744 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=74d140de-36cf-428c-9df4-d8fe154184ce) - Closing
[0m23:47:11.728415 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:47:11.729422 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

    
DESCRIBE TABLE `productmodel_snapshot__dbt_tmp`

  
[0m23:47:11.883815 [debug] [Thread-1 (]: SQL status: OK in 0.150 seconds
[0m23:47:11.895246 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=e5ee7281-4d38-4797-b917-2be10b55135d) - Closing
[0m23:47:11.973441 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:47:11.973441 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`productmodel_snapshot`

  
[0m23:47:12.303501 [debug] [Thread-1 (]: SQL status: OK in 0.330 seconds
[0m23:47:12.303501 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=a935b68e-60f1-4352-8604-c300b053fc7a) - Closing
[0m23:47:12.373457 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:47:12.373457 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

    
DESCRIBE TABLE `productmodel_snapshot__dbt_tmp`

  
[0m23:47:12.531850 [debug] [Thread-1 (]: SQL status: OK in 0.160 seconds
[0m23:47:12.533355 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=9f77dd93-859d-44e3-973b-9e69458f6757) - Closing
[0m23:47:12.603592 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:47:12.603592 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */
select * from (
        
    
    with snapshot_query as (

        with product_snapshot as (
    SELECT
        ProductModelID,
        Name,
        CatalogDescription
    FROM `hive_metastore`.`saleslt`.`productmodel`
)

select * from product_snapshot

    ),

    snapshotted_data as (

        select *, 
    
        ProductModelID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`productmodel_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        ProductModelID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(ProductModelID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        ProductModelID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        ProductModelID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`ProductModelID` != source_data.`ProductModelID`
        or
        (
            ((snapshotted_data.`ProductModelID` is null) and not (source_data.`ProductModelID` is null))
            or
            ((not snapshotted_data.`ProductModelID` is null) and (source_data.`ProductModelID` is null))
        ) or snapshotted_data.`Name` != source_data.`Name`
        or
        (
            ((snapshotted_data.`Name` is null) and not (source_data.`Name` is null))
            or
            ((not snapshotted_data.`Name` is null) and (source_data.`Name` is null))
        ) or snapshotted_data.`CatalogDescription` != source_data.`CatalogDescription`
        or
        (
            ((snapshotted_data.`CatalogDescription` is null) and not (source_data.`CatalogDescription` is null))
            or
            ((not snapshotted_data.`CatalogDescription` is null) and (source_data.`CatalogDescription` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`ProductModelID` != source_data.`ProductModelID`
        or
        (
            ((snapshotted_data.`ProductModelID` is null) and not (source_data.`ProductModelID` is null))
            or
            ((not snapshotted_data.`ProductModelID` is null) and (source_data.`ProductModelID` is null))
        ) or snapshotted_data.`Name` != source_data.`Name`
        or
        (
            ((snapshotted_data.`Name` is null) and not (source_data.`Name` is null))
            or
            ((not snapshotted_data.`Name` is null) and (source_data.`Name` is null))
        ) or snapshotted_data.`CatalogDescription` != source_data.`CatalogDescription`
        or
        (
            ((snapshotted_data.`CatalogDescription` is null) and not (source_data.`CatalogDescription` is null))
            or
            ((not snapshotted_data.`CatalogDescription` is null) and (source_data.`CatalogDescription` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

    ) as __dbt_sbq
    where false
    limit 0

[0m23:47:12.883494 [debug] [Thread-1 (]: SQL status: OK in 0.280 seconds
[0m23:47:12.883494 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=e7fea88e-7887-470c-83f8-c1cb2b196304) - Closing
[0m23:47:12.958336 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:47:12.959411 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:47:13.088523 [debug] [Thread-1 (]: SQL status: OK in 0.130 seconds
[0m23:47:13.093578 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=ad3042f3-7c3d-438d-ac84-8a16ac3189be) - Closing
[0m23:47:13.173464 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:47:13.173464 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:47:13.185811 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */

      merge into `hive_metastore`.`snapshots`.`productmodel_snapshot` as DBT_INTERNAL_DEST
    
      using `productmodel_snapshot__dbt_tmp` as DBT_INTERNAL_SOURCE
    
    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id
    when matched
     
       and DBT_INTERNAL_DEST.dbt_valid_to is null
     
     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')
        then update
        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to

    when not matched
     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'
        then insert *
    ;

  
[0m23:47:17.363557 [debug] [Thread-1 (]: SQL status: OK in 4.180 seconds
[0m23:47:17.373563 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=f87fbdfc-d2af-4e5c-8032-878b879a1505) - Closing
[0m23:47:17.459035 [debug] [Thread-1 (]: Applying DROP to: `productmodel_snapshot__dbt_tmp`
[0m23:47:17.461027 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.productmodel_snapshot"
[0m23:47:17.463626 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.productmodel_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.productmodel_snapshot"} */
DROP VIEW IF EXISTS `productmodel_snapshot__dbt_tmp`
[0m23:47:17.593526 [debug] [Thread-1 (]: SQL status: OK in 0.130 seconds
[0m23:47:17.593526 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=c40cc15b-ff78-4968-a8f6-ca8dae903bfd) - Closing
[0m23:47:17.677673 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '293dbbac-b276-49c5-8595-c452e7009c54', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001F4D1DDEA10>]}
[0m23:47:17.683799 [info ] [Thread-1 (]: 5 of 7 OK snapshotted snapshots.productmodel_snapshot .......................... [[32mOK[0m in 9.05s]
[0m23:47:17.688850 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.productmodel_snapshot
[0m23:47:17.690848 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m23:47:17.694123 [info ] [Thread-1 (]: 6 of 7 START snapshot snapshots.salesorderdetail_snapshot ...................... [RUN]
[0m23:47:17.697736 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.productmodel_snapshot, now snapshot.medalion_dbt_spark.salesorderdetail_snapshot)
[0m23:47:17.697736 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=660f7728-b53b-4865-9597-8ecff263d840, name=snapshot.medalion_dbt_spark.salesorderdetail_snapshot, idle-time=0.020063400268554688s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.productmodel_snapshot
[0m23:47:17.697736 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m23:47:17.707572 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m23:47:17.721232 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:47:17.723756 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

      describe extended `hive_metastore`.`snapshots`.`salesorderdetail_snapshot`
  
[0m23:47:18.318420 [debug] [Thread-1 (]: SQL status: OK in 0.590 seconds
[0m23:47:18.327779 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=02781046-be6c-457f-82be-2a496b245e6e) - Closing
[0m23:47:18.420343 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:47:18.423853 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */
select * from (
        



with salesorderdetail_snapshot as (
    SELECT
        SalesOrderID,
        SalesOrderDetailID,
        OrderQty,
        ProductID,
        UnitPrice,
        UnitPriceDiscount,
        LineTotal
    FROM `hive_metastore`.`saleslt`.`salesorderdetail`
)

select * from salesorderdetail_snapshot

    ) as __dbt_sbq
    where false
    limit 0

    
[0m23:47:18.693490 [debug] [Thread-1 (]: SQL status: OK in 0.270 seconds
[0m23:47:18.693490 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=18ca010f-4c6c-42af-aec4-0255ba544c0c) - Closing
[0m23:47:18.781030 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:47:18.781030 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`salesorderdetail_snapshot`

  
[0m23:47:19.098723 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:47:19.104920 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=e15081ca-155a-4221-a740-6b5d0aaea386) - Closing
[0m23:47:19.183776 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:47:19.183776 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`salesorderdetail_snapshot`

  
[0m23:47:19.527842 [debug] [Thread-1 (]: SQL status: OK in 0.340 seconds
[0m23:47:19.537747 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=a267308b-dab1-47ea-bfa7-2c83c5999710) - Closing
[0m23:47:19.673110 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:47:19.675108 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

        
  
    create or replace temporary view `salesorderdetail_snapshot__dbt_tmp` as
      
    
    with snapshot_query as (

        with salesorderdetail_snapshot as (
    SELECT
        SalesOrderID,
        SalesOrderDetailID,
        OrderQty,
        ProductID,
        UnitPrice,
        UnitPriceDiscount,
        LineTotal
    FROM `hive_metastore`.`saleslt`.`salesorderdetail`
)

select * from salesorderdetail_snapshot

    ),

    snapshotted_data as (

        select *, 
    
        SalesOrderDetailID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`salesorderdetail_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        SalesOrderDetailID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(SalesOrderDetailID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        SalesOrderDetailID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        SalesOrderDetailID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`SalesOrderID` != source_data.`SalesOrderID`
        or
        (
            ((snapshotted_data.`SalesOrderID` is null) and not (source_data.`SalesOrderID` is null))
            or
            ((not snapshotted_data.`SalesOrderID` is null) and (source_data.`SalesOrderID` is null))
        ) or snapshotted_data.`SalesOrderDetailID` != source_data.`SalesOrderDetailID`
        or
        (
            ((snapshotted_data.`SalesOrderDetailID` is null) and not (source_data.`SalesOrderDetailID` is null))
            or
            ((not snapshotted_data.`SalesOrderDetailID` is null) and (source_data.`SalesOrderDetailID` is null))
        ) or snapshotted_data.`OrderQty` != source_data.`OrderQty`
        or
        (
            ((snapshotted_data.`OrderQty` is null) and not (source_data.`OrderQty` is null))
            or
            ((not snapshotted_data.`OrderQty` is null) and (source_data.`OrderQty` is null))
        ) or snapshotted_data.`ProductID` != source_data.`ProductID`
        or
        (
            ((snapshotted_data.`ProductID` is null) and not (source_data.`ProductID` is null))
            or
            ((not snapshotted_data.`ProductID` is null) and (source_data.`ProductID` is null))
        ) or snapshotted_data.`UnitPrice` != source_data.`UnitPrice`
        or
        (
            ((snapshotted_data.`UnitPrice` is null) and not (source_data.`UnitPrice` is null))
            or
            ((not snapshotted_data.`UnitPrice` is null) and (source_data.`UnitPrice` is null))
        ) or snapshotted_data.`UnitPriceDiscount` != source_data.`UnitPriceDiscount`
        or
        (
            ((snapshotted_data.`UnitPriceDiscount` is null) and not (source_data.`UnitPriceDiscount` is null))
            or
            ((not snapshotted_data.`UnitPriceDiscount` is null) and (source_data.`UnitPriceDiscount` is null))
        ) or snapshotted_data.`LineTotal` != source_data.`LineTotal`
        or
        (
            ((snapshotted_data.`LineTotal` is null) and not (source_data.`LineTotal` is null))
            or
            ((not snapshotted_data.`LineTotal` is null) and (source_data.`LineTotal` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`SalesOrderID` != source_data.`SalesOrderID`
        or
        (
            ((snapshotted_data.`SalesOrderID` is null) and not (source_data.`SalesOrderID` is null))
            or
            ((not snapshotted_data.`SalesOrderID` is null) and (source_data.`SalesOrderID` is null))
        ) or snapshotted_data.`SalesOrderDetailID` != source_data.`SalesOrderDetailID`
        or
        (
            ((snapshotted_data.`SalesOrderDetailID` is null) and not (source_data.`SalesOrderDetailID` is null))
            or
            ((not snapshotted_data.`SalesOrderDetailID` is null) and (source_data.`SalesOrderDetailID` is null))
        ) or snapshotted_data.`OrderQty` != source_data.`OrderQty`
        or
        (
            ((snapshotted_data.`OrderQty` is null) and not (source_data.`OrderQty` is null))
            or
            ((not snapshotted_data.`OrderQty` is null) and (source_data.`OrderQty` is null))
        ) or snapshotted_data.`ProductID` != source_data.`ProductID`
        or
        (
            ((snapshotted_data.`ProductID` is null) and not (source_data.`ProductID` is null))
            or
            ((not snapshotted_data.`ProductID` is null) and (source_data.`ProductID` is null))
        ) or snapshotted_data.`UnitPrice` != source_data.`UnitPrice`
        or
        (
            ((snapshotted_data.`UnitPrice` is null) and not (source_data.`UnitPrice` is null))
            or
            ((not snapshotted_data.`UnitPrice` is null) and (source_data.`UnitPrice` is null))
        ) or snapshotted_data.`UnitPriceDiscount` != source_data.`UnitPriceDiscount`
        or
        (
            ((snapshotted_data.`UnitPriceDiscount` is null) and not (source_data.`UnitPriceDiscount` is null))
            or
            ((not snapshotted_data.`UnitPriceDiscount` is null) and (source_data.`UnitPriceDiscount` is null))
        ) or snapshotted_data.`LineTotal` != source_data.`LineTotal`
        or
        (
            ((snapshotted_data.`LineTotal` is null) and not (source_data.`LineTotal` is null))
            or
            ((not snapshotted_data.`LineTotal` is null) and (source_data.`LineTotal` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

  
    
[0m23:47:19.992243 [debug] [Thread-1 (]: SQL status: OK in 0.320 seconds
[0m23:47:19.994763 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=1ec08eb3-1245-40b3-b856-b932118677a2) - Closing
[0m23:47:20.074256 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:47:20.075529 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

    
DESCRIBE TABLE `salesorderdetail_snapshot__dbt_tmp`

  
[0m23:47:20.207623 [debug] [Thread-1 (]: SQL status: OK in 0.130 seconds
[0m23:47:20.209883 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=56a4679b-36e6-412a-a40a-f918c332268b) - Closing
[0m23:47:20.291180 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:47:20.292181 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`salesorderdetail_snapshot`

  
[0m23:47:20.598576 [debug] [Thread-1 (]: SQL status: OK in 0.310 seconds
[0m23:47:20.607643 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=5431e94f-345e-4b1f-be6e-be0e517e5bce) - Closing
[0m23:47:20.693599 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:47:20.696888 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

    
DESCRIBE TABLE `salesorderdetail_snapshot__dbt_tmp`

  
[0m23:47:20.840785 [debug] [Thread-1 (]: SQL status: OK in 0.140 seconds
[0m23:47:20.840785 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=8497d5f2-19e6-4f0a-8832-ca4217629f54) - Closing
[0m23:47:20.914017 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:47:20.914017 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`salesorderdetail_snapshot`

  
[0m23:47:21.227968 [debug] [Thread-1 (]: SQL status: OK in 0.310 seconds
[0m23:47:21.237703 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=b0064eb1-d952-47d0-8030-c6f58bc85c85) - Closing
[0m23:47:21.318733 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:47:21.323512 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

    
DESCRIBE TABLE `salesorderdetail_snapshot__dbt_tmp`

  
[0m23:47:21.449470 [debug] [Thread-1 (]: SQL status: OK in 0.120 seconds
[0m23:47:21.453650 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=4d0dc14d-f42e-44f5-bdae-abd900b4193b) - Closing
[0m23:47:21.527008 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:47:21.527008 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */
select * from (
        
    
    with snapshot_query as (

        with salesorderdetail_snapshot as (
    SELECT
        SalesOrderID,
        SalesOrderDetailID,
        OrderQty,
        ProductID,
        UnitPrice,
        UnitPriceDiscount,
        LineTotal
    FROM `hive_metastore`.`saleslt`.`salesorderdetail`
)

select * from salesorderdetail_snapshot

    ),

    snapshotted_data as (

        select *, 
    
        SalesOrderDetailID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`salesorderdetail_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        SalesOrderDetailID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(SalesOrderDetailID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        SalesOrderDetailID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        SalesOrderDetailID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`SalesOrderID` != source_data.`SalesOrderID`
        or
        (
            ((snapshotted_data.`SalesOrderID` is null) and not (source_data.`SalesOrderID` is null))
            or
            ((not snapshotted_data.`SalesOrderID` is null) and (source_data.`SalesOrderID` is null))
        ) or snapshotted_data.`SalesOrderDetailID` != source_data.`SalesOrderDetailID`
        or
        (
            ((snapshotted_data.`SalesOrderDetailID` is null) and not (source_data.`SalesOrderDetailID` is null))
            or
            ((not snapshotted_data.`SalesOrderDetailID` is null) and (source_data.`SalesOrderDetailID` is null))
        ) or snapshotted_data.`OrderQty` != source_data.`OrderQty`
        or
        (
            ((snapshotted_data.`OrderQty` is null) and not (source_data.`OrderQty` is null))
            or
            ((not snapshotted_data.`OrderQty` is null) and (source_data.`OrderQty` is null))
        ) or snapshotted_data.`ProductID` != source_data.`ProductID`
        or
        (
            ((snapshotted_data.`ProductID` is null) and not (source_data.`ProductID` is null))
            or
            ((not snapshotted_data.`ProductID` is null) and (source_data.`ProductID` is null))
        ) or snapshotted_data.`UnitPrice` != source_data.`UnitPrice`
        or
        (
            ((snapshotted_data.`UnitPrice` is null) and not (source_data.`UnitPrice` is null))
            or
            ((not snapshotted_data.`UnitPrice` is null) and (source_data.`UnitPrice` is null))
        ) or snapshotted_data.`UnitPriceDiscount` != source_data.`UnitPriceDiscount`
        or
        (
            ((snapshotted_data.`UnitPriceDiscount` is null) and not (source_data.`UnitPriceDiscount` is null))
            or
            ((not snapshotted_data.`UnitPriceDiscount` is null) and (source_data.`UnitPriceDiscount` is null))
        ) or snapshotted_data.`LineTotal` != source_data.`LineTotal`
        or
        (
            ((snapshotted_data.`LineTotal` is null) and not (source_data.`LineTotal` is null))
            or
            ((not snapshotted_data.`LineTotal` is null) and (source_data.`LineTotal` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`SalesOrderID` != source_data.`SalesOrderID`
        or
        (
            ((snapshotted_data.`SalesOrderID` is null) and not (source_data.`SalesOrderID` is null))
            or
            ((not snapshotted_data.`SalesOrderID` is null) and (source_data.`SalesOrderID` is null))
        ) or snapshotted_data.`SalesOrderDetailID` != source_data.`SalesOrderDetailID`
        or
        (
            ((snapshotted_data.`SalesOrderDetailID` is null) and not (source_data.`SalesOrderDetailID` is null))
            or
            ((not snapshotted_data.`SalesOrderDetailID` is null) and (source_data.`SalesOrderDetailID` is null))
        ) or snapshotted_data.`OrderQty` != source_data.`OrderQty`
        or
        (
            ((snapshotted_data.`OrderQty` is null) and not (source_data.`OrderQty` is null))
            or
            ((not snapshotted_data.`OrderQty` is null) and (source_data.`OrderQty` is null))
        ) or snapshotted_data.`ProductID` != source_data.`ProductID`
        or
        (
            ((snapshotted_data.`ProductID` is null) and not (source_data.`ProductID` is null))
            or
            ((not snapshotted_data.`ProductID` is null) and (source_data.`ProductID` is null))
        ) or snapshotted_data.`UnitPrice` != source_data.`UnitPrice`
        or
        (
            ((snapshotted_data.`UnitPrice` is null) and not (source_data.`UnitPrice` is null))
            or
            ((not snapshotted_data.`UnitPrice` is null) and (source_data.`UnitPrice` is null))
        ) or snapshotted_data.`UnitPriceDiscount` != source_data.`UnitPriceDiscount`
        or
        (
            ((snapshotted_data.`UnitPriceDiscount` is null) and not (source_data.`UnitPriceDiscount` is null))
            or
            ((not snapshotted_data.`UnitPriceDiscount` is null) and (source_data.`UnitPriceDiscount` is null))
        ) or snapshotted_data.`LineTotal` != source_data.`LineTotal`
        or
        (
            ((snapshotted_data.`LineTotal` is null) and not (source_data.`LineTotal` is null))
            or
            ((not snapshotted_data.`LineTotal` is null) and (source_data.`LineTotal` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

    ) as __dbt_sbq
    where false
    limit 0

[0m23:47:21.818902 [debug] [Thread-1 (]: SQL status: OK in 0.290 seconds
[0m23:47:21.818902 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=fb97ef44-d960-477c-9e01-d0f10f9f7e5c) - Closing
[0m23:47:21.897618 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:47:21.897618 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:47:22.015631 [debug] [Thread-1 (]: SQL status: OK in 0.120 seconds
[0m23:47:22.015631 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=3b287cab-95f6-4658-8c25-1864e8d25ba3) - Closing
[0m23:47:22.116977 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:47:22.130936 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:47:22.131278 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */

      merge into `hive_metastore`.`snapshots`.`salesorderdetail_snapshot` as DBT_INTERNAL_DEST
    
      using `salesorderdetail_snapshot__dbt_tmp` as DBT_INTERNAL_SOURCE
    
    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id
    when matched
     
       and DBT_INTERNAL_DEST.dbt_valid_to is null
     
     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')
        then update
        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to

    when not matched
     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'
        then insert *
    ;

  
[0m23:47:25.516044 [debug] [Thread-1 (]: SQL status: OK in 3.380 seconds
[0m23:47:25.518121 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=d196e07e-57ae-4284-950b-57fe6edeec50) - Closing
[0m23:47:25.612665 [debug] [Thread-1 (]: Applying DROP to: `salesorderdetail_snapshot__dbt_tmp`
[0m23:47:25.615131 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"
[0m23:47:25.615131 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderdetail_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderdetail_snapshot"} */
DROP VIEW IF EXISTS `salesorderdetail_snapshot__dbt_tmp`
[0m23:47:25.744091 [debug] [Thread-1 (]: SQL status: OK in 0.130 seconds
[0m23:47:25.748748 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=e04d81fd-be8b-4b97-bd9d-0c7fd47d8f22) - Closing
[0m23:47:25.823772 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '293dbbac-b276-49c5-8595-c452e7009c54', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001F4D1EE3C10>]}
[0m23:47:25.823772 [info ] [Thread-1 (]: 6 of 7 OK snapshotted snapshots.salesorderdetail_snapshot ...................... [[32mOK[0m in 8.13s]
[0m23:47:25.823772 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m23:47:25.823772 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.salesorderheader_snapshot
[0m23:47:25.823772 [info ] [Thread-1 (]: 7 of 7 START snapshot snapshots.salesorderheader_snapshot ...................... [RUN]
[0m23:47:25.823772 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.salesorderdetail_snapshot, now snapshot.medalion_dbt_spark.salesorderheader_snapshot)
[0m23:47:25.831133 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=660f7728-b53b-4865-9597-8ecff263d840, name=snapshot.medalion_dbt_spark.salesorderheader_snapshot, idle-time=0.007361173629760742s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m23:47:25.832141 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.salesorderheader_snapshot
[0m23:47:25.834490 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.salesorderheader_snapshot
[0m23:47:25.845510 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:47:25.845510 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

      describe extended `hive_metastore`.`snapshots`.`salesorderheader_snapshot`
  
[0m23:47:26.408894 [debug] [Thread-1 (]: SQL status: OK in 0.560 seconds
[0m23:47:26.415921 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=1adc77cc-bc23-4e0a-8c6a-cc1d25b77b08) - Closing
[0m23:47:26.517714 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:47:26.523578 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */
select * from (
        



with salesorderheader_snapshot as (
    SELECT
        SalesOrderID,
        RevisionNumber,
        OrderDate,
        DueDate,
        ShipDate,
        Status,
        OnlineOrderFlag,
        SalesOrderNumber,
        PurchaseOrderNumber,
        AccountNumber,
        CustomerID,
        ShipToAddressID,
        BillToAddressID,
        ShipMethod,
        CreditCardApprovalCode,
        SubTotal,
        TaxAmt,
        Freight,
        TotalDue,
        Comment
    FROM `hive_metastore`.`saleslt`.`salesorderheader`
)

select * from salesorderheader_snapshot

    ) as __dbt_sbq
    where false
    limit 0

    
[0m23:47:26.783647 [debug] [Thread-1 (]: SQL status: OK in 0.250 seconds
[0m23:47:26.783647 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=247d4285-a838-48c0-90e0-cb48ff33b5fe) - Closing
[0m23:47:26.875779 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:47:26.877858 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`salesorderheader_snapshot`

  
[0m23:47:27.189463 [debug] [Thread-1 (]: SQL status: OK in 0.310 seconds
[0m23:47:27.191466 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=e8fb2f61-cc4b-43af-8f85-ac2b37082baf) - Closing
[0m23:47:27.268943 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:47:27.269943 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`salesorderheader_snapshot`

  
[0m23:47:27.573967 [debug] [Thread-1 (]: SQL status: OK in 0.300 seconds
[0m23:47:27.583716 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=56e64578-ceb5-4a53-8e59-a887218a19ed) - Closing
[0m23:47:27.680519 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:47:27.683740 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

        
  
    create or replace temporary view `salesorderheader_snapshot__dbt_tmp` as
      
    
    with snapshot_query as (

        with salesorderheader_snapshot as (
    SELECT
        SalesOrderID,
        RevisionNumber,
        OrderDate,
        DueDate,
        ShipDate,
        Status,
        OnlineOrderFlag,
        SalesOrderNumber,
        PurchaseOrderNumber,
        AccountNumber,
        CustomerID,
        ShipToAddressID,
        BillToAddressID,
        ShipMethod,
        CreditCardApprovalCode,
        SubTotal,
        TaxAmt,
        Freight,
        TotalDue,
        Comment
    FROM `hive_metastore`.`saleslt`.`salesorderheader`
)

select * from salesorderheader_snapshot

    ),

    snapshotted_data as (

        select *, 
    
        SalesOrderID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`salesorderheader_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        SalesOrderID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(SalesOrderID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        SalesOrderID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        SalesOrderID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`SalesOrderID` != source_data.`SalesOrderID`
        or
        (
            ((snapshotted_data.`SalesOrderID` is null) and not (source_data.`SalesOrderID` is null))
            or
            ((not snapshotted_data.`SalesOrderID` is null) and (source_data.`SalesOrderID` is null))
        ) or snapshotted_data.`RevisionNumber` != source_data.`RevisionNumber`
        or
        (
            ((snapshotted_data.`RevisionNumber` is null) and not (source_data.`RevisionNumber` is null))
            or
            ((not snapshotted_data.`RevisionNumber` is null) and (source_data.`RevisionNumber` is null))
        ) or snapshotted_data.`OrderDate` != source_data.`OrderDate`
        or
        (
            ((snapshotted_data.`OrderDate` is null) and not (source_data.`OrderDate` is null))
            or
            ((not snapshotted_data.`OrderDate` is null) and (source_data.`OrderDate` is null))
        ) or snapshotted_data.`DueDate` != source_data.`DueDate`
        or
        (
            ((snapshotted_data.`DueDate` is null) and not (source_data.`DueDate` is null))
            or
            ((not snapshotted_data.`DueDate` is null) and (source_data.`DueDate` is null))
        ) or snapshotted_data.`ShipDate` != source_data.`ShipDate`
        or
        (
            ((snapshotted_data.`ShipDate` is null) and not (source_data.`ShipDate` is null))
            or
            ((not snapshotted_data.`ShipDate` is null) and (source_data.`ShipDate` is null))
        ) or snapshotted_data.`Status` != source_data.`Status`
        or
        (
            ((snapshotted_data.`Status` is null) and not (source_data.`Status` is null))
            or
            ((not snapshotted_data.`Status` is null) and (source_data.`Status` is null))
        ) or snapshotted_data.`OnlineOrderFlag` != source_data.`OnlineOrderFlag`
        or
        (
            ((snapshotted_data.`OnlineOrderFlag` is null) and not (source_data.`OnlineOrderFlag` is null))
            or
            ((not snapshotted_data.`OnlineOrderFlag` is null) and (source_data.`OnlineOrderFlag` is null))
        ) or snapshotted_data.`SalesOrderNumber` != source_data.`SalesOrderNumber`
        or
        (
            ((snapshotted_data.`SalesOrderNumber` is null) and not (source_data.`SalesOrderNumber` is null))
            or
            ((not snapshotted_data.`SalesOrderNumber` is null) and (source_data.`SalesOrderNumber` is null))
        ) or snapshotted_data.`PurchaseOrderNumber` != source_data.`PurchaseOrderNumber`
        or
        (
            ((snapshotted_data.`PurchaseOrderNumber` is null) and not (source_data.`PurchaseOrderNumber` is null))
            or
            ((not snapshotted_data.`PurchaseOrderNumber` is null) and (source_data.`PurchaseOrderNumber` is null))
        ) or snapshotted_data.`AccountNumber` != source_data.`AccountNumber`
        or
        (
            ((snapshotted_data.`AccountNumber` is null) and not (source_data.`AccountNumber` is null))
            or
            ((not snapshotted_data.`AccountNumber` is null) and (source_data.`AccountNumber` is null))
        ) or snapshotted_data.`CustomerID` != source_data.`CustomerID`
        or
        (
            ((snapshotted_data.`CustomerID` is null) and not (source_data.`CustomerID` is null))
            or
            ((not snapshotted_data.`CustomerID` is null) and (source_data.`CustomerID` is null))
        ) or snapshotted_data.`ShipToAddressID` != source_data.`ShipToAddressID`
        or
        (
            ((snapshotted_data.`ShipToAddressID` is null) and not (source_data.`ShipToAddressID` is null))
            or
            ((not snapshotted_data.`ShipToAddressID` is null) and (source_data.`ShipToAddressID` is null))
        ) or snapshotted_data.`BillToAddressID` != source_data.`BillToAddressID`
        or
        (
            ((snapshotted_data.`BillToAddressID` is null) and not (source_data.`BillToAddressID` is null))
            or
            ((not snapshotted_data.`BillToAddressID` is null) and (source_data.`BillToAddressID` is null))
        ) or snapshotted_data.`ShipMethod` != source_data.`ShipMethod`
        or
        (
            ((snapshotted_data.`ShipMethod` is null) and not (source_data.`ShipMethod` is null))
            or
            ((not snapshotted_data.`ShipMethod` is null) and (source_data.`ShipMethod` is null))
        ) or snapshotted_data.`CreditCardApprovalCode` != source_data.`CreditCardApprovalCode`
        or
        (
            ((snapshotted_data.`CreditCardApprovalCode` is null) and not (source_data.`CreditCardApprovalCode` is null))
            or
            ((not snapshotted_data.`CreditCardApprovalCode` is null) and (source_data.`CreditCardApprovalCode` is null))
        ) or snapshotted_data.`SubTotal` != source_data.`SubTotal`
        or
        (
            ((snapshotted_data.`SubTotal` is null) and not (source_data.`SubTotal` is null))
            or
            ((not snapshotted_data.`SubTotal` is null) and (source_data.`SubTotal` is null))
        ) or snapshotted_data.`TaxAmt` != source_data.`TaxAmt`
        or
        (
            ((snapshotted_data.`TaxAmt` is null) and not (source_data.`TaxAmt` is null))
            or
            ((not snapshotted_data.`TaxAmt` is null) and (source_data.`TaxAmt` is null))
        ) or snapshotted_data.`Freight` != source_data.`Freight`
        or
        (
            ((snapshotted_data.`Freight` is null) and not (source_data.`Freight` is null))
            or
            ((not snapshotted_data.`Freight` is null) and (source_data.`Freight` is null))
        ) or snapshotted_data.`TotalDue` != source_data.`TotalDue`
        or
        (
            ((snapshotted_data.`TotalDue` is null) and not (source_data.`TotalDue` is null))
            or
            ((not snapshotted_data.`TotalDue` is null) and (source_data.`TotalDue` is null))
        ) or snapshotted_data.`Comment` != source_data.`Comment`
        or
        (
            ((snapshotted_data.`Comment` is null) and not (source_data.`Comment` is null))
            or
            ((not snapshotted_data.`Comment` is null) and (source_data.`Comment` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`SalesOrderID` != source_data.`SalesOrderID`
        or
        (
            ((snapshotted_data.`SalesOrderID` is null) and not (source_data.`SalesOrderID` is null))
            or
            ((not snapshotted_data.`SalesOrderID` is null) and (source_data.`SalesOrderID` is null))
        ) or snapshotted_data.`RevisionNumber` != source_data.`RevisionNumber`
        or
        (
            ((snapshotted_data.`RevisionNumber` is null) and not (source_data.`RevisionNumber` is null))
            or
            ((not snapshotted_data.`RevisionNumber` is null) and (source_data.`RevisionNumber` is null))
        ) or snapshotted_data.`OrderDate` != source_data.`OrderDate`
        or
        (
            ((snapshotted_data.`OrderDate` is null) and not (source_data.`OrderDate` is null))
            or
            ((not snapshotted_data.`OrderDate` is null) and (source_data.`OrderDate` is null))
        ) or snapshotted_data.`DueDate` != source_data.`DueDate`
        or
        (
            ((snapshotted_data.`DueDate` is null) and not (source_data.`DueDate` is null))
            or
            ((not snapshotted_data.`DueDate` is null) and (source_data.`DueDate` is null))
        ) or snapshotted_data.`ShipDate` != source_data.`ShipDate`
        or
        (
            ((snapshotted_data.`ShipDate` is null) and not (source_data.`ShipDate` is null))
            or
            ((not snapshotted_data.`ShipDate` is null) and (source_data.`ShipDate` is null))
        ) or snapshotted_data.`Status` != source_data.`Status`
        or
        (
            ((snapshotted_data.`Status` is null) and not (source_data.`Status` is null))
            or
            ((not snapshotted_data.`Status` is null) and (source_data.`Status` is null))
        ) or snapshotted_data.`OnlineOrderFlag` != source_data.`OnlineOrderFlag`
        or
        (
            ((snapshotted_data.`OnlineOrderFlag` is null) and not (source_data.`OnlineOrderFlag` is null))
            or
            ((not snapshotted_data.`OnlineOrderFlag` is null) and (source_data.`OnlineOrderFlag` is null))
        ) or snapshotted_data.`SalesOrderNumber` != source_data.`SalesOrderNumber`
        or
        (
            ((snapshotted_data.`SalesOrderNumber` is null) and not (source_data.`SalesOrderNumber` is null))
            or
            ((not snapshotted_data.`SalesOrderNumber` is null) and (source_data.`SalesOrderNumber` is null))
        ) or snapshotted_data.`PurchaseOrderNumber` != source_data.`PurchaseOrderNumber`
        or
        (
            ((snapshotted_data.`PurchaseOrderNumber` is null) and not (source_data.`PurchaseOrderNumber` is null))
            or
            ((not snapshotted_data.`PurchaseOrderNumber` is null) and (source_data.`PurchaseOrderNumber` is null))
        ) or snapshotted_data.`AccountNumber` != source_data.`AccountNumber`
        or
        (
            ((snapshotted_data.`AccountNumber` is null) and not (source_data.`AccountNumber` is null))
            or
            ((not snapshotted_data.`AccountNumber` is null) and (source_data.`AccountNumber` is null))
        ) or snapshotted_data.`CustomerID` != source_data.`CustomerID`
        or
        (
            ((snapshotted_data.`CustomerID` is null) and not (source_data.`CustomerID` is null))
            or
            ((not snapshotted_data.`CustomerID` is null) and (source_data.`CustomerID` is null))
        ) or snapshotted_data.`ShipToAddressID` != source_data.`ShipToAddressID`
        or
        (
            ((snapshotted_data.`ShipToAddressID` is null) and not (source_data.`ShipToAddressID` is null))
            or
            ((not snapshotted_data.`ShipToAddressID` is null) and (source_data.`ShipToAddressID` is null))
        ) or snapshotted_data.`BillToAddressID` != source_data.`BillToAddressID`
        or
        (
            ((snapshotted_data.`BillToAddressID` is null) and not (source_data.`BillToAddressID` is null))
            or
            ((not snapshotted_data.`BillToAddressID` is null) and (source_data.`BillToAddressID` is null))
        ) or snapshotted_data.`ShipMethod` != source_data.`ShipMethod`
        or
        (
            ((snapshotted_data.`ShipMethod` is null) and not (source_data.`ShipMethod` is null))
            or
            ((not snapshotted_data.`ShipMethod` is null) and (source_data.`ShipMethod` is null))
        ) or snapshotted_data.`CreditCardApprovalCode` != source_data.`CreditCardApprovalCode`
        or
        (
            ((snapshotted_data.`CreditCardApprovalCode` is null) and not (source_data.`CreditCardApprovalCode` is null))
            or
            ((not snapshotted_data.`CreditCardApprovalCode` is null) and (source_data.`CreditCardApprovalCode` is null))
        ) or snapshotted_data.`SubTotal` != source_data.`SubTotal`
        or
        (
            ((snapshotted_data.`SubTotal` is null) and not (source_data.`SubTotal` is null))
            or
            ((not snapshotted_data.`SubTotal` is null) and (source_data.`SubTotal` is null))
        ) or snapshotted_data.`TaxAmt` != source_data.`TaxAmt`
        or
        (
            ((snapshotted_data.`TaxAmt` is null) and not (source_data.`TaxAmt` is null))
            or
            ((not snapshotted_data.`TaxAmt` is null) and (source_data.`TaxAmt` is null))
        ) or snapshotted_data.`Freight` != source_data.`Freight`
        or
        (
            ((snapshotted_data.`Freight` is null) and not (source_data.`Freight` is null))
            or
            ((not snapshotted_data.`Freight` is null) and (source_data.`Freight` is null))
        ) or snapshotted_data.`TotalDue` != source_data.`TotalDue`
        or
        (
            ((snapshotted_data.`TotalDue` is null) and not (source_data.`TotalDue` is null))
            or
            ((not snapshotted_data.`TotalDue` is null) and (source_data.`TotalDue` is null))
        ) or snapshotted_data.`Comment` != source_data.`Comment`
        or
        (
            ((snapshotted_data.`Comment` is null) and not (source_data.`Comment` is null))
            or
            ((not snapshotted_data.`Comment` is null) and (source_data.`Comment` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

  
    
[0m23:47:28.063476 [debug] [Thread-1 (]: SQL status: OK in 0.380 seconds
[0m23:47:28.063476 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=9cd1110b-add2-4242-b4ee-cac326133845) - Closing
[0m23:47:28.133735 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:47:28.133735 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

    
DESCRIBE TABLE `salesorderheader_snapshot__dbt_tmp`

  
[0m23:47:28.285484 [debug] [Thread-1 (]: SQL status: OK in 0.150 seconds
[0m23:47:28.293673 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=bf2aaa8f-10b4-4df3-bff3-941883cb8f21) - Closing
[0m23:47:28.388137 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:47:28.389155 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`salesorderheader_snapshot`

  
[0m23:47:28.707997 [debug] [Thread-1 (]: SQL status: OK in 0.310 seconds
[0m23:47:28.717550 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=15ce15d5-39cb-4532-b35f-a1d1a65854a6) - Closing
[0m23:47:28.807985 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:47:28.807985 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

    
DESCRIBE TABLE `salesorderheader_snapshot__dbt_tmp`

  
[0m23:47:28.945840 [debug] [Thread-1 (]: SQL status: OK in 0.130 seconds
[0m23:47:28.947849 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=ecad0372-3674-4da6-ad74-12f41ab49fa3) - Closing
[0m23:47:29.033919 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:47:29.037381 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

    
DESCRIBE TABLE `hive_metastore`.`snapshots`.`salesorderheader_snapshot`

  
[0m23:47:29.348194 [debug] [Thread-1 (]: SQL status: OK in 0.310 seconds
[0m23:47:29.358052 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=5d1dc0a6-87a5-44ed-887d-c529972c20b5) - Closing
[0m23:47:29.443592 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:47:29.446862 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

    
DESCRIBE TABLE `salesorderheader_snapshot__dbt_tmp`

  
[0m23:47:29.573929 [debug] [Thread-1 (]: SQL status: OK in 0.130 seconds
[0m23:47:29.583776 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=b0fe5eba-045f-4083-925f-b8ea1d54dc55) - Closing
[0m23:47:29.672165 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:47:29.677889 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */
select * from (
        
    
    with snapshot_query as (

        with salesorderheader_snapshot as (
    SELECT
        SalesOrderID,
        RevisionNumber,
        OrderDate,
        DueDate,
        ShipDate,
        Status,
        OnlineOrderFlag,
        SalesOrderNumber,
        PurchaseOrderNumber,
        AccountNumber,
        CustomerID,
        ShipToAddressID,
        BillToAddressID,
        ShipMethod,
        CreditCardApprovalCode,
        SubTotal,
        TaxAmt,
        Freight,
        TotalDue,
        Comment
    FROM `hive_metastore`.`saleslt`.`salesorderheader`
)

select * from salesorderheader_snapshot

    ),

    snapshotted_data as (

        select *, 
    
        SalesOrderID as dbt_unique_key
    

        from `hive_metastore`.`snapshots`.`salesorderheader_snapshot`
        where
            
                dbt_valid_to is null
            

    ),

    insertions_source_data as (

        select *, 
    
        SalesOrderID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
  
  coalesce(nullif(
    current_timestamp()
, 
    current_timestamp()
), null)
  as dbt_valid_to
,
            md5(coalesce(cast(SalesOrderID as string ), '')
         || '|' || coalesce(cast(
    current_timestamp()
 as string ), '')
        ) as dbt_scd_id

        from snapshot_query
    ),

    updates_source_data as (

        select *, 
    
        SalesOrderID as dbt_unique_key
    
,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_valid_to

        from snapshot_query
    ),

    deletes_source_data as (

        select *, 
    
        SalesOrderID as dbt_unique_key
    

        from snapshot_query
    ),
    

    insertions as (

        select
            'insert' as dbt_change_type,
            source_data.*

        from insertions_source_data as source_data
        left outer join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        snapshotted_data.dbt_unique_key is null
    

            or (
    
        snapshotted_data.dbt_unique_key is not null
    
 and (
               (snapshotted_data.`SalesOrderID` != source_data.`SalesOrderID`
        or
        (
            ((snapshotted_data.`SalesOrderID` is null) and not (source_data.`SalesOrderID` is null))
            or
            ((not snapshotted_data.`SalesOrderID` is null) and (source_data.`SalesOrderID` is null))
        ) or snapshotted_data.`RevisionNumber` != source_data.`RevisionNumber`
        or
        (
            ((snapshotted_data.`RevisionNumber` is null) and not (source_data.`RevisionNumber` is null))
            or
            ((not snapshotted_data.`RevisionNumber` is null) and (source_data.`RevisionNumber` is null))
        ) or snapshotted_data.`OrderDate` != source_data.`OrderDate`
        or
        (
            ((snapshotted_data.`OrderDate` is null) and not (source_data.`OrderDate` is null))
            or
            ((not snapshotted_data.`OrderDate` is null) and (source_data.`OrderDate` is null))
        ) or snapshotted_data.`DueDate` != source_data.`DueDate`
        or
        (
            ((snapshotted_data.`DueDate` is null) and not (source_data.`DueDate` is null))
            or
            ((not snapshotted_data.`DueDate` is null) and (source_data.`DueDate` is null))
        ) or snapshotted_data.`ShipDate` != source_data.`ShipDate`
        or
        (
            ((snapshotted_data.`ShipDate` is null) and not (source_data.`ShipDate` is null))
            or
            ((not snapshotted_data.`ShipDate` is null) and (source_data.`ShipDate` is null))
        ) or snapshotted_data.`Status` != source_data.`Status`
        or
        (
            ((snapshotted_data.`Status` is null) and not (source_data.`Status` is null))
            or
            ((not snapshotted_data.`Status` is null) and (source_data.`Status` is null))
        ) or snapshotted_data.`OnlineOrderFlag` != source_data.`OnlineOrderFlag`
        or
        (
            ((snapshotted_data.`OnlineOrderFlag` is null) and not (source_data.`OnlineOrderFlag` is null))
            or
            ((not snapshotted_data.`OnlineOrderFlag` is null) and (source_data.`OnlineOrderFlag` is null))
        ) or snapshotted_data.`SalesOrderNumber` != source_data.`SalesOrderNumber`
        or
        (
            ((snapshotted_data.`SalesOrderNumber` is null) and not (source_data.`SalesOrderNumber` is null))
            or
            ((not snapshotted_data.`SalesOrderNumber` is null) and (source_data.`SalesOrderNumber` is null))
        ) or snapshotted_data.`PurchaseOrderNumber` != source_data.`PurchaseOrderNumber`
        or
        (
            ((snapshotted_data.`PurchaseOrderNumber` is null) and not (source_data.`PurchaseOrderNumber` is null))
            or
            ((not snapshotted_data.`PurchaseOrderNumber` is null) and (source_data.`PurchaseOrderNumber` is null))
        ) or snapshotted_data.`AccountNumber` != source_data.`AccountNumber`
        or
        (
            ((snapshotted_data.`AccountNumber` is null) and not (source_data.`AccountNumber` is null))
            or
            ((not snapshotted_data.`AccountNumber` is null) and (source_data.`AccountNumber` is null))
        ) or snapshotted_data.`CustomerID` != source_data.`CustomerID`
        or
        (
            ((snapshotted_data.`CustomerID` is null) and not (source_data.`CustomerID` is null))
            or
            ((not snapshotted_data.`CustomerID` is null) and (source_data.`CustomerID` is null))
        ) or snapshotted_data.`ShipToAddressID` != source_data.`ShipToAddressID`
        or
        (
            ((snapshotted_data.`ShipToAddressID` is null) and not (source_data.`ShipToAddressID` is null))
            or
            ((not snapshotted_data.`ShipToAddressID` is null) and (source_data.`ShipToAddressID` is null))
        ) or snapshotted_data.`BillToAddressID` != source_data.`BillToAddressID`
        or
        (
            ((snapshotted_data.`BillToAddressID` is null) and not (source_data.`BillToAddressID` is null))
            or
            ((not snapshotted_data.`BillToAddressID` is null) and (source_data.`BillToAddressID` is null))
        ) or snapshotted_data.`ShipMethod` != source_data.`ShipMethod`
        or
        (
            ((snapshotted_data.`ShipMethod` is null) and not (source_data.`ShipMethod` is null))
            or
            ((not snapshotted_data.`ShipMethod` is null) and (source_data.`ShipMethod` is null))
        ) or snapshotted_data.`CreditCardApprovalCode` != source_data.`CreditCardApprovalCode`
        or
        (
            ((snapshotted_data.`CreditCardApprovalCode` is null) and not (source_data.`CreditCardApprovalCode` is null))
            or
            ((not snapshotted_data.`CreditCardApprovalCode` is null) and (source_data.`CreditCardApprovalCode` is null))
        ) or snapshotted_data.`SubTotal` != source_data.`SubTotal`
        or
        (
            ((snapshotted_data.`SubTotal` is null) and not (source_data.`SubTotal` is null))
            or
            ((not snapshotted_data.`SubTotal` is null) and (source_data.`SubTotal` is null))
        ) or snapshotted_data.`TaxAmt` != source_data.`TaxAmt`
        or
        (
            ((snapshotted_data.`TaxAmt` is null) and not (source_data.`TaxAmt` is null))
            or
            ((not snapshotted_data.`TaxAmt` is null) and (source_data.`TaxAmt` is null))
        ) or snapshotted_data.`Freight` != source_data.`Freight`
        or
        (
            ((snapshotted_data.`Freight` is null) and not (source_data.`Freight` is null))
            or
            ((not snapshotted_data.`Freight` is null) and (source_data.`Freight` is null))
        ) or snapshotted_data.`TotalDue` != source_data.`TotalDue`
        or
        (
            ((snapshotted_data.`TotalDue` is null) and not (source_data.`TotalDue` is null))
            or
            ((not snapshotted_data.`TotalDue` is null) and (source_data.`TotalDue` is null))
        ) or snapshotted_data.`Comment` != source_data.`Comment`
        or
        (
            ((snapshotted_data.`Comment` is null) and not (source_data.`Comment` is null))
            or
            ((not snapshotted_data.`Comment` is null) and (source_data.`Comment` is null))
        ))
            )

        )

    ),

    updates as (

        select
            'update' as dbt_change_type,
            source_data.*,
            snapshotted_data.dbt_scd_id

        from updates_source_data as source_data
        join snapshotted_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

        where (
            (snapshotted_data.`SalesOrderID` != source_data.`SalesOrderID`
        or
        (
            ((snapshotted_data.`SalesOrderID` is null) and not (source_data.`SalesOrderID` is null))
            or
            ((not snapshotted_data.`SalesOrderID` is null) and (source_data.`SalesOrderID` is null))
        ) or snapshotted_data.`RevisionNumber` != source_data.`RevisionNumber`
        or
        (
            ((snapshotted_data.`RevisionNumber` is null) and not (source_data.`RevisionNumber` is null))
            or
            ((not snapshotted_data.`RevisionNumber` is null) and (source_data.`RevisionNumber` is null))
        ) or snapshotted_data.`OrderDate` != source_data.`OrderDate`
        or
        (
            ((snapshotted_data.`OrderDate` is null) and not (source_data.`OrderDate` is null))
            or
            ((not snapshotted_data.`OrderDate` is null) and (source_data.`OrderDate` is null))
        ) or snapshotted_data.`DueDate` != source_data.`DueDate`
        or
        (
            ((snapshotted_data.`DueDate` is null) and not (source_data.`DueDate` is null))
            or
            ((not snapshotted_data.`DueDate` is null) and (source_data.`DueDate` is null))
        ) or snapshotted_data.`ShipDate` != source_data.`ShipDate`
        or
        (
            ((snapshotted_data.`ShipDate` is null) and not (source_data.`ShipDate` is null))
            or
            ((not snapshotted_data.`ShipDate` is null) and (source_data.`ShipDate` is null))
        ) or snapshotted_data.`Status` != source_data.`Status`
        or
        (
            ((snapshotted_data.`Status` is null) and not (source_data.`Status` is null))
            or
            ((not snapshotted_data.`Status` is null) and (source_data.`Status` is null))
        ) or snapshotted_data.`OnlineOrderFlag` != source_data.`OnlineOrderFlag`
        or
        (
            ((snapshotted_data.`OnlineOrderFlag` is null) and not (source_data.`OnlineOrderFlag` is null))
            or
            ((not snapshotted_data.`OnlineOrderFlag` is null) and (source_data.`OnlineOrderFlag` is null))
        ) or snapshotted_data.`SalesOrderNumber` != source_data.`SalesOrderNumber`
        or
        (
            ((snapshotted_data.`SalesOrderNumber` is null) and not (source_data.`SalesOrderNumber` is null))
            or
            ((not snapshotted_data.`SalesOrderNumber` is null) and (source_data.`SalesOrderNumber` is null))
        ) or snapshotted_data.`PurchaseOrderNumber` != source_data.`PurchaseOrderNumber`
        or
        (
            ((snapshotted_data.`PurchaseOrderNumber` is null) and not (source_data.`PurchaseOrderNumber` is null))
            or
            ((not snapshotted_data.`PurchaseOrderNumber` is null) and (source_data.`PurchaseOrderNumber` is null))
        ) or snapshotted_data.`AccountNumber` != source_data.`AccountNumber`
        or
        (
            ((snapshotted_data.`AccountNumber` is null) and not (source_data.`AccountNumber` is null))
            or
            ((not snapshotted_data.`AccountNumber` is null) and (source_data.`AccountNumber` is null))
        ) or snapshotted_data.`CustomerID` != source_data.`CustomerID`
        or
        (
            ((snapshotted_data.`CustomerID` is null) and not (source_data.`CustomerID` is null))
            or
            ((not snapshotted_data.`CustomerID` is null) and (source_data.`CustomerID` is null))
        ) or snapshotted_data.`ShipToAddressID` != source_data.`ShipToAddressID`
        or
        (
            ((snapshotted_data.`ShipToAddressID` is null) and not (source_data.`ShipToAddressID` is null))
            or
            ((not snapshotted_data.`ShipToAddressID` is null) and (source_data.`ShipToAddressID` is null))
        ) or snapshotted_data.`BillToAddressID` != source_data.`BillToAddressID`
        or
        (
            ((snapshotted_data.`BillToAddressID` is null) and not (source_data.`BillToAddressID` is null))
            or
            ((not snapshotted_data.`BillToAddressID` is null) and (source_data.`BillToAddressID` is null))
        ) or snapshotted_data.`ShipMethod` != source_data.`ShipMethod`
        or
        (
            ((snapshotted_data.`ShipMethod` is null) and not (source_data.`ShipMethod` is null))
            or
            ((not snapshotted_data.`ShipMethod` is null) and (source_data.`ShipMethod` is null))
        ) or snapshotted_data.`CreditCardApprovalCode` != source_data.`CreditCardApprovalCode`
        or
        (
            ((snapshotted_data.`CreditCardApprovalCode` is null) and not (source_data.`CreditCardApprovalCode` is null))
            or
            ((not snapshotted_data.`CreditCardApprovalCode` is null) and (source_data.`CreditCardApprovalCode` is null))
        ) or snapshotted_data.`SubTotal` != source_data.`SubTotal`
        or
        (
            ((snapshotted_data.`SubTotal` is null) and not (source_data.`SubTotal` is null))
            or
            ((not snapshotted_data.`SubTotal` is null) and (source_data.`SubTotal` is null))
        ) or snapshotted_data.`TaxAmt` != source_data.`TaxAmt`
        or
        (
            ((snapshotted_data.`TaxAmt` is null) and not (source_data.`TaxAmt` is null))
            or
            ((not snapshotted_data.`TaxAmt` is null) and (source_data.`TaxAmt` is null))
        ) or snapshotted_data.`Freight` != source_data.`Freight`
        or
        (
            ((snapshotted_data.`Freight` is null) and not (source_data.`Freight` is null))
            or
            ((not snapshotted_data.`Freight` is null) and (source_data.`Freight` is null))
        ) or snapshotted_data.`TotalDue` != source_data.`TotalDue`
        or
        (
            ((snapshotted_data.`TotalDue` is null) and not (source_data.`TotalDue` is null))
            or
            ((not snapshotted_data.`TotalDue` is null) and (source_data.`TotalDue` is null))
        ) or snapshotted_data.`Comment` != source_data.`Comment`
        or
        (
            ((snapshotted_data.`Comment` is null) and not (source_data.`Comment` is null))
            or
            ((not snapshotted_data.`Comment` is null) and (source_data.`Comment` is null))
        ))
        )
    )
    ,
    deletes as (

        select
            'delete' as dbt_change_type,
            source_data.*,
            
    current_timestamp()
 as dbt_valid_from,
            
    current_timestamp()
 as dbt_updated_at,
            
    current_timestamp()
 as dbt_valid_to,
            snapshotted_data.dbt_scd_id
        from snapshotted_data
        left join deletes_source_data as source_data
            on 
    
        snapshotted_data.dbt_unique_key = source_data.dbt_unique_key
    

            where 
    
        source_data.dbt_unique_key is null
    

    )

    select * from insertions
    union all
    select * from updates
    union all
    select * from deletes

    ) as __dbt_sbq
    where false
    limit 0

[0m23:47:29.993647 [debug] [Thread-1 (]: SQL status: OK in 0.310 seconds
[0m23:47:29.998882 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=ebf45ea4-00ce-49c8-8b9c-55658d59a218) - Closing
[0m23:47:30.073858 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:47:30.078273 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */
select * from (
        select 
    current_timestamp()
 as dbt_snapshot_time
    ) as __dbt_sbq
    where false
    limit 0

[0m23:47:30.203831 [debug] [Thread-1 (]: SQL status: OK in 0.120 seconds
[0m23:47:30.205569 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=fb8ffd4a-e65e-46ff-9370-621fb59503d7) - Closing
[0m23:47:30.283757 [debug] [Thread-1 (]: Writing runtime sql for node "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:47:30.283757 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:47:30.283757 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */

      merge into `hive_metastore`.`snapshots`.`salesorderheader_snapshot` as DBT_INTERNAL_DEST
    
      using `salesorderheader_snapshot__dbt_tmp` as DBT_INTERNAL_SOURCE
    
    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id
    when matched
     
       and DBT_INTERNAL_DEST.dbt_valid_to is null
     
     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')
        then update
        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to

    when not matched
     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'
        then insert *
    ;

  
[0m23:47:34.797556 [debug] [Thread-1 (]: SQL status: OK in 4.510 seconds
[0m23:47:34.803664 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=872740cb-7c63-4a91-83cf-5c0541fe5273) - Closing
[0m23:47:34.897997 [debug] [Thread-1 (]: Applying DROP to: `salesorderheader_snapshot__dbt_tmp`
[0m23:47:34.897997 [debug] [Thread-1 (]: Using databricks connection "snapshot.medalion_dbt_spark.salesorderheader_snapshot"
[0m23:47:34.897997 [debug] [Thread-1 (]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "snapshot.medalion_dbt_spark.salesorderheader_snapshot"} */
DROP VIEW IF EXISTS `salesorderheader_snapshot__dbt_tmp`
[0m23:47:35.023611 [debug] [Thread-1 (]: SQL status: OK in 0.130 seconds
[0m23:47:35.023611 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=660f7728-b53b-4865-9597-8ecff263d840, command-id=68451602-a8bc-4738-b0e6-b22d0cc12d1f) - Closing
[0m23:47:35.094359 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '293dbbac-b276-49c5-8595-c452e7009c54', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001F4D1F965C0>]}
[0m23:47:35.094359 [info ] [Thread-1 (]: 7 of 7 OK snapshotted snapshots.salesorderheader_snapshot ...................... [[32mOK[0m in 9.27s]
[0m23:47:35.094359 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.salesorderheader_snapshot
[0m23:47:35.094359 [debug] [MainThread]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=master, idle-time=63.79054927825928s, language=None, compute-name=) - Recreating due to idleness
[0m23:47:35.094359 [debug] [MainThread]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=master, idle-time=0s, language=None, compute-name=) - Reset connection handle
[0m23:47:35.101776 [debug] [MainThread]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=master, idle-time=0s, language=None, compute-name=) - Reusing connection previously named master
[0m23:47:35.101776 [debug] [MainThread]: Connection 'master' was properly closed.
[0m23:47:35.102995 [debug] [MainThread]: Connection 'list_hive_metastore' was properly closed.
[0m23:47:35.103588 [debug] [MainThread]: On list_hive_metastore: Close
[0m23:47:35.103588 [debug] [MainThread]: Databricks adapter: Connection(session-id=fb0968ee-774b-4056-a06d-3ab2e77d04be) - Closing
[0m23:47:35.174873 [debug] [MainThread]: Connection 'list_hive_metastore_snapshots' was properly closed.
[0m23:47:35.178235 [debug] [MainThread]: On list_hive_metastore_snapshots: Close
[0m23:47:35.178235 [debug] [MainThread]: Databricks adapter: Connection(session-id=0b7c6548-8fd3-4955-8e2b-821c99c6ec1a) - Closing
[0m23:47:35.254479 [debug] [MainThread]: Connection 'snapshot.medalion_dbt_spark.salesorderheader_snapshot' was properly closed.
[0m23:47:35.259018 [debug] [MainThread]: On snapshot.medalion_dbt_spark.salesorderheader_snapshot: Close
[0m23:47:35.260842 [debug] [MainThread]: Databricks adapter: Connection(session-id=660f7728-b53b-4865-9597-8ecff263d840) - Closing
[0m23:47:35.335694 [info ] [MainThread]: 
[0m23:47:35.337789 [info ] [MainThread]: Finished running 7 snapshots in 0 hours 1 minutes and 6.40 seconds (66.40s).
[0m23:47:35.348201 [debug] [MainThread]: Command end result
[0m23:47:35.388188 [debug] [MainThread]: Wrote artifact WritableManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\manifest.json
[0m23:47:35.391185 [debug] [MainThread]: Wrote artifact SemanticManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\semantic_manifest.json
[0m23:47:35.399211 [debug] [MainThread]: Wrote artifact RunExecutionResult to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\run_results.json
[0m23:47:35.399211 [info ] [MainThread]: 
[0m23:47:35.400206 [info ] [MainThread]: [32mCompleted successfully[0m
[0m23:47:35.401208 [info ] [MainThread]: 
[0m23:47:35.401208 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=7
[0m23:47:35.401208 [debug] [MainThread]: Command `dbt snapshot` succeeded at 23:47:35.401208 after 70.44 seconds
[0m23:47:35.403821 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001F4B55F65F0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001F4B5938670>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001F4D1B5CE50>]}
[0m23:47:35.403821 [debug] [MainThread]: Flushing usage events
[0m23:47:36.957890 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m23:59:34.180374 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002C33FBC6650>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002C33ED8ECE0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002C33ED8EB00>]}


============================== 23:59:34.192560 | 3ec02ae8-27e4-4841-9687-3848d7c657ee ==============================
[0m23:59:34.192560 [info ] [MainThread]: Running with dbt=1.10.1
[0m23:59:34.194065 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': 'C:\\Users\\M S I\\.dbt', 'version_check': 'True', 'fail_fast': 'False', 'log_path': 'D:\\Academic-Project\\Portofolio Data Engineer\\medalion_dbt_spark\\logs', 'debug': 'False', 'warn_error': 'None', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'introspect': 'True', 'static_parser': 'True', 'invocation_command': 'dbt run', 'target_path': 'None', 'log_format': 'default', 'send_anonymous_usage_stats': 'True'}
[0m23:59:35.528214 [debug] [MainThread]: Spark adapter: Setting pyhive.hive logging to ERROR
[0m23:59:35.529217 [debug] [MainThread]: Spark adapter: Setting thrift.transport logging to ERROR
[0m23:59:35.530219 [debug] [MainThread]: Spark adapter: Setting thrift.protocol logging to ERROR
[0m23:59:37.196875 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '3ec02ae8-27e4-4841-9687-3848d7c657ee', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002C340ECD960>]}
[0m23:59:37.290156 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '3ec02ae8-27e4-4841-9687-3848d7c657ee', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002C341673F10>]}
[0m23:59:37.292153 [info ] [MainThread]: Registered adapter: databricks=1.10.3
[0m23:59:37.777389 [debug] [MainThread]: checksum: 2c026f85d539c10c69b093157526ce33d0bf5533489eafb07fe5172434ec7740, vars: {}, profile: , target: , version: 1.10.1
[0m23:59:38.426801 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 6 files added, 0 files changed.
[0m23:59:38.427797 [debug] [MainThread]: Partial parsing: added file: medalion_dbt_spark://models\marts\product\dim_product.sql
[0m23:59:38.429300 [debug] [MainThread]: Partial parsing: added file: medalion_dbt_spark://models\marts\customer\dim_customer.yml
[0m23:59:38.430306 [debug] [MainThread]: Partial parsing: added file: medalion_dbt_spark://models\marts\sales\sales.yml
[0m23:59:38.431307 [debug] [MainThread]: Partial parsing: added file: medalion_dbt_spark://models\marts\product\dim_product.yml
[0m23:59:38.432306 [debug] [MainThread]: Partial parsing: added file: medalion_dbt_spark://models\marts\customer\dim_customer.sql
[0m23:59:38.434822 [debug] [MainThread]: Partial parsing: added file: medalion_dbt_spark://models\marts\sales\sales.sql
[0m23:59:38.757712 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'dim_customers' in the 'models' section of file 'models\marts\customer\dim_customer.yml'
[0m23:59:38.884709 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'dim_sales' in the 'models' section of file 'models\marts\sales\sales.yml'
[0m23:59:38.930485 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'dim_products' in the 'models' section of file 'models\marts\product\dim_product.yml'
[0m23:59:38.938652 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.unique_dim_customers_customer_sk.22a014df62' (models\marts\customer\dim_customer.yml) depends on a node named 'dim_customers' in package '' which was not found
[0m23:59:38.939709 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_customers_customer_sk.8ae5836863' (models\marts\customer\dim_customer.yml) depends on a node named 'dim_customers' in package '' which was not found
[0m23:59:38.940788 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_customers_customerid.209fbdda85' (models\marts\customer\dim_customer.yml) depends on a node named 'dim_customers' in package '' which was not found
[0m23:59:38.941796 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_customers_AddressId.86b771f63e' (models\marts\customer\dim_customer.yml) depends on a node named 'dim_customers' in package '' which was not found
[0m23:59:38.942797 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.unique_dim_sales_saleOrderID.810c5f247c' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m23:59:38.943798 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_saleOrderID.48ce11e7f3' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m23:59:38.944862 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.unique_dim_sales_saleOrderDetailID.343b942405' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m23:59:38.945864 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_saleOrderDetailID.a60664de3a' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m23:59:38.946864 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_orderQty.66af966596' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m23:59:38.946864 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_productID.cbf6d34890' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m23:59:38.947864 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_unitPrice.3545b5473a' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m23:59:38.948863 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_lineTotal.d55bca27f8' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m23:59:38.951871 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_name.4c7b961f77' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m23:59:38.952871 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_productNumber.3a23a94ddd' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m23:59:38.953870 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_standardCost.d3f58be9a3' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m23:59:38.955066 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_listPrice.4ee58b9e3f' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m23:59:38.956066 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_sellStartDate.b44c8ea118' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m23:59:38.957073 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_orderDate.6f6f720ec3' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m23:59:38.959291 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_customerID.60b0993af5' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m23:59:38.960620 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_subTotal.bfeb62a487' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m23:59:38.961591 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_taxAmt.94cff67d6a' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m23:59:38.962600 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_freight.ca13e04131' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m23:59:38.964119 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_totalDue.920571e023' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m23:59:38.966129 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.unique_dim_products_product_sk.8f20ac7c5b' (models\marts\product\dim_product.yml) depends on a node named 'dim_products' in package '' which was not found
[0m23:59:38.967399 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_products_product_sk.2a2df3e1b9' (models\marts\product\dim_product.yml) depends on a node named 'dim_products' in package '' which was not found
[0m23:59:38.968398 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_products_product_name.991aec73f3' (models\marts\product\dim_product.yml) depends on a node named 'dim_products' in package '' which was not found
[0m23:59:38.969400 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_products_sellstartdate.f97a265a0f' (models\marts\product\dim_product.yml) depends on a node named 'dim_products' in package '' which was not found
[0m23:59:39.073810 [warn ] [MainThread]: [[33mWARNING[0m]: Configuration paths exist in your dbt_project.yml file which do not apply to any resources.
There are 1 unused configuration paths:
- models.medalion_dbt_spark.example
[0m23:59:39.091599 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '3ec02ae8-27e4-4841-9687-3848d7c657ee', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002C35D2D0130>]}
[0m23:59:39.220252 [debug] [MainThread]: Wrote artifact WritableManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\manifest.json
[0m23:59:39.225155 [debug] [MainThread]: Wrote artifact SemanticManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\semantic_manifest.json
[0m23:59:39.263173 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '3ec02ae8-27e4-4841-9687-3848d7c657ee', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002C35B936AA0>]}
[0m23:59:39.263691 [info ] [MainThread]: Found 7 snapshots, 3 models, 9 sources, 671 macros
[0m23:59:39.264709 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '3ec02ae8-27e4-4841-9687-3848d7c657ee', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002C35B935E70>]}
[0m23:59:39.266707 [info ] [MainThread]: 
[0m23:59:39.267706 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m23:59:39.268700 [info ] [MainThread]: 
[0m23:59:39.269701 [debug] [MainThread]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=master, idle-time=0s, language=None, compute-name=) - Creating connection
[0m23:59:39.270709 [debug] [MainThread]: Acquiring new databricks connection 'master'
[0m23:59:39.281953 [debug] [ThreadPool]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=list_hive_metastore, idle-time=0s, language=None, compute-name=) - Creating connection
[0m23:59:39.283958 [debug] [ThreadPool]: Acquiring new databricks connection 'list_hive_metastore'
[0m23:59:39.286053 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore"
[0m23:59:39.288937 [debug] [ThreadPool]: On list_hive_metastore: GetSchemas(database=hive_metastore, schema=None)
[0m23:59:39.291958 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m23:59:39.885909 [debug] [ThreadPool]: Databricks adapter: Connection(session-id=75d81afa-3317-4a10-a1c3-3622a1225e9c) - Created
[0m23:59:40.506808 [debug] [ThreadPool]: SQL status: OK in 1.210 seconds
[0m23:59:40.508806 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=75d81afa-3317-4a10-a1c3-3622a1225e9c, command-id=c3b3c68b-e1dc-46aa-9bd7-6bb9f091e7a9) - Closing
[0m23:59:40.683957 [debug] [ThreadPool]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=list_hive_metastore_snapshots, idle-time=0s, language=None, compute-name=) - Creating connection
[0m23:59:40.685842 [debug] [ThreadPool]: Acquiring new databricks connection 'list_hive_metastore_snapshots'
[0m23:59:40.685842 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_snapshots"
[0m23:59:40.687045 [debug] [ThreadPool]: On list_hive_metastore_snapshots: GetTables(database=hive_metastore, schema=snapshots)
[0m23:59:40.688226 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m23:59:40.967085 [debug] [ThreadPool]: Databricks adapter: Connection(session-id=fa2796fd-6821-41f2-acb1-2a90fd21ef38) - Created
[0m23:59:41.114694 [debug] [ThreadPool]: SQL status: OK in 0.430 seconds
[0m23:59:41.122650 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=fa2796fd-6821-41f2-acb1-2a90fd21ef38, command-id=dae118e6-ba87-4914-8572-08552503dc86) - Closing
[0m23:59:41.268751 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_snapshots"
[0m23:59:41.268751 [debug] [ThreadPool]: On list_hive_metastore_snapshots: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "list_hive_metastore_snapshots"} */

    
SELECT current_catalog()

  
[0m23:59:41.522225 [debug] [ThreadPool]: SQL status: OK in 0.250 seconds
[0m23:59:41.535814 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=fa2796fd-6821-41f2-acb1-2a90fd21ef38, command-id=6741ece2-095b-46b7-9e8a-efa609b2eff8) - Closing
[0m23:59:41.676594 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_snapshots"
[0m23:59:41.678580 [debug] [ThreadPool]: On list_hive_metastore_snapshots: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "list_hive_metastore_snapshots"} */

    
SHOW VIEWS IN `hive_metastore`.`snapshots`

  
[0m23:59:41.964695 [debug] [ThreadPool]: SQL status: OK in 0.290 seconds
[0m23:59:41.969230 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=fa2796fd-6821-41f2-acb1-2a90fd21ef38, command-id=59ab8b8a-d4db-4454-81da-8b478a5fa8e4) - Closing
[0m23:59:42.072907 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_hive_metastore_snapshots, now list_hive_metastore_saleslt)
[0m23:59:42.075295 [debug] [ThreadPool]: Databricks adapter: DatabricksDBTConnection(session-id=fa2796fd-6821-41f2-acb1-2a90fd21ef38, name=list_hive_metastore_saleslt, idle-time=0.0023882389068603516s, language=None, compute-name=) - Reusing connection previously named list_hive_metastore_snapshots
[0m23:59:42.075295 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_saleslt"
[0m23:59:42.076318 [debug] [ThreadPool]: On list_hive_metastore_saleslt: GetTables(database=hive_metastore, schema=saleslt)
[0m23:59:42.246682 [debug] [ThreadPool]: SQL status: OK in 0.170 seconds
[0m23:59:42.249208 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=fa2796fd-6821-41f2-acb1-2a90fd21ef38, command-id=b32b2ab1-f593-4064-8558-6f39f1a0dd58) - Closing
[0m23:59:42.326990 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_saleslt"
[0m23:59:42.327990 [debug] [ThreadPool]: On list_hive_metastore_saleslt: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "list_hive_metastore_saleslt"} */

    
SELECT current_catalog()

  
[0m23:59:42.471600 [debug] [ThreadPool]: SQL status: OK in 0.140 seconds
[0m23:59:42.478271 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=fa2796fd-6821-41f2-acb1-2a90fd21ef38, command-id=08751f73-595a-4565-a593-1c7919300203) - Closing
[0m23:59:42.564868 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_saleslt"
[0m23:59:42.565881 [debug] [ThreadPool]: On list_hive_metastore_saleslt: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "list_hive_metastore_saleslt"} */

    
SHOW VIEWS IN `hive_metastore`.`saleslt`

  
[0m23:59:42.849206 [debug] [ThreadPool]: SQL status: OK in 0.280 seconds
[0m23:59:42.852195 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=fa2796fd-6821-41f2-acb1-2a90fd21ef38, command-id=e6994639-0e57-44d3-b403-2d35d5405709) - Closing
[0m23:59:42.926863 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '3ec02ae8-27e4-4841-9687-3848d7c657ee', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002C33EAA1210>]}
[0m23:59:42.934923 [debug] [Thread-1 (]: Began running node model.medalion_dbt_spark.dim_customer
[0m23:59:42.935918 [info ] [Thread-1 (]: 1 of 3 START sql table model saleslt.dim_customer .............................. [RUN]
[0m23:59:42.937110 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=model.medalion_dbt_spark.dim_customer, idle-time=0s, language=None, compute-name=) - Creating connection
[0m23:59:42.937110 [debug] [Thread-1 (]: Acquiring new databricks connection 'model.medalion_dbt_spark.dim_customer'
[0m23:59:42.937110 [debug] [Thread-1 (]: Began compiling node model.medalion_dbt_spark.dim_customer
[0m23:59:42.957332 [debug] [Thread-1 (]: Writing injected SQL for node "model.medalion_dbt_spark.dim_customer"
[0m23:59:42.964259 [debug] [Thread-1 (]: Began executing node model.medalion_dbt_spark.dim_customer
[0m23:59:43.003019 [debug] [Thread-1 (]: MATERIALIZING TABLE
[0m23:59:43.007549 [warn ] [Thread-1 (]: [[33mWARNING[0m]: Use revamped materializations based on separating create and insert.  This allows more performant column comments, as well as new column features.
You may opt into the new behavior sooner by setting `flags.use_materialization_v2` to `True` in `dbt_project.yml`.
Visit https://docs.getdbt.com/reference/global-configs/behavior-changes for more information.
[0m23:59:43.010570 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'BehaviorChangeEvent', 'label': '3ec02ae8-27e4-4841-9687-3848d7c657ee', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002C35D346380>]}
[0m23:59:43.099681 [debug] [Thread-1 (]: Writing runtime sql for node "model.medalion_dbt_spark.dim_customer"
[0m23:59:43.108591 [debug] [Thread-1 (]: Using databricks connection "model.medalion_dbt_spark.dim_customer"
[0m23:59:43.113003 [debug] [Thread-1 (]: On model.medalion_dbt_spark.dim_customer: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "model.medalion_dbt_spark.dim_customer"} */

  
    
        create or replace table `hive_metastore`.`saleslt`.`dim_customer`
      
      
  using delta
      
      
      
      
      location '/mnt/gold/customers/dim_customer'
      
      
      as
      with address_snapshot as (
    select
        AddressID,
        AddressLine1,
        AddressLine2,
        City,
        StateProvince,
        CountryRegion,
        PostalCode
    from `hive_metastore`.`snapshots`.`address_snapshot` where dbt_valid_to is null
)

, customeraddress_snapshot as (
    select
        CustomerId,
        AddressId,
        AddressType
    from `hive_metastore`.`snapshots`.`customeraddress_snapshot` where dbt_valid_to is null
)

, customer_snapshot as (
    select
        CustomerId,
        concat(ifnull(FirstName,' '),' ',ifnull(MiddleName,' '),' ',ifnull(LastName,' ')) as FullName
    from `hive_metastore`.`snapshots`.`customer_snapshot` where dbt_valid_to is null
)

, transformed as (
    select
    row_number() over (order by customer_snapshot.customerid) as customer_sk, -- auto-incremental surrogate key
    customer_snapshot.CustomerId,
    customer_snapshot.fullname,
    customeraddress_snapshot.AddressID,
    customeraddress_snapshot.AddressType,
    address_snapshot.AddressLine1,
    address_snapshot.City,
    address_snapshot.StateProvince,
    address_snapshot.CountryRegion,
    address_snapshot.PostalCode
    from customer_snapshot
    inner join customeraddress_snapshot on customer_snapshot.CustomerId = customeraddress_snapshot.CustomerId
    inner join address_snapshot on customeraddress_snapshot.AddressID = address_snapshot.AddressID
)
select *
from transformed
  
[0m23:59:43.115184 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m23:59:43.342611 [debug] [Thread-1 (]: Databricks adapter: Connection(session-id=bf3fddde-c2cb-4c32-b62c-81839d2b31a0) - Created
[0m23:59:49.412720 [debug] [Thread-1 (]: SQL status: OK in 6.300 seconds
[0m23:59:49.419082 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=bf3fddde-c2cb-4c32-b62c-81839d2b31a0, command-id=fcbc25a3-6e34-444d-928c-fbc61cb8e239) - Closing
[0m23:59:49.618468 [warn ] [Thread-1 (]: Databricks adapter: Cursor(session-id=bf3fddde-c2cb-4c32-b62c-81839d2b31a0, command-id=None) - Exception while closing: Invalid OperationHandle: OperationHandle [opType=EXECUTE_STATEMENT, getHandleIdentifier()=fcbc25a3-6e34-444d-928c-fbc61cb8e239]
[0m23:59:49.631975 [debug] [Thread-1 (]: Applying tags to relation None []
[0m23:59:49.664027 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3ec02ae8-27e4-4841-9687-3848d7c657ee', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002C35D495C60>]}
[0m23:59:49.667032 [info ] [Thread-1 (]: 1 of 3 OK created sql table model saleslt.dim_customer ......................... [[32mOK[0m in 6.72s]
[0m23:59:49.669538 [debug] [Thread-1 (]: Finished running node model.medalion_dbt_spark.dim_customer
[0m23:59:49.669538 [debug] [Thread-1 (]: Began running node model.medalion_dbt_spark.dim_product
[0m23:59:49.670543 [info ] [Thread-1 (]: 2 of 3 START sql table model saleslt.dim_product ............................... [RUN]
[0m23:59:49.671542 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.medalion_dbt_spark.dim_customer, now model.medalion_dbt_spark.dim_product)
[0m23:59:49.672545 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=bf3fddde-c2cb-4c32-b62c-81839d2b31a0, name=model.medalion_dbt_spark.dim_product, idle-time=0.0112152099609375s, language=sql, compute-name=) - Reusing connection previously named model.medalion_dbt_spark.dim_customer
[0m23:59:49.674049 [debug] [Thread-1 (]: Began compiling node model.medalion_dbt_spark.dim_product
[0m23:59:49.679055 [debug] [Thread-1 (]: Writing injected SQL for node "model.medalion_dbt_spark.dim_product"
[0m23:59:49.682055 [debug] [Thread-1 (]: Began executing node model.medalion_dbt_spark.dim_product
[0m23:59:49.686536 [debug] [Thread-1 (]: MATERIALIZING TABLE
[0m23:59:49.689934 [debug] [Thread-1 (]: Writing runtime sql for node "model.medalion_dbt_spark.dim_product"
[0m23:59:49.692485 [debug] [Thread-1 (]: Using databricks connection "model.medalion_dbt_spark.dim_product"
[0m23:59:49.696220 [debug] [Thread-1 (]: On model.medalion_dbt_spark.dim_product: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "model.medalion_dbt_spark.dim_product"} */

  
    
        create or replace table `hive_metastore`.`saleslt`.`dim_product`
      
      
  using delta
      
      
      
      
      location '/mnt/gold/products/dim_product'
      
      
      as
      with product_snapshot as (
    select
        productId,
        name,
        standardCost,
        listPrice,
        size,
        weight,
        productcategoryid,
        productmodelid,
        sellstartdate,
        sellenddate,
        discontinueddate
    from `hive_metastore`.`snapshots`.`product_snapshot`
    where dbt_valid_to is null
),

product_model_snapshot as (
    select
        productmodelid,
        name,
        CatalogDescription,
        row_number() over (order by name) as model_id
    from `hive_metastore`.`snapshots`.`productmodel_snapshot`
    where dbt_valid_to is null
),


transformed as (
    select
        row_number() over (order by p.productId) as product_sk,
        p.name as product_name,
        p.standardCost,
        p.listPrice,
        p.size,
        p.weight,
        pm.name as model,
        pm.CatalogDescription as description,
        p.sellstartdate,
        p.sellenddate,
        p.discontinueddate
    from product_snapshot p
    left join product_model_snapshot pm on p.productmodelid = pm.productmodelid
)

select * from transformed
  
[0m23:59:54.259726 [debug] [Thread-1 (]: SQL status: OK in 4.560 seconds
[0m23:59:54.262259 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=bf3fddde-c2cb-4c32-b62c-81839d2b31a0, command-id=d664a50e-c713-43c8-b31f-b9655c4de7f8) - Closing
[0m23:59:54.332948 [debug] [Thread-1 (]: Applying tags to relation None []
[0m23:59:54.337028 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3ec02ae8-27e4-4841-9687-3848d7c657ee', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002C33FA6AEF0>]}
[0m23:59:54.338027 [info ] [Thread-1 (]: 2 of 3 OK created sql table model saleslt.dim_product .......................... [[32mOK[0m in 4.67s]
[0m23:59:54.341035 [debug] [Thread-1 (]: Finished running node model.medalion_dbt_spark.dim_product
[0m23:59:54.342029 [debug] [Thread-1 (]: Began running node model.medalion_dbt_spark.sales
[0m23:59:54.343029 [info ] [Thread-1 (]: 3 of 3 START sql table model saleslt.sales ..................................... [RUN]
[0m23:59:54.344028 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.medalion_dbt_spark.dim_product, now model.medalion_dbt_spark.sales)
[0m23:59:54.345070 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=bf3fddde-c2cb-4c32-b62c-81839d2b31a0, name=model.medalion_dbt_spark.sales, idle-time=0.007000446319580078s, language=sql, compute-name=) - Reusing connection previously named model.medalion_dbt_spark.dim_product
[0m23:59:54.346072 [debug] [Thread-1 (]: Began compiling node model.medalion_dbt_spark.sales
[0m23:59:54.358595 [debug] [Thread-1 (]: Writing injected SQL for node "model.medalion_dbt_spark.sales"
[0m23:59:54.369114 [debug] [Thread-1 (]: Began executing node model.medalion_dbt_spark.sales
[0m23:59:54.377165 [debug] [Thread-1 (]: MATERIALIZING TABLE
[0m23:59:54.384193 [debug] [Thread-1 (]: Writing runtime sql for node "model.medalion_dbt_spark.sales"
[0m23:59:54.390499 [debug] [Thread-1 (]: Using databricks connection "model.medalion_dbt_spark.sales"
[0m23:59:54.392496 [debug] [Thread-1 (]: On model.medalion_dbt_spark.sales: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "model.medalion_dbt_spark.sales"} */

  
    
        create or replace table `hive_metastore`.`saleslt`.`sales`
      
      
  using delta
      
      
      
      
      location '/mnt/gold/sales/sales'
      
      
      as
      with salesorderdetail_snapshot as (
    SELECT
        SalesOrderID,
        SalesOrderDetailID,
        OrderQty,
        ProductID,
        UnitPrice,
        UnitPriceDiscount,
        LineTotal
    FROM `hive_metastore`.`snapshots`.`salesorderdetail_snapshot`
),

product_snapshot as (
    SELECT
        ProductID,
        Name,
        ProductNumber,
        Color,
        StandardCost,
        ListPrice,
        Size,
        Weight,
        SellStartDate,
        SellEndDate,
        DiscontinuedDate,
        ThumbNailPhoto,
        ThumbnailPhotoFileName
    FROM `hive_metastore`.`saleslt`.`product`
),

saleorderheader_snapshot as (
    SELECT
        SalesOrderID,
        RevisionNumber,
        OrderDate,
        DueDate,
        ShipDate,
        Status,
        OnlineOrderFlag,
        SalesOrderNumber,
        PurchaseOrderNumber,
        AccountNumber,
        CustomerID,
        ShipToAddressID,
        BillToAddressID,
        ShipMethod,
        CreditCardApprovalCode,
        SubTotal,
        TaxAmt,
        Freight,
        TotalDue,
        Comment,
        row_number() over (partition by SalesOrderID order by SalesOrderID) as row_num
    FROM `hive_metastore`.`saleslt`.`salesorderheader`
),

transformed as (
    select
        sod.SalesOrderID,
        sod.SalesOrderDetailID,
        sod.OrderQty,
        sod.ProductID,
        sod.UnitPrice,
        sod.UnitPriceDiscount,
        sod.LineTotal,
        p.Name,
        p.ProductNumber,
        p.Color,
        p.StandardCost,
        p.ListPrice,
        p.Size,
        p.Weight,
        p.SellStartDate,
        p.SellEndDate,
        p.DiscontinuedDate,
        p.ThumbNailPhoto,
        p.ThumbnailPhotoFileName,
        soh.RevisionNumber,
        soh.OrderDate,
        soh.DueDate,
        soh.ShipDate,
        soh.Status,
        soh.OnlineOrderFlag,
        soh.SalesOrderNumber,
        soh.PurchaseOrderNumber,
        soh.AccountNumber,
        soh.CustomerID,
        soh.ShipToAddressID,
        soh.BillToAddressID,
        soh.ShipMethod,
        soh.CreditCardApprovalCode,
        soh.SubTotal,
        soh.TaxAmt,
        soh.Freight,
        soh.TotalDue,
        soh.Comment
    from salesorderdetail_snapshot sod
    left join product_snapshot p on sod.ProductID = p.ProductID
    left join saleorderheader_snapshot soh on sod.SalesOrderID = soh.SalesOrderID
)

select * from transformed
  
[0m23:59:59.965329 [debug] [Thread-1 (]: SQL status: OK in 5.570 seconds
[0m23:59:59.965329 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=bf3fddde-c2cb-4c32-b62c-81839d2b31a0, command-id=e98d98e8-ceb9-4b58-94a2-b34748370461) - Closing
[0m00:00:00.164998 [warn ] [Thread-1 (]: Databricks adapter: Cursor(session-id=bf3fddde-c2cb-4c32-b62c-81839d2b31a0, command-id=None) - Exception while closing: Invalid OperationHandle: OperationHandle [opType=EXECUTE_STATEMENT, getHandleIdentifier()=e98d98e8-ceb9-4b58-94a2-b34748370461]
[0m00:00:00.167008 [debug] [Thread-1 (]: Applying tags to relation None []
[0m00:00:00.169007 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '3ec02ae8-27e4-4841-9687-3848d7c657ee', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002C35D51C8B0>]}
[0m00:00:00.170002 [info ] [Thread-1 (]: 3 of 3 OK created sql table model saleslt.sales ................................ [[32mOK[0m in 5.82s]
[0m00:00:00.171999 [debug] [Thread-1 (]: Finished running node model.medalion_dbt_spark.sales
[0m00:00:00.174012 [debug] [MainThread]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=master, idle-time=17.245133876800537s, language=None, compute-name=) - Reusing connection previously named master
[0m00:00:00.176536 [debug] [MainThread]: Connection 'master' was properly closed.
[0m00:00:00.177540 [debug] [MainThread]: Connection 'list_hive_metastore' was properly closed.
[0m00:00:00.178538 [debug] [MainThread]: On list_hive_metastore: Close
[0m00:00:00.178538 [debug] [MainThread]: Databricks adapter: Connection(session-id=75d81afa-3317-4a10-a1c3-3622a1225e9c) - Closing
[0m00:00:00.284049 [debug] [MainThread]: Connection 'list_hive_metastore_saleslt' was properly closed.
[0m00:00:00.285491 [debug] [MainThread]: On list_hive_metastore_saleslt: Close
[0m00:00:00.286502 [debug] [MainThread]: Databricks adapter: Connection(session-id=fa2796fd-6821-41f2-acb1-2a90fd21ef38) - Closing
[0m00:00:00.376028 [debug] [MainThread]: Connection 'model.medalion_dbt_spark.sales' was properly closed.
[0m00:00:00.378024 [debug] [MainThread]: On model.medalion_dbt_spark.sales: Close
[0m00:00:00.378024 [debug] [MainThread]: Databricks adapter: Connection(session-id=bf3fddde-c2cb-4c32-b62c-81839d2b31a0) - Closing
[0m00:00:00.468063 [info ] [MainThread]: 
[0m00:00:00.470063 [info ] [MainThread]: Finished running 3 table models in 0 hours 0 minutes and 21.20 seconds (21.20s).
[0m00:00:00.472065 [debug] [MainThread]: Command end result
[0m00:00:00.542234 [debug] [MainThread]: Wrote artifact WritableManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\manifest.json
[0m00:00:00.548755 [debug] [MainThread]: Wrote artifact SemanticManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\semantic_manifest.json
[0m00:00:00.562527 [debug] [MainThread]: Wrote artifact RunExecutionResult to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\run_results.json
[0m00:00:00.564035 [info ] [MainThread]: 
[0m00:00:00.565044 [info ] [MainThread]: [32mCompleted successfully[0m
[0m00:00:00.566044 [info ] [MainThread]: 
[0m00:00:00.567044 [info ] [MainThread]: Done. PASS=3 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=3
[0m00:00:00.570387 [debug] [MainThread]: Command `dbt run` succeeded at 00:00:00.570387 after 26.65 seconds
[0m00:00:00.572378 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002C33FBC6650>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002C340EDBDC0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002C341673F10>]}
[0m00:00:00.573890 [debug] [MainThread]: Flushing usage events
[0m00:00:01.724661 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m00:05:13.463969 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002A1FE1265F0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002A1FD2F2F20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002A1FD2F2D40>]}


============================== 00:05:13.463969 | f37edf68-6084-420c-9007-45b3124fcb7a ==============================
[0m00:05:13.463969 [info ] [MainThread]: Running with dbt=1.10.1
[0m00:05:13.463969 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'version_check': 'True', 'fail_fast': 'False', 'log_path': 'D:\\Academic-Project\\Portofolio Data Engineer\\medalion_dbt_spark\\logs', 'debug': 'False', 'profiles_dir': 'C:\\Users\\M S I\\.dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'introspect': 'True', 'invocation_command': 'dbt docs generate', 'static_parser': 'True', 'target_path': 'None', 'log_format': 'default', 'send_anonymous_usage_stats': 'True'}
[0m00:05:14.395200 [debug] [MainThread]: Spark adapter: Setting pyhive.hive logging to ERROR
[0m00:05:14.399132 [debug] [MainThread]: Spark adapter: Setting thrift.transport logging to ERROR
[0m00:05:14.399132 [debug] [MainThread]: Spark adapter: Setting thrift.protocol logging to ERROR
[0m00:05:15.723965 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'f37edf68-6084-420c-9007-45b3124fcb7a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002A1FD2F3610>]}
[0m00:05:15.784255 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'f37edf68-6084-420c-9007-45b3124fcb7a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002A1FD2F1A20>]}
[0m00:05:15.784255 [info ] [MainThread]: Registered adapter: databricks=1.10.3
[0m00:05:16.181650 [debug] [MainThread]: checksum: 2c026f85d539c10c69b093157526ce33d0bf5533489eafb07fe5172434ec7740, vars: {}, profile: , target: , version: 1.10.1
[0m00:05:16.444010 [info ] [MainThread]: Unable to do partial parsing because a project config has changed
[0m00:05:16.444010 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': 'f37edf68-6084-420c-9007-45b3124fcb7a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002A1FF43B340>]}
[0m00:05:18.203994 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'dim_customers' in the 'models' section of file 'models\marts\customer\dim_customer.yml'
[0m00:05:18.324224 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'dim_products' in the 'models' section of file 'models\marts\product\dim_product.yml'
[0m00:05:18.354124 [warn ] [MainThread]: [[33mWARNING[0m]: Did not find matching node for patch with name 'dim_sales' in the 'models' section of file 'models\marts\sales\sales.yml'
[0m00:05:18.484048 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.unique_dim_customers_customer_sk.22a014df62' (models\marts\customer\dim_customer.yml) depends on a node named 'dim_customers' in package '' which was not found
[0m00:05:18.484048 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_customers_customer_sk.8ae5836863' (models\marts\customer\dim_customer.yml) depends on a node named 'dim_customers' in package '' which was not found
[0m00:05:18.484048 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_customers_customerid.209fbdda85' (models\marts\customer\dim_customer.yml) depends on a node named 'dim_customers' in package '' which was not found
[0m00:05:18.488494 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_customers_AddressId.86b771f63e' (models\marts\customer\dim_customer.yml) depends on a node named 'dim_customers' in package '' which was not found
[0m00:05:18.489381 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.unique_dim_products_product_sk.8f20ac7c5b' (models\marts\product\dim_product.yml) depends on a node named 'dim_products' in package '' which was not found
[0m00:05:18.490185 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_products_product_sk.2a2df3e1b9' (models\marts\product\dim_product.yml) depends on a node named 'dim_products' in package '' which was not found
[0m00:05:18.490185 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_products_product_name.991aec73f3' (models\marts\product\dim_product.yml) depends on a node named 'dim_products' in package '' which was not found
[0m00:05:18.490185 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_products_sellstartdate.f97a265a0f' (models\marts\product\dim_product.yml) depends on a node named 'dim_products' in package '' which was not found
[0m00:05:18.492666 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.unique_dim_sales_saleOrderID.810c5f247c' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m00:05:18.492666 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_saleOrderID.48ce11e7f3' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m00:05:18.494171 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.unique_dim_sales_saleOrderDetailID.343b942405' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m00:05:18.494678 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_saleOrderDetailID.a60664de3a' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m00:05:18.495709 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_orderQty.66af966596' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m00:05:18.495709 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_productID.cbf6d34890' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m00:05:18.495709 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_unitPrice.3545b5473a' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m00:05:18.495709 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_lineTotal.d55bca27f8' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m00:05:18.495709 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_name.4c7b961f77' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m00:05:18.499924 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_productNumber.3a23a94ddd' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m00:05:18.499924 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_standardCost.d3f58be9a3' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m00:05:18.499924 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_listPrice.4ee58b9e3f' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m00:05:18.499924 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_sellStartDate.b44c8ea118' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m00:05:18.499924 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_orderDate.6f6f720ec3' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m00:05:18.499924 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_customerID.60b0993af5' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m00:05:18.504014 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_subTotal.bfeb62a487' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m00:05:18.504014 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_taxAmt.94cff67d6a' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m00:05:18.505762 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_freight.ca13e04131' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m00:05:18.505762 [warn ] [MainThread]: [[33mWARNING[0m]: Test 'test.medalion_dbt_spark.not_null_dim_sales_totalDue.920571e023' (models\marts\sales\sales.yml) depends on a node named 'dim_sales' in package '' which was not found
[0m00:05:18.719033 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'f37edf68-6084-420c-9007-45b3124fcb7a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002A19B6D5B10>]}
[0m00:05:18.753896 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'f37edf68-6084-420c-9007-45b3124fcb7a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002A19B802200>]}
[0m00:05:18.753896 [info ] [MainThread]: Found 3 models, 7 snapshots, 9 sources, 671 macros
[0m00:05:18.753896 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'f37edf68-6084-420c-9007-45b3124fcb7a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002A19B802440>]}
[0m00:05:18.758044 [info ] [MainThread]: 
[0m00:05:18.758044 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m00:05:18.758044 [info ] [MainThread]: 
[0m00:05:18.758044 [debug] [MainThread]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=master, idle-time=0s, language=None, compute-name=) - Creating connection
[0m00:05:18.758044 [debug] [MainThread]: Acquiring new databricks connection 'master'
[0m00:05:18.767687 [debug] [ThreadPool]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=list_hive_metastore_saleslt, idle-time=0s, language=None, compute-name=) - Creating connection
[0m00:05:18.767687 [debug] [ThreadPool]: Acquiring new databricks connection 'list_hive_metastore_saleslt'
[0m00:05:18.767687 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_saleslt"
[0m00:05:18.774238 [debug] [ThreadPool]: On list_hive_metastore_saleslt: GetTables(database=hive_metastore, schema=saleslt)
[0m00:05:18.774238 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m00:05:19.371884 [debug] [ThreadPool]: Databricks adapter: Connection(session-id=728b21cf-e05f-4ce5-ae13-ca1d5e1e6d2f) - Created
[0m00:05:20.116982 [debug] [ThreadPool]: SQL status: OK in 1.340 seconds
[0m00:05:20.121483 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=728b21cf-e05f-4ce5-ae13-ca1d5e1e6d2f, command-id=0a41d729-5de7-4b00-884a-419b22400035) - Closing
[0m00:05:20.307277 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_saleslt"
[0m00:05:20.307277 [debug] [ThreadPool]: On list_hive_metastore_saleslt: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "list_hive_metastore_saleslt"} */

    
SELECT current_catalog()

  
[0m00:05:20.584275 [debug] [ThreadPool]: SQL status: OK in 0.280 seconds
[0m00:05:20.597568 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=728b21cf-e05f-4ce5-ae13-ca1d5e1e6d2f, command-id=89e2dc30-87c7-465a-9e13-640603b930a1) - Closing
[0m00:05:20.734657 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_saleslt"
[0m00:05:20.734657 [debug] [ThreadPool]: On list_hive_metastore_saleslt: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "list_hive_metastore_saleslt"} */

    
SHOW VIEWS IN `hive_metastore`.`saleslt`

  
[0m00:05:21.028349 [debug] [ThreadPool]: SQL status: OK in 0.290 seconds
[0m00:05:21.034183 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=728b21cf-e05f-4ce5-ae13-ca1d5e1e6d2f, command-id=3ddf201c-f094-40c5-b09c-6ba94e90b4d9) - Closing
[0m00:05:21.113992 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_hive_metastore_saleslt, now list_hive_metastore_snapshots)
[0m00:05:21.120825 [debug] [ThreadPool]: Databricks adapter: DatabricksDBTConnection(session-id=728b21cf-e05f-4ce5-ae13-ca1d5e1e6d2f, name=list_hive_metastore_snapshots, idle-time=0.006832599639892578s, language=None, compute-name=) - Reusing connection previously named list_hive_metastore_saleslt
[0m00:05:21.120825 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_snapshots"
[0m00:05:21.120825 [debug] [ThreadPool]: On list_hive_metastore_snapshots: GetTables(database=hive_metastore, schema=snapshots)
[0m00:05:21.345800 [debug] [ThreadPool]: SQL status: OK in 0.220 seconds
[0m00:05:21.349127 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=728b21cf-e05f-4ce5-ae13-ca1d5e1e6d2f, command-id=6ebbd269-d5c1-495d-9a09-f03c4b6ccdd9) - Closing
[0m00:05:21.429498 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_snapshots"
[0m00:05:21.429498 [debug] [ThreadPool]: On list_hive_metastore_snapshots: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "list_hive_metastore_snapshots"} */

    
SELECT current_catalog()

  
[0m00:05:21.584422 [debug] [ThreadPool]: SQL status: OK in 0.150 seconds
[0m00:05:21.594063 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=728b21cf-e05f-4ce5-ae13-ca1d5e1e6d2f, command-id=4a62348a-b506-4f27-9120-4b2d835fa91d) - Closing
[0m00:05:21.697428 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_snapshots"
[0m00:05:21.700096 [debug] [ThreadPool]: On list_hive_metastore_snapshots: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "list_hive_metastore_snapshots"} */

    
SHOW VIEWS IN `hive_metastore`.`snapshots`

  
[0m00:05:22.054339 [debug] [ThreadPool]: SQL status: OK in 0.350 seconds
[0m00:05:22.062953 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=728b21cf-e05f-4ce5-ae13-ca1d5e1e6d2f, command-id=aef7ca25-2c44-461e-be18-af98521f938b) - Closing
[0m00:05:22.174155 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'f37edf68-6084-420c-9007-45b3124fcb7a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002A1FD001F00>]}
[0m00:05:22.174155 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.address_snapshot
[0m00:05:22.174155 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=snapshot.medalion_dbt_spark.address_snapshot, idle-time=0s, language=None, compute-name=) - Creating connection
[0m00:05:22.184297 [debug] [Thread-1 (]: Acquiring new databricks connection 'snapshot.medalion_dbt_spark.address_snapshot'
[0m00:05:22.186614 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.address_snapshot
[0m00:05:22.194183 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.address_snapshot
[0m00:05:22.194183 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.address_snapshot
[0m00:05:22.194183 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.customer_snapshot
[0m00:05:22.194183 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.address_snapshot, now snapshot.medalion_dbt_spark.customer_snapshot)
[0m00:05:22.194183 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=snapshot.medalion_dbt_spark.customer_snapshot, idle-time=0.0s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.address_snapshot
[0m00:05:22.202510 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.customer_snapshot
[0m00:05:22.206864 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.customer_snapshot
[0m00:05:22.206864 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.customer_snapshot
[0m00:05:22.206864 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m00:05:22.212471 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.customer_snapshot, now snapshot.medalion_dbt_spark.customeraddress_snapshot)
[0m00:05:22.212471 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=snapshot.medalion_dbt_spark.customeraddress_snapshot, idle-time=0.005606889724731445s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.customer_snapshot
[0m00:05:22.213999 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m00:05:22.219507 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m00:05:22.220549 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m00:05:22.221554 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.product_snapshot
[0m00:05:22.222548 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.customeraddress_snapshot, now snapshot.medalion_dbt_spark.product_snapshot)
[0m00:05:22.222548 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=snapshot.medalion_dbt_spark.product_snapshot, idle-time=0.001999378204345703s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m00:05:22.222548 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.product_snapshot
[0m00:05:22.227058 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.product_snapshot
[0m00:05:22.227058 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.product_snapshot
[0m00:05:22.227058 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.productmodel_snapshot
[0m00:05:22.227058 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.product_snapshot, now snapshot.medalion_dbt_spark.productmodel_snapshot)
[0m00:05:22.227058 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=snapshot.medalion_dbt_spark.productmodel_snapshot, idle-time=0.0s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.product_snapshot
[0m00:05:22.234204 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.productmodel_snapshot
[0m00:05:22.240253 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.productmodel_snapshot
[0m00:05:22.241260 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.productmodel_snapshot
[0m00:05:22.242260 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m00:05:22.243260 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.productmodel_snapshot, now snapshot.medalion_dbt_spark.salesorderdetail_snapshot)
[0m00:05:22.244260 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=snapshot.medalion_dbt_spark.salesorderdetail_snapshot, idle-time=0.003000497817993164s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.productmodel_snapshot
[0m00:05:22.244767 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m00:05:22.248275 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m00:05:22.248275 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m00:05:22.248275 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.salesorderheader_snapshot
[0m00:05:22.248275 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.salesorderdetail_snapshot, now snapshot.medalion_dbt_spark.salesorderheader_snapshot)
[0m00:05:22.254244 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=snapshot.medalion_dbt_spark.salesorderheader_snapshot, idle-time=0.005968332290649414s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m00:05:22.254244 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.salesorderheader_snapshot
[0m00:05:22.257251 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.salesorderheader_snapshot
[0m00:05:22.257251 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.salesorderheader_snapshot
[0m00:05:22.257251 [debug] [Thread-1 (]: Began running node model.medalion_dbt_spark.dim_customer
[0m00:05:22.257251 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.salesorderheader_snapshot, now model.medalion_dbt_spark.dim_customer)
[0m00:05:22.257251 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=model.medalion_dbt_spark.dim_customer, idle-time=0.0s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.salesorderheader_snapshot
[0m00:05:22.257251 [debug] [Thread-1 (]: Began compiling node model.medalion_dbt_spark.dim_customer
[0m00:05:22.267619 [debug] [Thread-1 (]: Writing injected SQL for node "model.medalion_dbt_spark.dim_customer"
[0m00:05:22.267619 [debug] [Thread-1 (]: Began executing node model.medalion_dbt_spark.dim_customer
[0m00:05:22.270729 [debug] [Thread-1 (]: Finished running node model.medalion_dbt_spark.dim_customer
[0m00:05:22.270729 [debug] [Thread-1 (]: Began running node model.medalion_dbt_spark.dim_product
[0m00:05:22.270729 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.medalion_dbt_spark.dim_customer, now model.medalion_dbt_spark.dim_product)
[0m00:05:22.270729 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=model.medalion_dbt_spark.dim_product, idle-time=0.0031096935272216797s, language=sql, compute-name=) - Reusing connection previously named model.medalion_dbt_spark.dim_customer
[0m00:05:22.270729 [debug] [Thread-1 (]: Began compiling node model.medalion_dbt_spark.dim_product
[0m00:05:22.274305 [debug] [Thread-1 (]: Writing injected SQL for node "model.medalion_dbt_spark.dim_product"
[0m00:05:22.277988 [debug] [Thread-1 (]: Began executing node model.medalion_dbt_spark.dim_product
[0m00:05:22.277988 [debug] [Thread-1 (]: Finished running node model.medalion_dbt_spark.dim_product
[0m00:05:22.277988 [debug] [Thread-1 (]: Began running node model.medalion_dbt_spark.sales
[0m00:05:22.277988 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.medalion_dbt_spark.dim_product, now model.medalion_dbt_spark.sales)
[0m00:05:22.277988 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=model.medalion_dbt_spark.sales, idle-time=0.0s, language=sql, compute-name=) - Reusing connection previously named model.medalion_dbt_spark.dim_product
[0m00:05:22.277988 [debug] [Thread-1 (]: Began compiling node model.medalion_dbt_spark.sales
[0m00:05:22.284175 [debug] [Thread-1 (]: Writing injected SQL for node "model.medalion_dbt_spark.sales"
[0m00:05:22.288127 [debug] [Thread-1 (]: Began executing node model.medalion_dbt_spark.sales
[0m00:05:22.288127 [debug] [Thread-1 (]: Finished running node model.medalion_dbt_spark.sales
[0m00:05:22.288127 [debug] [MainThread]: Connection 'master' was properly closed.
[0m00:05:22.288127 [debug] [MainThread]: Connection 'list_hive_metastore_snapshots' was properly closed.
[0m00:05:22.288127 [debug] [MainThread]: On list_hive_metastore_snapshots: Close
[0m00:05:22.294275 [debug] [MainThread]: Databricks adapter: Connection(session-id=728b21cf-e05f-4ce5-ae13-ca1d5e1e6d2f) - Closing
[0m00:05:22.374334 [debug] [MainThread]: Connection 'model.medalion_dbt_spark.sales' was properly closed.
[0m00:05:22.384132 [debug] [MainThread]: Command end result
[0m00:05:22.504373 [debug] [MainThread]: Wrote artifact WritableManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\manifest.json
[0m00:05:22.514093 [debug] [MainThread]: Wrote artifact SemanticManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\semantic_manifest.json
[0m00:05:22.524017 [debug] [MainThread]: Wrote artifact RunExecutionResult to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\run_results.json
[0m00:05:22.944156 [debug] [MainThread]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=generate_catalog, idle-time=0s, language=None, compute-name=) - Creating connection
[0m00:05:22.944156 [debug] [MainThread]: Acquiring new databricks connection 'generate_catalog'
[0m00:05:22.944156 [info ] [MainThread]: Building catalog
[0m00:05:22.951139 [debug] [ThreadPool]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=('hive_metastore', 'saleslt'), idle-time=0s, language=None, compute-name=) - Creating connection
[0m00:05:22.953982 [debug] [ThreadPool]: Acquiring new databricks connection '('hive_metastore', 'saleslt')'
[0m00:05:22.958099 [debug] [ThreadPool]: Using databricks connection "('hive_metastore', 'saleslt')"
[0m00:05:22.958099 [debug] [ThreadPool]: On ('hive_metastore', 'saleslt'): /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "('hive_metastore', 'saleslt')"} */

    
SELECT current_catalog()

  
[0m00:05:22.958099 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m00:05:23.185827 [debug] [ThreadPool]: Databricks adapter: Connection(session-id=056d08da-58ae-4bfe-bc26-c653556fed68) - Created
[0m00:05:23.334203 [debug] [ThreadPool]: SQL status: OK in 0.380 seconds
[0m00:05:23.341719 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=056d08da-58ae-4bfe-bc26-c653556fed68, command-id=ddfc6df0-9870-4e85-8c0f-9b9b5c7aa1cf) - Closing
[0m00:05:23.424108 [debug] [ThreadPool]: Using databricks connection "('hive_metastore', 'saleslt')"
[0m00:05:23.426011 [debug] [ThreadPool]: On ('hive_metastore', 'saleslt'): /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "('hive_metastore', 'saleslt')"} */

    
SHOW TABLE EXTENDED IN `hive_metastore`.`saleslt` LIKE 'productmodel|productdescription|product|sales|address|dim_product|customer|dim_customer|salesorderheader|salesorderdetail|productcategory|customeraddress'

  
[0m00:05:24.610637 [debug] [ThreadPool]: SQL status: OK in 1.180 seconds
[0m00:05:24.620930 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=056d08da-58ae-4bfe-bc26-c653556fed68, command-id=f43244a6-2d87-415b-9a3d-31688aa8849d) - Closing
[0m00:05:24.706257 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly ('hive_metastore', 'saleslt'), now ('hive_metastore', 'snapshots'))
[0m00:05:24.706257 [debug] [ThreadPool]: Databricks adapter: DatabricksDBTConnection(session-id=056d08da-58ae-4bfe-bc26-c653556fed68, name=('hive_metastore', 'snapshots'), idle-time=0.0020532608032226562s, language=None, compute-name=) - Reusing connection previously named ('hive_metastore', 'saleslt')
[0m00:05:24.706257 [debug] [ThreadPool]: Using databricks connection "('hive_metastore', 'snapshots')"
[0m00:05:24.706257 [debug] [ThreadPool]: On ('hive_metastore', 'snapshots'): /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "('hive_metastore', 'snapshots')"} */

    
SELECT current_catalog()

  
[0m00:05:24.859356 [debug] [ThreadPool]: SQL status: OK in 0.150 seconds
[0m00:05:24.868298 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=056d08da-58ae-4bfe-bc26-c653556fed68, command-id=cdd0432a-003a-4562-9f51-491b0f081cd2) - Closing
[0m00:05:24.946496 [debug] [ThreadPool]: Using databricks connection "('hive_metastore', 'snapshots')"
[0m00:05:24.946496 [debug] [ThreadPool]: On ('hive_metastore', 'snapshots'): /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "('hive_metastore', 'snapshots')"} */

    
SHOW TABLE EXTENDED IN `hive_metastore`.`snapshots` LIKE 'product_snapshot|salesorderdetail_snapshot|customeraddress_snapshot|address_snapshot|productmodel_snapshot|salesorderheader_snapshot|customer_snapshot'

  
[0m00:05:26.198466 [debug] [ThreadPool]: SQL status: OK in 1.250 seconds
[0m00:05:26.198466 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=056d08da-58ae-4bfe-bc26-c653556fed68, command-id=607d7510-8716-4df5-91d9-36f31cf0c441) - Closing
[0m00:05:26.296140 [debug] [MainThread]: Wrote artifact CatalogArtifact to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\catalog.json
[0m00:05:26.334087 [debug] [MainThread]: Wrote artifact WritableManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\manifest.json
[0m00:05:26.337729 [debug] [MainThread]: Wrote artifact SemanticManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\semantic_manifest.json
[0m00:05:26.337729 [info ] [MainThread]: Catalog written to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\catalog.json
[0m00:05:26.337729 [debug] [MainThread]: Command `dbt docs generate` succeeded at 00:05:26.337729 after 13.02 seconds
[0m00:05:26.337729 [debug] [MainThread]: Connection 'generate_catalog' was properly closed.
[0m00:05:26.344573 [debug] [MainThread]: Connection '('hive_metastore', 'snapshots')' was properly closed.
[0m00:05:26.344991 [debug] [MainThread]: On ('hive_metastore', 'snapshots'): Close
[0m00:05:26.344991 [debug] [MainThread]: Databricks adapter: Connection(session-id=056d08da-58ae-4bfe-bc26-c653556fed68) - Closing
[0m00:05:26.416058 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002A1FE1265F0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002A1FD2F1A20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000002A199F82170>]}
[0m00:05:26.416058 [debug] [MainThread]: Flushing usage events
[0m00:05:27.726105 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m00:06:18.964023 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001B829836620>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001B828A08AF0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001B828A08910>]}


============================== 00:06:18.973992 | 9bbc780c-fe92-4e9b-b453-680a0cbd8c0c ==============================
[0m00:06:18.973992 [info ] [MainThread]: Running with dbt=1.10.1
[0m00:06:18.973992 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'version_check': 'True', 'debug': 'False', 'log_path': 'D:\\Academic-Project\\Portofolio Data Engineer\\medalion_dbt_spark\\logs', 'profiles_dir': 'C:\\Users\\M S I\\.dbt', 'fail_fast': 'False', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'invocation_command': 'dbt docs serve', 'static_parser': 'True', 'introspect': 'True', 'target_path': 'None', 'log_format': 'default', 'send_anonymous_usage_stats': 'True'}
[0m00:06:19.808187 [debug] [MainThread]: Spark adapter: Setting pyhive.hive logging to ERROR
[0m00:06:19.810191 [debug] [MainThread]: Spark adapter: Setting thrift.transport logging to ERROR
[0m00:06:19.810191 [debug] [MainThread]: Spark adapter: Setting thrift.protocol logging to ERROR
[0m00:06:20.574166 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '9bbc780c-fe92-4e9b-b453-680a0cbd8c0c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001B82DD0C370>]}
[0m00:06:20.624027 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '9bbc780c-fe92-4e9b-b453-680a0cbd8c0c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001B82B281570>]}
[0m09:24:06.922427 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000025A515F6620>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000025A507DEC20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000025A507DEA40>]}


============================== 09:24:06.932287 | 38b34bf9-66f7-4621-934c-f11a112c4aee ==============================
[0m09:24:06.932287 [info ] [MainThread]: Running with dbt=1.10.1
[0m09:24:06.932287 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'debug': 'False', 'version_check': 'True', 'log_path': 'D:\\Academic-Project\\Portofolio Data Engineer\\medalion_dbt_spark\\logs', 'profiles_dir': 'C:\\Users\\M S I\\.dbt', 'fail_fast': 'False', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'invocation_command': 'dbt run', 'static_parser': 'True', 'introspect': 'True', 'target_path': 'None', 'log_format': 'default', 'send_anonymous_usage_stats': 'True'}
[0m09:24:08.128854 [debug] [MainThread]: Spark adapter: Setting pyhive.hive logging to ERROR
[0m09:24:08.128854 [debug] [MainThread]: Spark adapter: Setting thrift.transport logging to ERROR
[0m09:24:08.128854 [debug] [MainThread]: Spark adapter: Setting thrift.protocol logging to ERROR
[0m09:24:10.064433 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '38b34bf9-66f7-4621-934c-f11a112c4aee', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000025A55B6A830>]}
[0m09:24:10.131549 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '38b34bf9-66f7-4621-934c-f11a112c4aee', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000025A530429E0>]}
[0m09:24:10.132549 [info ] [MainThread]: Registered adapter: databricks=1.10.3
[0m09:24:10.564477 [debug] [MainThread]: checksum: 2c026f85d539c10c69b093157526ce33d0bf5533489eafb07fe5172434ec7740, vars: {}, profile: , target: , version: 1.10.1
[0m09:24:11.067165 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m09:24:11.068165 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m09:24:11.148433 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '38b34bf9-66f7-4621-934c-f11a112c4aee', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000025A6D42A650>]}
[0m09:24:11.300053 [debug] [MainThread]: Wrote artifact WritableManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\manifest.json
[0m09:24:11.304430 [debug] [MainThread]: Wrote artifact SemanticManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\semantic_manifest.json
[0m09:24:11.354642 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '38b34bf9-66f7-4621-934c-f11a112c4aee', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000025A6E9B3910>]}
[0m09:24:11.358696 [info ] [MainThread]: Found 3 models, 7 snapshots, 9 sources, 671 macros
[0m09:24:11.361754 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '38b34bf9-66f7-4621-934c-f11a112c4aee', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000025A6E9B3F10>]}
[0m09:24:11.370390 [info ] [MainThread]: 
[0m09:24:11.372377 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m09:24:11.373383 [info ] [MainThread]: 
[0m09:24:11.375378 [debug] [MainThread]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=master, idle-time=0s, language=None, compute-name=) - Creating connection
[0m09:24:11.376378 [debug] [MainThread]: Acquiring new databricks connection 'master'
[0m09:24:11.394678 [debug] [ThreadPool]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=list_hive_metastore, idle-time=0s, language=None, compute-name=) - Creating connection
[0m09:24:11.396281 [debug] [ThreadPool]: Acquiring new databricks connection 'list_hive_metastore'
[0m09:24:11.398315 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore"
[0m09:24:11.399314 [debug] [ThreadPool]: On list_hive_metastore: GetSchemas(database=hive_metastore, schema=None)
[0m09:24:11.399314 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m09:24:15.302409 [debug] [ThreadPool]: Databricks adapter: Connection(session-id=f8aeb054-8a86-46ea-9ea3-e487e813b755) - Created
[0m09:24:20.292159 [debug] [ThreadPool]: SQL status: OK in 8.890 seconds
[0m09:24:20.294168 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=f8aeb054-8a86-46ea-9ea3-e487e813b755, command-id=4ef442f7-a2d1-4af5-9bc8-cffe89060915) - Closing
[0m09:24:20.678501 [debug] [ThreadPool]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=list_hive_metastore_saleslt, idle-time=0s, language=None, compute-name=) - Creating connection
[0m09:24:20.685444 [debug] [ThreadPool]: Acquiring new databricks connection 'list_hive_metastore_saleslt'
[0m09:24:20.685444 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_saleslt"
[0m09:24:20.685444 [debug] [ThreadPool]: On list_hive_metastore_saleslt: GetTables(database=hive_metastore, schema=saleslt)
[0m09:24:20.690194 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m09:24:21.123198 [debug] [ThreadPool]: Databricks adapter: Connection(session-id=da2ed3df-72fe-41ea-a9d7-27a7c4797404) - Created
[0m09:24:22.219072 [debug] [ThreadPool]: SQL status: OK in 1.530 seconds
[0m09:24:22.219072 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=da2ed3df-72fe-41ea-a9d7-27a7c4797404, command-id=b0f42153-7d38-4eb0-8ad2-bd378e486d4a) - Closing
[0m09:24:22.412904 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_saleslt"
[0m09:24:22.412904 [debug] [ThreadPool]: On list_hive_metastore_saleslt: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "list_hive_metastore_saleslt"} */

    
SELECT current_catalog()

  
[0m09:24:36.606400 [debug] [ThreadPool]: SQL status: OK in 14.190 seconds
[0m09:24:36.863356 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=da2ed3df-72fe-41ea-a9d7-27a7c4797404, command-id=23e5596e-8d29-4227-a914-6e45b9a6b18f) - Closing
[0m09:24:37.321450 [warn ] [ThreadPool]: Databricks adapter: Cursor(session-id=da2ed3df-72fe-41ea-a9d7-27a7c4797404, command-id=None) - Exception while closing: Invalid OperationHandle: OperationHandle [opType=EXECUTE_STATEMENT, getHandleIdentifier()=23e5596e-8d29-4227-a914-6e45b9a6b18f]
[0m09:24:37.327939 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_saleslt"
[0m09:24:37.328249 [debug] [ThreadPool]: On list_hive_metastore_saleslt: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "list_hive_metastore_saleslt"} */

    
SHOW VIEWS IN `hive_metastore`.`saleslt`

  
[0m09:24:38.098500 [debug] [ThreadPool]: SQL status: OK in 0.770 seconds
[0m09:24:38.105052 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=da2ed3df-72fe-41ea-a9d7-27a7c4797404, command-id=4768b792-8eec-4493-a7eb-a3fb3bf4c9af) - Closing
[0m09:24:38.216006 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_hive_metastore_saleslt, now list_hive_metastore_snapshots)
[0m09:24:38.216006 [debug] [ThreadPool]: Databricks adapter: DatabricksDBTConnection(session-id=da2ed3df-72fe-41ea-a9d7-27a7c4797404, name=list_hive_metastore_snapshots, idle-time=0.0s, language=None, compute-name=) - Reusing connection previously named list_hive_metastore_saleslt
[0m09:24:38.216006 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_snapshots"
[0m09:24:38.216006 [debug] [ThreadPool]: On list_hive_metastore_snapshots: GetTables(database=hive_metastore, schema=snapshots)
[0m09:24:38.479403 [debug] [ThreadPool]: SQL status: OK in 0.260 seconds
[0m09:24:38.486391 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=da2ed3df-72fe-41ea-a9d7-27a7c4797404, command-id=0db864eb-8fea-4c6e-a08e-f8ecd872d47a) - Closing
[0m09:24:38.577374 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_snapshots"
[0m09:24:38.583585 [debug] [ThreadPool]: On list_hive_metastore_snapshots: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "list_hive_metastore_snapshots"} */

    
SELECT current_catalog()

  
[0m09:24:38.885617 [debug] [ThreadPool]: SQL status: OK in 0.300 seconds
[0m09:24:38.887623 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=da2ed3df-72fe-41ea-a9d7-27a7c4797404, command-id=03bef256-a701-4d65-9b85-0fe354ac26a4) - Closing
[0m09:24:38.978801 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_snapshots"
[0m09:24:38.978801 [debug] [ThreadPool]: On list_hive_metastore_snapshots: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "list_hive_metastore_snapshots"} */

    
SHOW VIEWS IN `hive_metastore`.`snapshots`

  
[0m09:24:39.324266 [debug] [ThreadPool]: SQL status: OK in 0.350 seconds
[0m09:24:39.325710 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=da2ed3df-72fe-41ea-a9d7-27a7c4797404, command-id=bb23f2d5-ed51-4a2f-9f5c-fd629b29246a) - Closing
[0m09:24:39.409107 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '38b34bf9-66f7-4621-934c-f11a112c4aee', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000025A4FCF3BB0>]}
[0m09:24:39.521015 [debug] [Thread-1 (]: Began running node model.medalion_dbt_spark.dim_customer
[0m09:24:39.521015 [info ] [Thread-1 (]: 1 of 3 START sql table model saleslt.dim_customer .............................. [RUN]
[0m09:24:39.541276 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=model.medalion_dbt_spark.dim_customer, idle-time=0s, language=None, compute-name=) - Creating connection
[0m09:24:39.541276 [debug] [Thread-1 (]: Acquiring new databricks connection 'model.medalion_dbt_spark.dim_customer'
[0m09:24:39.541276 [debug] [Thread-1 (]: Began compiling node model.medalion_dbt_spark.dim_customer
[0m09:24:39.548187 [debug] [Thread-1 (]: Writing injected SQL for node "model.medalion_dbt_spark.dim_customer"
[0m09:24:39.557520 [debug] [Thread-1 (]: Began executing node model.medalion_dbt_spark.dim_customer
[0m09:24:39.568696 [debug] [Thread-1 (]: MATERIALIZING TABLE
[0m09:24:39.575461 [debug] [Thread-1 (]: Using databricks connection "model.medalion_dbt_spark.dim_customer"
[0m09:24:39.575461 [debug] [Thread-1 (]: On model.medalion_dbt_spark.dim_customer: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "model.medalion_dbt_spark.dim_customer"} */

      describe extended `hive_metastore`.`saleslt`.`dim_customer`
  
[0m09:24:39.575461 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m09:24:39.798354 [debug] [Thread-1 (]: Databricks adapter: Connection(session-id=683a1b06-f96b-4724-89d2-85cecb32e668) - Created
[0m09:24:44.376270 [debug] [Thread-1 (]: SQL status: OK in 4.800 seconds
[0m09:24:44.376270 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=683a1b06-f96b-4724-89d2-85cecb32e668, command-id=302b1631-34bc-4bc8-9fd0-c39c4f31890a) - Closing
[0m09:24:44.467049 [warn ] [Thread-1 (]: [[33mWARNING[0m]: Use revamped materializations based on separating create and insert.  This allows more performant column comments, as well as new column features.
You may opt into the new behavior sooner by setting `flags.use_materialization_v2` to `True` in `dbt_project.yml`.
Visit https://docs.getdbt.com/reference/global-configs/behavior-changes for more information.
[0m09:24:44.501489 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'BehaviorChangeEvent', 'label': '38b34bf9-66f7-4621-934c-f11a112c4aee', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000025A6EB505E0>]}
[0m09:24:44.628565 [debug] [Thread-1 (]: Writing runtime sql for node "model.medalion_dbt_spark.dim_customer"
[0m09:24:44.653668 [debug] [Thread-1 (]: Using databricks connection "model.medalion_dbt_spark.dim_customer"
[0m09:24:44.653668 [debug] [Thread-1 (]: On model.medalion_dbt_spark.dim_customer: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "model.medalion_dbt_spark.dim_customer"} */

  
    
        create or replace table `hive_metastore`.`saleslt`.`dim_customer`
      
      
  using delta
      
      
      
      
      location '/mnt/gold/customers/dim_customer'
      
      
      as
      with address_snapshot as (
    select
        AddressID,
        AddressLine1,
        AddressLine2,
        City,
        StateProvince,
        CountryRegion,
        PostalCode
    from `hive_metastore`.`snapshots`.`address_snapshot` where dbt_valid_to is null
)

, customeraddress_snapshot as (
    select
        CustomerId,
        AddressId,
        AddressType
    from `hive_metastore`.`snapshots`.`customeraddress_snapshot` where dbt_valid_to is null
)

, customer_snapshot as (
    select
        CustomerId,
        concat(ifnull(FirstName,' '),' ',ifnull(MiddleName,' '),' ',ifnull(LastName,' ')) as FullName
    from `hive_metastore`.`snapshots`.`customer_snapshot` where dbt_valid_to is null
)

, transformed as (
    select
    row_number() over (order by customer_snapshot.customerid) as customer_sk, -- auto-incremental surrogate key
    customer_snapshot.CustomerId,
    customer_snapshot.fullname,
    customeraddress_snapshot.AddressID,
    customeraddress_snapshot.AddressType,
    address_snapshot.AddressLine1,
    address_snapshot.City,
    address_snapshot.StateProvince,
    address_snapshot.CountryRegion,
    address_snapshot.PostalCode
    from customer_snapshot
    inner join customeraddress_snapshot on customer_snapshot.CustomerId = customeraddress_snapshot.CustomerId
    inner join address_snapshot on customeraddress_snapshot.AddressID = address_snapshot.AddressID
)
select *
from transformed
  
[0m09:25:02.808306 [debug] [Thread-1 (]: SQL status: OK in 18.150 seconds
[0m09:25:02.808306 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=683a1b06-f96b-4724-89d2-85cecb32e668, command-id=b943cb81-220e-419c-a243-04bfd53f3224) - Closing
[0m09:25:03.017736 [warn ] [Thread-1 (]: Databricks adapter: Cursor(session-id=683a1b06-f96b-4724-89d2-85cecb32e668, command-id=None) - Exception while closing: Invalid OperationHandle: OperationHandle [opType=EXECUTE_STATEMENT, getHandleIdentifier()=b943cb81-220e-419c-a243-04bfd53f3224]
[0m09:25:03.041861 [debug] [Thread-1 (]: Applying tags to relation None []
[0m09:25:03.073846 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '38b34bf9-66f7-4621-934c-f11a112c4aee', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000025A4FC2EEC0>]}
[0m09:25:03.080475 [info ] [Thread-1 (]: 1 of 3 OK created sql table model saleslt.dim_customer ......................... [[32mOK[0m in 23.55s]
[0m09:25:03.080475 [debug] [Thread-1 (]: Finished running node model.medalion_dbt_spark.dim_customer
[0m09:25:03.083410 [debug] [Thread-1 (]: Began running node model.medalion_dbt_spark.dim_product
[0m09:25:03.083410 [info ] [Thread-1 (]: 2 of 3 START sql table model saleslt.dim_product ............................... [RUN]
[0m09:25:03.083410 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.medalion_dbt_spark.dim_customer, now model.medalion_dbt_spark.dim_product)
[0m09:25:03.086875 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=683a1b06-f96b-4724-89d2-85cecb32e668, name=model.medalion_dbt_spark.dim_product, idle-time=0.013029813766479492s, language=sql, compute-name=) - Reusing connection previously named model.medalion_dbt_spark.dim_customer
[0m09:25:03.087874 [debug] [Thread-1 (]: Began compiling node model.medalion_dbt_spark.dim_product
[0m09:25:03.094413 [debug] [Thread-1 (]: Writing injected SQL for node "model.medalion_dbt_spark.dim_product"
[0m09:25:03.094413 [debug] [Thread-1 (]: Began executing node model.medalion_dbt_spark.dim_product
[0m09:25:03.100702 [debug] [Thread-1 (]: MATERIALIZING TABLE
[0m09:25:03.104704 [debug] [Thread-1 (]: Using databricks connection "model.medalion_dbt_spark.dim_product"
[0m09:25:03.106702 [debug] [Thread-1 (]: On model.medalion_dbt_spark.dim_product: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "model.medalion_dbt_spark.dim_product"} */

      describe extended `hive_metastore`.`saleslt`.`dim_product`
  
[0m09:25:04.008527 [debug] [Thread-1 (]: SQL status: OK in 0.900 seconds
[0m09:25:04.012698 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=683a1b06-f96b-4724-89d2-85cecb32e668, command-id=fbfd725d-d2a2-4eba-a105-b705fff9d67a) - Closing
[0m09:25:04.146563 [debug] [Thread-1 (]: Writing runtime sql for node "model.medalion_dbt_spark.dim_product"
[0m09:25:04.149395 [debug] [Thread-1 (]: Using databricks connection "model.medalion_dbt_spark.dim_product"
[0m09:25:04.150407 [debug] [Thread-1 (]: On model.medalion_dbt_spark.dim_product: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "model.medalion_dbt_spark.dim_product"} */

  
    
        create or replace table `hive_metastore`.`saleslt`.`dim_product`
      
      
  using delta
      
      
      
      
      location '/mnt/gold/products/dim_product'
      
      
      as
      with product_snapshot as (
    select
        productId,
        name,
        standardCost,
        listPrice,
        size,
        weight,
        productcategoryid,
        productmodelid,
        sellstartdate,
        sellenddate,
        discontinueddate
    from `hive_metastore`.`snapshots`.`product_snapshot`
    where dbt_valid_to is null
),

product_model_snapshot as (
    select
        productmodelid,
        name,
        CatalogDescription,
        row_number() over (order by name) as model_id
    from `hive_metastore`.`snapshots`.`productmodel_snapshot`
    where dbt_valid_to is null
),


transformed as (
    select
        row_number() over (order by p.productId) as product_sk,
        p.name as product_name,
        p.standardCost,
        p.listPrice,
        p.size,
        p.weight,
        pm.name as model,
        pm.CatalogDescription as description,
        p.sellstartdate,
        p.sellenddate,
        p.discontinueddate
    from product_snapshot p
    left join product_model_snapshot pm on p.productmodelid = pm.productmodelid
)

select * from transformed
  
[0m09:25:20.314433 [debug] [Thread-1 (]: SQL status: OK in 16.160 seconds
[0m09:25:20.317526 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=683a1b06-f96b-4724-89d2-85cecb32e668, command-id=33b7ae18-68fa-4cb3-8f9c-5453e8fe3e76) - Closing
[0m09:25:20.463822 [warn ] [Thread-1 (]: Databricks adapter: Cursor(session-id=683a1b06-f96b-4724-89d2-85cecb32e668, command-id=None) - Exception while closing: Invalid OperationHandle: OperationHandle [opType=EXECUTE_STATEMENT, getHandleIdentifier()=33b7ae18-68fa-4cb3-8f9c-5453e8fe3e76]
[0m09:25:20.463822 [debug] [Thread-1 (]: Applying tags to relation None []
[0m09:25:20.463822 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '38b34bf9-66f7-4621-934c-f11a112c4aee', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000025A5149C400>]}
[0m09:25:20.470744 [info ] [Thread-1 (]: 2 of 3 OK created sql table model saleslt.dim_product .......................... [[32mOK[0m in 17.38s]
[0m09:25:20.470744 [debug] [Thread-1 (]: Finished running node model.medalion_dbt_spark.dim_product
[0m09:25:20.470744 [debug] [Thread-1 (]: Began running node model.medalion_dbt_spark.sales
[0m09:25:20.473357 [info ] [Thread-1 (]: 3 of 3 START sql table model saleslt.sales ..................................... [RUN]
[0m09:25:20.475365 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.medalion_dbt_spark.dim_product, now model.medalion_dbt_spark.sales)
[0m09:25:20.476365 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=683a1b06-f96b-4724-89d2-85cecb32e668, name=model.medalion_dbt_spark.sales, idle-time=0.012543201446533203s, language=sql, compute-name=) - Reusing connection previously named model.medalion_dbt_spark.dim_product
[0m09:25:20.477182 [debug] [Thread-1 (]: Began compiling node model.medalion_dbt_spark.sales
[0m09:25:20.482143 [debug] [Thread-1 (]: Writing injected SQL for node "model.medalion_dbt_spark.sales"
[0m09:25:20.486460 [debug] [Thread-1 (]: Began executing node model.medalion_dbt_spark.sales
[0m09:25:20.499467 [debug] [Thread-1 (]: MATERIALIZING TABLE
[0m09:25:20.510431 [debug] [Thread-1 (]: Using databricks connection "model.medalion_dbt_spark.sales"
[0m09:25:20.512200 [debug] [Thread-1 (]: On model.medalion_dbt_spark.sales: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "model.medalion_dbt_spark.sales"} */

      describe extended `hive_metastore`.`saleslt`.`sales`
  
[0m09:25:21.303919 [debug] [Thread-1 (]: SQL status: OK in 0.790 seconds
[0m09:25:21.313506 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=683a1b06-f96b-4724-89d2-85cecb32e668, command-id=429a6765-96e6-4ca8-9371-84ac4f388b5a) - Closing
[0m09:25:21.393473 [debug] [Thread-1 (]: Writing runtime sql for node "model.medalion_dbt_spark.sales"
[0m09:25:21.396444 [debug] [Thread-1 (]: Using databricks connection "model.medalion_dbt_spark.sales"
[0m09:25:21.398467 [debug] [Thread-1 (]: On model.medalion_dbt_spark.sales: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "node_id": "model.medalion_dbt_spark.sales"} */

  
    
        create or replace table `hive_metastore`.`saleslt`.`sales`
      
      
  using delta
      
      
      
      
      location '/mnt/gold/sales/sales'
      
      
      as
      with salesorderdetail_snapshot as (
    SELECT
        SalesOrderID,
        SalesOrderDetailID,
        OrderQty,
        ProductID,
        UnitPrice,
        UnitPriceDiscount,
        LineTotal
    FROM `hive_metastore`.`snapshots`.`salesorderdetail_snapshot`
),

product_snapshot as (
    SELECT
        ProductID,
        Name,
        ProductNumber,
        Color,
        StandardCost,
        ListPrice,
        Size,
        Weight,
        SellStartDate,
        SellEndDate,
        DiscontinuedDate,
        ThumbNailPhoto,
        ThumbnailPhotoFileName
    FROM `hive_metastore`.`saleslt`.`product`
),

saleorderheader_snapshot as (
    SELECT
        SalesOrderID,
        RevisionNumber,
        OrderDate,
        DueDate,
        ShipDate,
        Status,
        OnlineOrderFlag,
        SalesOrderNumber,
        PurchaseOrderNumber,
        AccountNumber,
        CustomerID,
        ShipToAddressID,
        BillToAddressID,
        ShipMethod,
        CreditCardApprovalCode,
        SubTotal,
        TaxAmt,
        Freight,
        TotalDue,
        Comment,
        row_number() over (partition by SalesOrderID order by SalesOrderID) as row_num
    FROM `hive_metastore`.`saleslt`.`salesorderheader`
),

transformed as (
    select
        sod.SalesOrderID,
        sod.SalesOrderDetailID,
        sod.OrderQty,
        sod.ProductID,
        sod.UnitPrice,
        sod.UnitPriceDiscount,
        sod.LineTotal,
        p.Name,
        p.ProductNumber,
        p.Color,
        p.StandardCost,
        p.ListPrice,
        p.Size,
        p.Weight,
        p.SellStartDate,
        p.SellEndDate,
        p.DiscontinuedDate,
        p.ThumbNailPhoto,
        p.ThumbnailPhotoFileName,
        soh.RevisionNumber,
        soh.OrderDate,
        soh.DueDate,
        soh.ShipDate,
        soh.Status,
        soh.OnlineOrderFlag,
        soh.SalesOrderNumber,
        soh.PurchaseOrderNumber,
        soh.AccountNumber,
        soh.CustomerID,
        soh.ShipToAddressID,
        soh.BillToAddressID,
        soh.ShipMethod,
        soh.CreditCardApprovalCode,
        soh.SubTotal,
        soh.TaxAmt,
        soh.Freight,
        soh.TotalDue,
        soh.Comment
    from salesorderdetail_snapshot sod
    left join product_snapshot p on sod.ProductID = p.ProductID
    left join saleorderheader_snapshot soh on sod.SalesOrderID = soh.SalesOrderID
)

select * from transformed
  
[0m09:25:28.610220 [debug] [Thread-1 (]: SQL status: OK in 7.210 seconds
[0m09:25:28.610220 [debug] [Thread-1 (]: Databricks adapter: Cursor(session-id=683a1b06-f96b-4724-89d2-85cecb32e668, command-id=0199ef11-8ff6-4193-9dbd-45039e9c81f2) - Closing
[0m09:25:28.746909 [warn ] [Thread-1 (]: Databricks adapter: Cursor(session-id=683a1b06-f96b-4724-89d2-85cecb32e668, command-id=None) - Exception while closing: Invalid OperationHandle: OperationHandle [opType=EXECUTE_STATEMENT, getHandleIdentifier()=0199ef11-8ff6-4193-9dbd-45039e9c81f2]
[0m09:25:28.746909 [debug] [Thread-1 (]: Applying tags to relation None []
[0m09:25:28.754176 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '38b34bf9-66f7-4621-934c-f11a112c4aee', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000025A6EBE6F80>]}
[0m09:25:28.754176 [info ] [Thread-1 (]: 3 of 3 OK created sql table model saleslt.sales ................................ [[32mOK[0m in 8.28s]
[0m09:25:28.754176 [debug] [Thread-1 (]: Finished running node model.medalion_dbt_spark.sales
[0m09:25:28.759570 [debug] [MainThread]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=master, idle-time=49.350462913513184s, language=None, compute-name=) - Reusing connection previously named master
[0m09:25:28.760569 [debug] [MainThread]: Connection 'master' was properly closed.
[0m09:25:28.761410 [debug] [MainThread]: Connection 'list_hive_metastore' was properly closed.
[0m09:25:28.762441 [debug] [MainThread]: On list_hive_metastore: Close
[0m09:25:28.762441 [debug] [MainThread]: Databricks adapter: Connection(session-id=f8aeb054-8a86-46ea-9ea3-e487e813b755) - Closing
[0m09:25:28.934613 [debug] [MainThread]: Connection 'list_hive_metastore_snapshots' was properly closed.
[0m09:25:28.934613 [debug] [MainThread]: On list_hive_metastore_snapshots: Close
[0m09:25:28.934613 [debug] [MainThread]: Databricks adapter: Connection(session-id=da2ed3df-72fe-41ea-a9d7-27a7c4797404) - Closing
[0m09:25:29.010664 [debug] [MainThread]: Connection 'model.medalion_dbt_spark.sales' was properly closed.
[0m09:25:29.010664 [debug] [MainThread]: On model.medalion_dbt_spark.sales: Close
[0m09:25:29.013885 [debug] [MainThread]: Databricks adapter: Connection(session-id=683a1b06-f96b-4724-89d2-85cecb32e668) - Closing
[0m09:25:29.093634 [info ] [MainThread]: 
[0m09:25:29.094653 [info ] [MainThread]: Finished running 3 table models in 0 hours 1 minutes and 17.72 seconds (77.72s).
[0m09:25:29.095736 [debug] [MainThread]: Command end result
[0m09:25:29.153256 [debug] [MainThread]: Wrote artifact WritableManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\manifest.json
[0m09:25:29.157252 [debug] [MainThread]: Wrote artifact SemanticManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\semantic_manifest.json
[0m09:25:29.169964 [debug] [MainThread]: Wrote artifact RunExecutionResult to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\run_results.json
[0m09:25:29.170727 [info ] [MainThread]: 
[0m09:25:29.170727 [info ] [MainThread]: [32mCompleted successfully[0m
[0m09:25:29.170727 [info ] [MainThread]: 
[0m09:25:29.176858 [info ] [MainThread]: Done. PASS=3 WARN=0 ERROR=0 SKIP=0 NO-OP=0 TOTAL=3
[0m09:25:29.178877 [debug] [MainThread]: Command `dbt run` succeeded at 09:25:29.177873 after 82.41 seconds
[0m09:25:29.179874 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000025A515F6620>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000025A5293B2E0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000025A5306E710>]}
[0m09:25:29.180872 [debug] [MainThread]: Flushing usage events
[0m09:25:30.960237 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m10:26:49.149403 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000022AD8026620>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000022AD7212F80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000022AD7212DA0>]}


============================== 10:26:49.156762 | 9e0e9209-1aea-4094-9b68-cb1e1f529853 ==============================
[0m10:26:49.156762 [info ] [MainThread]: Running with dbt=1.10.1
[0m10:26:49.156762 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'debug': 'False', 'fail_fast': 'False', 'log_path': 'D:\\Academic-Project\\Portofolio Data Engineer\\medalion_dbt_spark\\logs', 'profiles_dir': 'C:\\Users\\M S I\\.dbt', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'None', 'quiet': 'False', 'no_print': 'None', 'log_format': 'default', 'static_parser': 'True', 'invocation_command': 'dbt docs generate', 'introspect': 'True', 'target_path': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'send_anonymous_usage_stats': 'True'}
[0m10:26:50.065279 [debug] [MainThread]: Spark adapter: Setting pyhive.hive logging to ERROR
[0m10:26:50.065279 [debug] [MainThread]: Spark adapter: Setting thrift.transport logging to ERROR
[0m10:26:50.070570 [debug] [MainThread]: Spark adapter: Setting thrift.protocol logging to ERROR
[0m10:26:51.548708 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '9e0e9209-1aea-4094-9b68-cb1e1f529853', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000022ADC5736A0>]}
[0m10:26:51.619178 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '9e0e9209-1aea-4094-9b68-cb1e1f529853', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000022AD9A9F1C0>]}
[0m10:26:51.626074 [info ] [MainThread]: Registered adapter: databricks=1.10.3
[0m10:26:52.077116 [debug] [MainThread]: checksum: 2c026f85d539c10c69b093157526ce33d0bf5533489eafb07fe5172434ec7740, vars: {}, profile: , target: , version: 1.10.1
[0m10:26:52.451731 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m10:26:52.451731 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m10:26:52.528161 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '9e0e9209-1aea-4094-9b68-cb1e1f529853', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000022AF53EDE70>]}
[0m10:26:52.569537 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '9e0e9209-1aea-4094-9b68-cb1e1f529853', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000022AF3CCA8C0>]}
[0m10:26:52.569537 [info ] [MainThread]: Found 3 models, 7 snapshots, 9 sources, 671 macros
[0m10:26:52.569537 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '9e0e9209-1aea-4094-9b68-cb1e1f529853', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000022AF5100700>]}
[0m10:26:52.575633 [info ] [MainThread]: 
[0m10:26:52.576525 [info ] [MainThread]: Concurrency: 1 threads (target='dev')
[0m10:26:52.576525 [info ] [MainThread]: 
[0m10:26:52.576525 [debug] [MainThread]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=master, idle-time=0s, language=None, compute-name=) - Creating connection
[0m10:26:52.576525 [debug] [MainThread]: Acquiring new databricks connection 'master'
[0m10:26:52.590802 [debug] [ThreadPool]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=list_hive_metastore_saleslt, idle-time=0s, language=None, compute-name=) - Creating connection
[0m10:26:52.590802 [debug] [ThreadPool]: Acquiring new databricks connection 'list_hive_metastore_saleslt'
[0m10:26:52.590802 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_saleslt"
[0m10:26:52.590802 [debug] [ThreadPool]: On list_hive_metastore_saleslt: GetTables(database=hive_metastore, schema=saleslt)
[0m10:26:52.590802 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m10:26:53.277939 [debug] [ThreadPool]: Databricks adapter: Connection(session-id=8ced86c3-6805-44d5-a8c6-240333aa237b) - Created
[0m10:26:53.547809 [debug] [ThreadPool]: SQL status: OK in 0.960 seconds
[0m10:26:53.547809 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=8ced86c3-6805-44d5-a8c6-240333aa237b, command-id=b84d9d44-b9ec-4223-8f52-a9cd31c751fb) - Closing
[0m10:26:53.839635 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_saleslt"
[0m10:26:53.839635 [debug] [ThreadPool]: On list_hive_metastore_saleslt: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "list_hive_metastore_saleslt"} */

    
SELECT current_catalog()

  
[0m10:26:54.074914 [debug] [ThreadPool]: SQL status: OK in 0.240 seconds
[0m10:26:54.099698 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=8ced86c3-6805-44d5-a8c6-240333aa237b, command-id=eb850d94-ace2-4fbc-8803-86b2456eb262) - Closing
[0m10:26:54.180212 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_saleslt"
[0m10:26:54.186062 [debug] [ThreadPool]: On list_hive_metastore_saleslt: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "list_hive_metastore_saleslt"} */

    
SHOW VIEWS IN `hive_metastore`.`saleslt`

  
[0m10:26:54.595207 [debug] [ThreadPool]: SQL status: OK in 0.410 seconds
[0m10:26:54.599239 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=8ced86c3-6805-44d5-a8c6-240333aa237b, command-id=21e469de-1fa2-432d-84f6-9750221aaee5) - Closing
[0m10:26:54.681629 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_hive_metastore_saleslt, now list_hive_metastore_snapshots)
[0m10:26:54.686928 [debug] [ThreadPool]: Databricks adapter: DatabricksDBTConnection(session-id=8ced86c3-6805-44d5-a8c6-240333aa237b, name=list_hive_metastore_snapshots, idle-time=0.0048258304595947266s, language=None, compute-name=) - Reusing connection previously named list_hive_metastore_saleslt
[0m10:26:54.687464 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_snapshots"
[0m10:26:54.688522 [debug] [ThreadPool]: On list_hive_metastore_snapshots: GetTables(database=hive_metastore, schema=snapshots)
[0m10:26:54.876610 [debug] [ThreadPool]: SQL status: OK in 0.190 seconds
[0m10:26:54.878613 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=8ced86c3-6805-44d5-a8c6-240333aa237b, command-id=fcaefb49-b12f-40be-9705-ddbd47491b1e) - Closing
[0m10:26:54.948933 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_snapshots"
[0m10:26:54.948933 [debug] [ThreadPool]: On list_hive_metastore_snapshots: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "list_hive_metastore_snapshots"} */

    
SELECT current_catalog()

  
[0m10:26:55.103552 [debug] [ThreadPool]: SQL status: OK in 0.150 seconds
[0m10:26:55.103552 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=8ced86c3-6805-44d5-a8c6-240333aa237b, command-id=10f91dc9-4067-4900-9671-1fbf3259b203) - Closing
[0m10:26:55.263767 [debug] [ThreadPool]: Using databricks connection "list_hive_metastore_snapshots"
[0m10:26:55.263767 [debug] [ThreadPool]: On list_hive_metastore_snapshots: /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "list_hive_metastore_snapshots"} */

    
SHOW VIEWS IN `hive_metastore`.`snapshots`

  
[0m10:26:55.533317 [debug] [ThreadPool]: SQL status: OK in 0.270 seconds
[0m10:26:55.533317 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=8ced86c3-6805-44d5-a8c6-240333aa237b, command-id=cc3898e5-bc3f-418a-8972-8e855da6d281) - Closing
[0m10:26:55.628809 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '9e0e9209-1aea-4094-9b68-cb1e1f529853', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000022ADC89C4C0>]}
[0m10:26:55.635747 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.address_snapshot
[0m10:26:55.635747 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=snapshot.medalion_dbt_spark.address_snapshot, idle-time=0s, language=None, compute-name=) - Creating connection
[0m10:26:55.635747 [debug] [Thread-1 (]: Acquiring new databricks connection 'snapshot.medalion_dbt_spark.address_snapshot'
[0m10:26:55.642032 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.address_snapshot
[0m10:26:55.650063 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.address_snapshot
[0m10:26:55.650063 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.address_snapshot
[0m10:26:55.656542 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.customer_snapshot
[0m10:26:55.656949 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.address_snapshot, now snapshot.medalion_dbt_spark.customer_snapshot)
[0m10:26:55.656949 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=snapshot.medalion_dbt_spark.customer_snapshot, idle-time=0.00688624382019043s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.address_snapshot
[0m10:26:55.656949 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.customer_snapshot
[0m10:26:55.665455 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.customer_snapshot
[0m10:26:55.666456 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.customer_snapshot
[0m10:26:55.667455 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m10:26:55.668454 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.customer_snapshot, now snapshot.medalion_dbt_spark.customeraddress_snapshot)
[0m10:26:55.668454 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=snapshot.medalion_dbt_spark.customeraddress_snapshot, idle-time=0.001997709274291992s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.customer_snapshot
[0m10:26:55.669454 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m10:26:55.674453 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m10:26:55.675224 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m10:26:55.677288 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.product_snapshot
[0m10:26:55.678308 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.customeraddress_snapshot, now snapshot.medalion_dbt_spark.product_snapshot)
[0m10:26:55.679303 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=snapshot.medalion_dbt_spark.product_snapshot, idle-time=0.00407862663269043s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.customeraddress_snapshot
[0m10:26:55.679303 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.product_snapshot
[0m10:26:55.685262 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.product_snapshot
[0m10:26:55.686259 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.product_snapshot
[0m10:26:55.687258 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.productmodel_snapshot
[0m10:26:55.688259 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.product_snapshot, now snapshot.medalion_dbt_spark.productmodel_snapshot)
[0m10:26:55.688259 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=snapshot.medalion_dbt_spark.productmodel_snapshot, idle-time=0.0019991397857666016s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.product_snapshot
[0m10:26:55.689259 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.productmodel_snapshot
[0m10:26:55.694261 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.productmodel_snapshot
[0m10:26:55.695923 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.productmodel_snapshot
[0m10:26:55.695923 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m10:26:55.698155 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.productmodel_snapshot, now snapshot.medalion_dbt_spark.salesorderdetail_snapshot)
[0m10:26:55.698155 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=snapshot.medalion_dbt_spark.salesorderdetail_snapshot, idle-time=0.0028951168060302734s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.productmodel_snapshot
[0m10:26:55.699165 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m10:26:55.705122 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m10:26:55.706130 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m10:26:55.707194 [debug] [Thread-1 (]: Began running node snapshot.medalion_dbt_spark.salesorderheader_snapshot
[0m10:26:55.708139 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.salesorderdetail_snapshot, now snapshot.medalion_dbt_spark.salesorderheader_snapshot)
[0m10:26:55.708139 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=snapshot.medalion_dbt_spark.salesorderheader_snapshot, idle-time=0.002008199691772461s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.salesorderdetail_snapshot
[0m10:26:55.709128 [debug] [Thread-1 (]: Began compiling node snapshot.medalion_dbt_spark.salesorderheader_snapshot
[0m10:26:55.715129 [debug] [Thread-1 (]: Began executing node snapshot.medalion_dbt_spark.salesorderheader_snapshot
[0m10:26:55.716128 [debug] [Thread-1 (]: Finished running node snapshot.medalion_dbt_spark.salesorderheader_snapshot
[0m10:26:55.716128 [debug] [Thread-1 (]: Began running node model.medalion_dbt_spark.dim_customer
[0m10:26:55.716128 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly snapshot.medalion_dbt_spark.salesorderheader_snapshot, now model.medalion_dbt_spark.dim_customer)
[0m10:26:55.716128 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=model.medalion_dbt_spark.dim_customer, idle-time=0.0s, language=sql, compute-name=) - Reusing connection previously named snapshot.medalion_dbt_spark.salesorderheader_snapshot
[0m10:26:55.719127 [debug] [Thread-1 (]: Began compiling node model.medalion_dbt_spark.dim_customer
[0m10:26:55.724209 [debug] [Thread-1 (]: Writing injected SQL for node "model.medalion_dbt_spark.dim_customer"
[0m10:26:55.725132 [debug] [Thread-1 (]: Began executing node model.medalion_dbt_spark.dim_customer
[0m10:26:55.727134 [debug] [Thread-1 (]: Finished running node model.medalion_dbt_spark.dim_customer
[0m10:26:55.727134 [debug] [Thread-1 (]: Began running node model.medalion_dbt_spark.dim_product
[0m10:26:55.728134 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.medalion_dbt_spark.dim_customer, now model.medalion_dbt_spark.dim_product)
[0m10:26:55.729134 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=model.medalion_dbt_spark.dim_product, idle-time=0.0029795169830322266s, language=sql, compute-name=) - Reusing connection previously named model.medalion_dbt_spark.dim_customer
[0m10:26:55.730134 [debug] [Thread-1 (]: Began compiling node model.medalion_dbt_spark.dim_product
[0m10:26:55.734862 [debug] [Thread-1 (]: Writing injected SQL for node "model.medalion_dbt_spark.dim_product"
[0m10:26:55.735930 [debug] [Thread-1 (]: Began executing node model.medalion_dbt_spark.dim_product
[0m10:26:55.736948 [debug] [Thread-1 (]: Finished running node model.medalion_dbt_spark.dim_product
[0m10:26:55.737942 [debug] [Thread-1 (]: Began running node model.medalion_dbt_spark.sales
[0m10:26:55.737942 [debug] [Thread-1 (]: Re-using an available connection from the pool (formerly model.medalion_dbt_spark.dim_product, now model.medalion_dbt_spark.sales)
[0m10:26:55.738943 [debug] [Thread-1 (]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=model.medalion_dbt_spark.sales, idle-time=0.001995563507080078s, language=sql, compute-name=) - Reusing connection previously named model.medalion_dbt_spark.dim_product
[0m10:26:55.739935 [debug] [Thread-1 (]: Began compiling node model.medalion_dbt_spark.sales
[0m10:26:55.743941 [debug] [Thread-1 (]: Writing injected SQL for node "model.medalion_dbt_spark.sales"
[0m10:26:55.745934 [debug] [Thread-1 (]: Began executing node model.medalion_dbt_spark.sales
[0m10:26:55.747359 [debug] [Thread-1 (]: Finished running node model.medalion_dbt_spark.sales
[0m10:26:55.748169 [debug] [MainThread]: Connection 'master' was properly closed.
[0m10:26:55.748169 [debug] [MainThread]: Connection 'list_hive_metastore_snapshots' was properly closed.
[0m10:26:55.749277 [debug] [MainThread]: On list_hive_metastore_snapshots: Close
[0m10:26:55.750266 [debug] [MainThread]: Databricks adapter: Connection(session-id=8ced86c3-6805-44d5-a8c6-240333aa237b) - Closing
[0m10:26:55.824005 [debug] [MainThread]: Connection 'model.medalion_dbt_spark.sales' was properly closed.
[0m10:26:55.826017 [debug] [MainThread]: Command end result
[0m10:26:55.954128 [debug] [MainThread]: Wrote artifact WritableManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\manifest.json
[0m10:26:55.955938 [debug] [MainThread]: Wrote artifact SemanticManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\semantic_manifest.json
[0m10:26:55.968682 [debug] [MainThread]: Wrote artifact RunExecutionResult to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\run_results.json
[0m10:26:55.974761 [debug] [MainThread]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=generate_catalog, idle-time=0s, language=None, compute-name=) - Creating connection
[0m10:26:55.974761 [debug] [MainThread]: Acquiring new databricks connection 'generate_catalog'
[0m10:26:55.975632 [info ] [MainThread]: Building catalog
[0m10:26:55.975632 [debug] [ThreadPool]: Databricks adapter: DatabricksDBTConnection(session-id=None, name=('hive_metastore', 'snapshots'), idle-time=0s, language=None, compute-name=) - Creating connection
[0m10:26:55.975632 [debug] [ThreadPool]: Acquiring new databricks connection '('hive_metastore', 'snapshots')'
[0m10:26:55.982571 [debug] [ThreadPool]: Using databricks connection "('hive_metastore', 'snapshots')"
[0m10:26:55.982973 [debug] [ThreadPool]: On ('hive_metastore', 'snapshots'): /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "('hive_metastore', 'snapshots')"} */

    
SELECT current_catalog()

  
[0m10:26:55.982973 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m10:26:56.297318 [debug] [ThreadPool]: Databricks adapter: Connection(session-id=09be0db5-b602-4186-b21c-7806d4fb1faa) - Created
[0m10:26:56.453316 [debug] [ThreadPool]: SQL status: OK in 0.470 seconds
[0m10:26:56.455079 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=09be0db5-b602-4186-b21c-7806d4fb1faa, command-id=abdd6a4f-5efb-4692-a1ae-3a4194bba13d) - Closing
[0m10:26:56.586592 [debug] [ThreadPool]: Using databricks connection "('hive_metastore', 'snapshots')"
[0m10:26:56.586592 [debug] [ThreadPool]: On ('hive_metastore', 'snapshots'): /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "('hive_metastore', 'snapshots')"} */

    
SHOW TABLE EXTENDED IN `hive_metastore`.`snapshots` LIKE 'salesorderdetail_snapshot|productmodel_snapshot|product_snapshot|customer_snapshot|salesorderheader_snapshot|address_snapshot|customeraddress_snapshot'

  
[0m10:26:59.312628 [debug] [ThreadPool]: SQL status: OK in 2.720 seconds
[0m10:26:59.320320 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=09be0db5-b602-4186-b21c-7806d4fb1faa, command-id=c03197fa-2517-48b8-9c1f-2cd738b4d726) - Closing
[0m10:26:59.410308 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly ('hive_metastore', 'snapshots'), now ('hive_metastore', 'saleslt'))
[0m10:26:59.410308 [debug] [ThreadPool]: Databricks adapter: DatabricksDBTConnection(session-id=09be0db5-b602-4186-b21c-7806d4fb1faa, name=('hive_metastore', 'saleslt'), idle-time=0.0s, language=None, compute-name=) - Reusing connection previously named ('hive_metastore', 'snapshots')
[0m10:26:59.416838 [debug] [ThreadPool]: Using databricks connection "('hive_metastore', 'saleslt')"
[0m10:26:59.416838 [debug] [ThreadPool]: On ('hive_metastore', 'saleslt'): /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "('hive_metastore', 'saleslt')"} */

    
SELECT current_catalog()

  
[0m10:26:59.603864 [debug] [ThreadPool]: SQL status: OK in 0.180 seconds
[0m10:26:59.603864 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=09be0db5-b602-4186-b21c-7806d4fb1faa, command-id=688c161a-dd39-47e1-9c13-ae2a52372b9c) - Closing
[0m10:26:59.756607 [debug] [ThreadPool]: Using databricks connection "('hive_metastore', 'saleslt')"
[0m10:26:59.756607 [debug] [ThreadPool]: On ('hive_metastore', 'saleslt'): /* {"app": "dbt", "dbt_version": "1.10.1", "dbt_databricks_version": "1.10.3", "databricks_sql_connector_version": "4.0.4", "profile_name": "medalion_dbt_spark", "target_name": "dev", "connection_name": "('hive_metastore', 'saleslt')"} */

    
SHOW TABLE EXTENDED IN `hive_metastore`.`saleslt` LIKE 'dim_product|productcategory|salesorderheader|customer|productmodel|product|sales|salesorderdetail|customeraddress|address|productdescription|dim_customer'

  
[0m10:27:01.136949 [debug] [ThreadPool]: SQL status: OK in 1.380 seconds
[0m10:27:01.136949 [debug] [ThreadPool]: Databricks adapter: Cursor(session-id=09be0db5-b602-4186-b21c-7806d4fb1faa, command-id=b5feb383-4ecb-4e42-ac62-11a5a89343a3) - Closing
[0m10:27:01.234912 [debug] [MainThread]: Wrote artifact CatalogArtifact to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\catalog.json
[0m10:27:01.270263 [debug] [MainThread]: Wrote artifact WritableManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\manifest.json
[0m10:27:01.276423 [debug] [MainThread]: Wrote artifact SemanticManifest to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\semantic_manifest.json
[0m10:27:01.276423 [info ] [MainThread]: Catalog written to D:\Academic-Project\Portofolio Data Engineer\medalion_dbt_spark\target\catalog.json
[0m10:27:01.276423 [debug] [MainThread]: Command `dbt docs generate` succeeded at 10:27:01.276423 after 12.22 seconds
[0m10:27:01.276423 [debug] [MainThread]: Connection 'generate_catalog' was properly closed.
[0m10:27:01.276423 [debug] [MainThread]: Connection '('hive_metastore', 'saleslt')' was properly closed.
[0m10:27:01.276423 [debug] [MainThread]: On ('hive_metastore', 'saleslt'): Close
[0m10:27:01.276423 [debug] [MainThread]: Databricks adapter: Connection(session-id=09be0db5-b602-4186-b21c-7806d4fb1faa) - Closing
[0m10:27:01.366091 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000022AD8026620>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000022AD7A670D0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x0000022AF52ECCD0>]}
[0m10:27:01.366091 [debug] [MainThread]: Flushing usage events
[0m10:27:02.482872 [debug] [MainThread]: An error was encountered while trying to flush usage events
[0m10:27:48.657431 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001D98A036650>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001D989202DA0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001D989202BC0>]}


============================== 10:27:48.664673 | b8a9aba6-4482-4b0c-a63d-73e3cce70cf5 ==============================
[0m10:27:48.664673 [info ] [MainThread]: Running with dbt=1.10.1
[0m10:27:48.664673 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'debug': 'False', 'fail_fast': 'False', 'log_path': 'D:\\Academic-Project\\Portofolio Data Engineer\\medalion_dbt_spark\\logs', 'version_check': 'True', 'profiles_dir': 'C:\\Users\\M S I\\.dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'None', 'warn_error_options': 'WarnErrorOptionsV2(error=[], warn=[], silence=[])', 'static_parser': 'True', 'introspect': 'True', 'log_format': 'default', 'target_path': 'None', 'invocation_command': 'dbt docs serve', 'send_anonymous_usage_stats': 'True'}
[0m10:27:49.413755 [debug] [MainThread]: Spark adapter: Setting pyhive.hive logging to ERROR
[0m10:27:49.413755 [debug] [MainThread]: Spark adapter: Setting thrift.transport logging to ERROR
[0m10:27:49.413755 [debug] [MainThread]: Spark adapter: Setting thrift.protocol logging to ERROR
[0m10:27:50.481850 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'b8a9aba6-4482-4b0c-a63d-73e3cce70cf5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001D9891CD690>]}
[0m10:27:50.572036 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'b8a9aba6-4482-4b0c-a63d-73e3cce70cf5', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001D98BBB7B20>]}
